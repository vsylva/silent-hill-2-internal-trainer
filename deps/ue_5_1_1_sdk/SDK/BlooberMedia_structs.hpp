#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlooberMedia

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK
{

// ScriptStruct BlooberMedia.BinkMediaPlayerMovieSceneEvalTemplateParams
// 0x0018 (0x0018 - 0x0000)
struct FBinkMediaPlayerMovieSceneEvalTemplateParams final
{
public:
	class UBinkMediaPlayer*                       MediaPlayer;                                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionStartFrame;                                 // 0x0008(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           SectionEndFrame;                                   // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           StartFrameOffset;                                  // 0x0014(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBinkMediaPlayerMovieSceneEvalTemplateParams) == 0x000008, "Wrong alignment on FBinkMediaPlayerMovieSceneEvalTemplateParams");
static_assert(sizeof(FBinkMediaPlayerMovieSceneEvalTemplateParams) == 0x000018, "Wrong size on FBinkMediaPlayerMovieSceneEvalTemplateParams");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplateParams, MediaPlayer) == 0x000000, "Member 'FBinkMediaPlayerMovieSceneEvalTemplateParams::MediaPlayer' has a wrong offset!");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplateParams, SectionStartFrame) == 0x000008, "Member 'FBinkMediaPlayerMovieSceneEvalTemplateParams::SectionStartFrame' has a wrong offset!");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplateParams, SectionEndFrame) == 0x00000C, "Member 'FBinkMediaPlayerMovieSceneEvalTemplateParams::SectionEndFrame' has a wrong offset!");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplateParams, bLooping) == 0x000010, "Member 'FBinkMediaPlayerMovieSceneEvalTemplateParams::bLooping' has a wrong offset!");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplateParams, StartFrameOffset) == 0x000014, "Member 'FBinkMediaPlayerMovieSceneEvalTemplateParams::StartFrameOffset' has a wrong offset!");

// ScriptStruct BlooberMedia.BinkMediaPlayerMovieSceneEvalTemplate
// 0x0018 (0x0038 - 0x0020)
struct FBinkMediaPlayerMovieSceneEvalTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FBinkMediaPlayerMovieSceneEvalTemplateParams Params;                                            // 0x0020(0x0018)(NoDestructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FBinkMediaPlayerMovieSceneEvalTemplate) == 0x000008, "Wrong alignment on FBinkMediaPlayerMovieSceneEvalTemplate");
static_assert(sizeof(FBinkMediaPlayerMovieSceneEvalTemplate) == 0x000038, "Wrong size on FBinkMediaPlayerMovieSceneEvalTemplate");
static_assert(offsetof(FBinkMediaPlayerMovieSceneEvalTemplate, Params) == 0x000020, "Member 'FBinkMediaPlayerMovieSceneEvalTemplate::Params' has a wrong offset!");

}

