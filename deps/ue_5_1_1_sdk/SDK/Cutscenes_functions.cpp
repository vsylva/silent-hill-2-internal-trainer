#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cutscenes

#include "Basic.hpp"

#include "Cutscenes_classes.hpp"
#include "Cutscenes_parameters.hpp"


namespace SDK
{

// Function Cutscenes.CutsceneCachedCharacterInterface.CachedActorDespawned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICutsceneCachedCharacterInterface::CachedActorDespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCachedCharacterInterface", "CachedActorDespawned");

	Params::CutsceneCachedCharacterInterface_CachedActorDespawned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCachedCharacterInterface.CachedActorDisabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICutsceneCachedCharacterInterface::CachedActorDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCachedCharacterInterface", "CachedActorDisabled");

	Params::CutsceneCachedCharacterInterface_CachedActorDisabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCachedCharacterInterface.CachedActorEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICutsceneCachedCharacterInterface::CachedActorEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCachedCharacterInterface", "CachedActorEnabled");

	Params::CutsceneCachedCharacterInterface_CachedActorEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCachedCharacterInterface.CachedActorSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ICutsceneCachedCharacterInterface::CachedActorSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCachedCharacterInterface", "CachedActorSpawned");

	Params::CutsceneCachedCharacterInterface_CachedActorSpawned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCharacterAnimInstance.CalculateFaceSlotAlpha
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCutsceneCharacterAnimInstance::CalculateFaceSlotAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCharacterAnimInstance", "CalculateFaceSlotAlpha");

	Params::CutsceneCharacterAnimInstance_CalculateFaceSlotAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCharacterAnimInstance.IsPlayingAnySlotAnimation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCutsceneCharacterAnimInstance::IsPlayingAnySlotAnimation(class FName SlotName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCharacterAnimInstance", "IsPlayingAnySlotAnimation");

	Params::CutsceneCharacterAnimInstance_IsPlayingAnySlotAnimation Parms{};

	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneCharacterPossessorInterface.CutsceneCharacterProxyPossessed
// (Event, Public, BlueprintEvent)

void ICutsceneCharacterPossessorInterface::CutsceneCharacterProxyPossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCharacterPossessorInterface", "CutsceneCharacterProxyPossessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneCharacterPossessorInterface.CutsceneCharacterProxyUnPossessed
// (Event, Public, BlueprintEvent)

void ICutsceneCharacterPossessorInterface::CutsceneCharacterProxyUnPossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneCharacterPossessorInterface", "CutsceneCharacterProxyUnPossessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutscenePlayer.Activate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACutscenePlayer::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "Activate");

	Params::CutscenePlayer_Activate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction Cutscenes.CutscenePlayer.CutsceneEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ACutscenePlayer::CutsceneEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "CutsceneEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction Cutscenes.CutscenePlayer.CutsceneFinishedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    WasSkiped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACutscenePlayer::CutsceneFinishedEvent__DelegateSignature(bool WasSkiped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "CutsceneFinishedEvent__DelegateSignature");

	Params::CutscenePlayer_CutsceneFinishedEvent__DelegateSignature Parms{};

	Parms.WasSkiped = WasSkiped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cutscenes.CutscenePlayer.Deactivate
// (Final, Native, Public, BlueprintCallable)

void ACutscenePlayer::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.IsCharacterBindedWithProxy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACutscenePlayer::IsCharacterBindedWithProxy(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "IsCharacterBindedWithProxy");

	Params::CutscenePlayer_IsCharacterBindedWithProxy Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction Cutscenes.CutscenePlayer.OnCutsceneCameraCutEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UCameraComponent*                 CameraComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACutscenePlayer::OnCutsceneCameraCutEvent__DelegateSignature(class UCameraComponent* CameraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnCutsceneCameraCutEvent__DelegateSignature");

	Params::CutscenePlayer_OnCutsceneCameraCutEvent__DelegateSignature Parms{};

	Parms.CameraComponent = CameraComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cutscenes.CutscenePlayer.OnLevelSequenceCameraCut
// (Final, Native, Protected)
// Parameters:
// class UCameraComponent*                 CameraComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACutscenePlayer::OnLevelSequenceCameraCut(class UCameraComponent* CameraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequenceCameraCut");

	Params::CutscenePlayer_OnLevelSequenceCameraCut Parms{};

	Parms.CameraComponent = CameraComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.OnLevelSequenceFinished
// (Final, Native, Protected)

void ACutscenePlayer::OnLevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.OnLevelSequencePause
// (Final, Native, Protected)

void ACutscenePlayer::OnLevelSequencePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequencePause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.OnLevelSequencePlay
// (Final, Native, Protected)

void ACutscenePlayer::OnLevelSequencePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequencePlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.OnLevelSequencePlayReverse
// (Final, Native, Protected)

void ACutscenePlayer::OnLevelSequencePlayReverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequencePlayReverse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.OnLevelSequenceStop
// (Final, Native, Protected)

void ACutscenePlayer::OnLevelSequenceStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "OnLevelSequenceStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutscenePlayer.UnbindCharacterWithProxy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACutscenePlayer::UnbindCharacterWithProxy(class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "UnbindCharacterWithProxy");

	Params::CutscenePlayer_UnbindCharacterWithProxy Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutscenePlayer.IsAlreadyPlayedOnce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACutscenePlayer::IsAlreadyPlayedOnce() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "IsAlreadyPlayedOnce");

	Params::CutscenePlayer_IsAlreadyPlayedOnce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutscenePlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACutscenePlayer::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutscenePlayer", "IsPlaying");

	Params::CutscenePlayer_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutsceneProxyToGameplayEventsRelay.IgnoreInputPose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Ignore                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutsceneProxyToGameplayEventsRelay::IgnoreInputPose(bool Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneProxyToGameplayEventsRelay", "IgnoreInputPose");

	Params::CutsceneProxyToGameplayEventsRelay_IgnoreInputPose Parms{};

	Parms.Ignore = Ignore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneProxyToGameplayEventsRelay.SetClothAnimDrive
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ClothName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        AnimDriveStiffness                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        AnimDriveDamping                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutsceneProxyToGameplayEventsRelay::SetClothAnimDrive(class FName ClothName, const struct FVector2D& AnimDriveStiffness, const struct FVector2D& AnimDriveDamping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneProxyToGameplayEventsRelay", "SetClothAnimDrive");

	Params::CutsceneProxyToGameplayEventsRelay_SetClothAnimDrive Parms{};

	Parms.ClothName = ClothName;
	Parms.AnimDriveStiffness = std::move(AnimDriveStiffness);
	Parms.AnimDriveDamping = std::move(AnimDriveDamping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.FadedOut
// (Final, Native, Protected, BlueprintCallable)

void UCutsceneSkipWidget::FadedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "FadedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.OnDebugTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ActualTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutsceneSkipWidget::OnDebugTick(float ActualTime, float TotalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnDebugTick");

	Params::CutsceneSkipWidget_OnDebugTick Parms{};

	Parms.ActualTime = ActualTime;
	Parms.TotalTime = TotalTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cutscenes.CutsceneSkipWidget.OnFadedOutAnim
// (Final, Native, Protected)

void UCutsceneSkipWidget::OnFadedOutAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnFadedOutAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.OnFadeInAnim
// (Final, Native, Protected)

void UCutsceneSkipWidget::OnFadeInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnFadeInAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.OnFadeOutEnd
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnFadeOutEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnFadeOutEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnFadeOutStart
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnFadeOutStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnFadeOutStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnHide
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnReset
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UCutsceneSkipWidget::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnShow
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnSkip
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnSkipCancel
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnSkipCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnSkipCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnSkipedFadeOutAnim
// (Final, Native, Protected)

void UCutsceneSkipWidget::OnSkipedFadeOutAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnSkipedFadeOutAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.OnSkipStart
// (Event, Protected, BlueprintEvent)

void UCutsceneSkipWidget::OnSkipStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnSkipStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cutscenes.CutsceneSkipWidget.OnSkipTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutsceneSkipWidget::OnSkipTick(float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "OnSkipTick");

	Params::CutsceneSkipWidget_OnSkipTick Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cutscenes.CutsceneSkipWidget.ResetApplied
// (Final, Native, Protected, BlueprintCallable)

void UCutsceneSkipWidget::ResetApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "ResetApplied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Cutscenes.CutsceneSkipWidget.GetCanSkip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCutsceneSkipWidget::GetCanSkip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CutsceneSkipWidget", "GetCanSkip");

	Params::CutsceneSkipWidget_GetCanSkip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Cutscenes.CutscenesLog.PrintStringToMessageLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELogMessageSeverity                     MessageSeverity                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCutscenesLog::PrintStringToMessageLog(const class UObject* WorldContextObject, const class FString& String, ELogMessageSeverity MessageSeverity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CutscenesLog", "PrintStringToMessageLog");

	Params::CutscenesLog_PrintStringToMessageLog Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.String = std::move(String);
	Parms.MessageSeverity = MessageSeverity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

