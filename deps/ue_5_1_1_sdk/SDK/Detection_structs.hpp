#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Detection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum Detection.EDetectableShapeDiscoveryScope
// NumValues: 0x0003
enum class EDetectableShapeDiscoveryScope : uint8
{
	Children                                 = 0,
	Actor                                    = 1,
	EDetectableShapeDiscoveryScope_MAX       = 2,
};

// Enum Detection.EDetectableShapeDiscoveryMethod
// NumValues: 0x0004
enum class EDetectableShapeDiscoveryMethod : uint8
{
	None                                     = 0,
	Manual                                   = 1,
	Automatic                                = 2,
	EDetectableShapeDiscoveryMethod_MAX      = 3,
};

// Enum Detection.ERaycastDetectableDistanceMethod
// NumValues: 0x0004
enum class ERaycastDetectableDistanceMethod : uint8
{
	Detector                                 = 0,
	HitLocation                              = 1,
	DetectableLocation                       = 2,
	ERaycastDetectableDistanceMethod_MAX     = 3,
};

// Enum Detection.EScreenDetectableStatus
// NumValues: 0x0004
enum class EScreenDetectableStatus : uint8
{
	NotDetected                              = 0,
	ScreenDetected                           = 1,
	TraceDetected                            = 2,
	EScreenDetectableStatus_MAX              = 3,
};

// Enum Detection.EScreenDetectableCheckQuality
// NumValues: 0x0004
enum class EScreenDetectableCheckQuality : uint8
{
	Center                                   = 0,
	Simple                                   = 1,
	Complex                                  = 2,
	EScreenDetectableCheckQuality_MAX        = 3,
};

// Enum Detection.ERaycastDetectorDistanceMethod
// NumValues: 0x0003
enum class ERaycastDetectorDistanceMethod : uint8
{
	HitLocation                              = 0,
	DetectableLocation                       = 1,
	ERaycastDetectorDistanceMethod_MAX       = 2,
};

// ScriptStruct Detection.RaycastDetectableChannelConfig
// 0x0020 (0x0020 - 0x0000)
struct FRaycastDetectableChannelConfig final
{
public:
	ECollisionChannel                             Channel;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERaycastDetectableDistanceMethod              DistanceMethod;                                    // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LimitDetectionRange;                               // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DetectionRange;                                    // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StartEnabled;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReportEvenIfRegistered;                            // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRaycastDetectableChannelConfig) == 0x000008, "Wrong alignment on FRaycastDetectableChannelConfig");
static_assert(sizeof(FRaycastDetectableChannelConfig) == 0x000020, "Wrong size on FRaycastDetectableChannelConfig");
static_assert(offsetof(FRaycastDetectableChannelConfig, Channel) == 0x000000, "Member 'FRaycastDetectableChannelConfig::Channel' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableChannelConfig, DistanceMethod) == 0x000001, "Member 'FRaycastDetectableChannelConfig::DistanceMethod' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableChannelConfig, LimitDetectionRange) == 0x000002, "Member 'FRaycastDetectableChannelConfig::LimitDetectionRange' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableChannelConfig, DetectionRange) == 0x000008, "Member 'FRaycastDetectableChannelConfig::DetectionRange' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableChannelConfig, StartEnabled) == 0x000018, "Member 'FRaycastDetectableChannelConfig::StartEnabled' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableChannelConfig, ReportEvenIfRegistered) == 0x000019, "Member 'FRaycastDetectableChannelConfig::ReportEvenIfRegistered' has a wrong offset!");

// ScriptStruct Detection.RaycastDetectableDetectEventData
// 0x0018 (0x0018 - 0x0000)
struct FRaycastDetectableDetectEventData final
{
public:
	class URaycastDetectableComponent*            Detectable;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Detector;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlreadyRegistered;                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRaycastDetectableDetectEventData) == 0x000008, "Wrong alignment on FRaycastDetectableDetectEventData");
static_assert(sizeof(FRaycastDetectableDetectEventData) == 0x000018, "Wrong size on FRaycastDetectableDetectEventData");
static_assert(offsetof(FRaycastDetectableDetectEventData, Detectable) == 0x000000, "Member 'FRaycastDetectableDetectEventData::Detectable' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableDetectEventData, Detector) == 0x000008, "Member 'FRaycastDetectableDetectEventData::Detector' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableDetectEventData, CollisionChannel) == 0x000010, "Member 'FRaycastDetectableDetectEventData::CollisionChannel' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableDetectEventData, AlreadyRegistered) == 0x000011, "Member 'FRaycastDetectableDetectEventData::AlreadyRegistered' has a wrong offset!");

// ScriptStruct Detection.RaycastDetectableLoseEventData
// 0x0018 (0x0018 - 0x0000)
struct FRaycastDetectableLoseEventData final
{
public:
	class URaycastDetectableComponent*            Detectable;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Detector;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRaycastDetectableLoseEventData) == 0x000008, "Wrong alignment on FRaycastDetectableLoseEventData");
static_assert(sizeof(FRaycastDetectableLoseEventData) == 0x000018, "Wrong size on FRaycastDetectableLoseEventData");
static_assert(offsetof(FRaycastDetectableLoseEventData, Detectable) == 0x000000, "Member 'FRaycastDetectableLoseEventData::Detectable' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableLoseEventData, Detector) == 0x000008, "Member 'FRaycastDetectableLoseEventData::Detector' has a wrong offset!");
static_assert(offsetof(FRaycastDetectableLoseEventData, CollisionChannel) == 0x000010, "Member 'FRaycastDetectableLoseEventData::CollisionChannel' has a wrong offset!");

// ScriptStruct Detection.RaycastDetectorTraceData
// 0x0120 (0x0120 - 0x0000)
struct alignas(0x08) FRaycastDetectorTraceData
{
public:
	bool                                          DrawDebugTrace;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DebugTraceColorMiss;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 DebugTraceColorHit;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugLifeTime;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugThickness;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugSphereSize;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERaycastDetectorDistanceMethod                DistanceMethod;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             TraceChannel;                                      // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TraceComplex;                                      // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IgnoreOwner;                                       // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x104];                                     // 0x001C(0x0104)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRaycastDetectorTraceData) == 0x000008, "Wrong alignment on FRaycastDetectorTraceData");
static_assert(sizeof(FRaycastDetectorTraceData) == 0x000120, "Wrong size on FRaycastDetectorTraceData");
static_assert(offsetof(FRaycastDetectorTraceData, DrawDebugTrace) == 0x000000, "Member 'FRaycastDetectorTraceData::DrawDebugTrace' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DebugTraceColorMiss) == 0x000004, "Member 'FRaycastDetectorTraceData::DebugTraceColorMiss' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DebugTraceColorHit) == 0x000008, "Member 'FRaycastDetectorTraceData::DebugTraceColorHit' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DebugLifeTime) == 0x00000C, "Member 'FRaycastDetectorTraceData::DebugLifeTime' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DebugThickness) == 0x000010, "Member 'FRaycastDetectorTraceData::DebugThickness' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DebugSphereSize) == 0x000014, "Member 'FRaycastDetectorTraceData::DebugSphereSize' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, DistanceMethod) == 0x000018, "Member 'FRaycastDetectorTraceData::DistanceMethod' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, TraceChannel) == 0x000019, "Member 'FRaycastDetectorTraceData::TraceChannel' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, TraceComplex) == 0x00001A, "Member 'FRaycastDetectorTraceData::TraceComplex' has a wrong offset!");
static_assert(offsetof(FRaycastDetectorTraceData, IgnoreOwner) == 0x00001B, "Member 'FRaycastDetectorTraceData::IgnoreOwner' has a wrong offset!");

}

