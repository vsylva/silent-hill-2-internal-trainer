#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlickeringLampEx_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SHProto_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.ApplyForceFromDamage
// 0x0030 (0x0030 - 0x0000)
struct FlickeringLampEx_Base_C_ApplyForceFromDamage final
{
public:
	struct FVector                                Force;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_ApplyForceFromDamage) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_ApplyForceFromDamage");
static_assert(sizeof(FlickeringLampEx_Base_C_ApplyForceFromDamage) == 0x000030, "Wrong size on FlickeringLampEx_Base_C_ApplyForceFromDamage");
static_assert(offsetof(FlickeringLampEx_Base_C_ApplyForceFromDamage, Force) == 0x000000, "Member 'FlickeringLampEx_Base_C_ApplyForceFromDamage::Force' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ApplyForceFromDamage, Location) == 0x000018, "Member 'FlickeringLampEx_Base_C_ApplyForceFromDamage::Location' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.Break
// 0x0038 (0x0038 - 0x0000)
struct FlickeringLampEx_Base_C_Break final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFlickeringLampEx_Base_C*               NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESHFlickerGroupState                          CallFunc_GetGroupState_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_Break) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_Break");
static_assert(sizeof(FlickeringLampEx_Base_C_Break) == 0x000038, "Wrong size on FlickeringLampEx_Base_C_Break");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, Component) == 0x000000, "Member 'FlickeringLampEx_Base_C_Break::Component' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, NewLocalVar_0) == 0x000008, "Member 'FlickeringLampEx_Base_C_Break::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_Array_Get_Item) == 0x000010, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_GetGroupState_ReturnValue) == 0x00001C, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_GetGroupState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001D, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, Temp_int_Variable) == 0x00002C, "Member 'FlickeringLampEx_Base_C_Break::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Break, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'FlickeringLampEx_Base_C_Break::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.EditorExternalTick
// 0x0008 (0x0008 - 0x0000)
struct FlickeringLampEx_Base_C_EditorExternalTick final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_EditorExternalTick) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_EditorExternalTick");
static_assert(sizeof(FlickeringLampEx_Base_C_EditorExternalTick) == 0x000008, "Wrong size on FlickeringLampEx_Base_C_EditorExternalTick");
static_assert(offsetof(FlickeringLampEx_Base_C_EditorExternalTick, DeltaSeconds) == 0x000000, "Member 'FlickeringLampEx_Base_C_EditorExternalTick::DeltaSeconds' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.ExecuteUbergraph_FlickeringLampEx_Base
// 0x02D8 (0x02D8 - 0x0000)
struct FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLightIntensityMultiplier_Result;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightIntensityMultiplier_Result_1;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurveBasedIntensity_Result;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightIntensityMultiplier_Result_2;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightIntensityMultiplier_Result_3;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightTemperature_Result;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DeltaSeconds;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLightIntensityMultiplier_Result_4;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightIntensityMultiplier_Result_5;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurveBasedIntensity_Result_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EditModeEnabled_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Force;                                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_State;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x00E0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0150(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ILightsInterface_C>    K2Node_DynamicCast_AsLights_Interface;             // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_1; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_1; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_2; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_2; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StepFlickersInEditor_DeltaSeconds_ImplicitCast; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_3; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_3; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_4; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_4; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base");
static_assert(sizeof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base) == 0x0002D8, "Wrong size on FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, EntryPoint) == 0x000000, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result) == 0x000008, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result_1) == 0x000010, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetCurveBasedIntensity_Result) == 0x000018, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetCurveBasedIntensity_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result_2) == 0x000030, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result_2' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result_3) == 0x000038, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result_3' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightTemperature_Result) == 0x000040, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightTemperature_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_EndPlayReason) == 0x000048, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_CustomEvent_DeltaSeconds) == 0x000050, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_SwitchEnum_CmpSuccess_1) == 0x000060, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result_4) == 0x000068, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result_4' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetLightIntensityMultiplier_Result_5) == 0x000070, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetLightIntensityMultiplier_Result_5' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetCurveBasedIntensity_Result_1) == 0x000078, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetCurveBasedIntensity_Result_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_DeltaSeconds) == 0x000090, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_RandomFloatInRange_ReturnValue) == 0x000098, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_EditModeEnabled_ReturnValue) == 0x0000A0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_EditModeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_Force) == 0x0000A8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_Location) == 0x0000C0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_State) == 0x0000D8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_Damage) == 0x0000DC, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_DamageType) == 0x0000E0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_HitLocation) == 0x0000E8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_HitNormal) == 0x000100, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_HitComponent) == 0x000118, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_BoneName) == 0x000120, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_ShotFromDirection) == 0x000128, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_InstigatedBy) == 0x000140, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_DamageCauser) == 0x000148, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_Event_HitInfo) == 0x000150, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000238, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000250, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_GetParentActor_ReturnValue) == 0x000268, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_DynamicCast_AsLights_Interface) == 0x000270, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_DynamicCast_AsLights_Interface' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000288, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, Temp_int_Variable) == 0x000290, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000294, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast) == 0x000298, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast) == 0x00029C, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_1) == 0x0002A0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_1) == 0x0002A4, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast) == 0x0002A8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_2) == 0x0002AC, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_2) == 0x0002B0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast) == 0x0002B4, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_StepFlickersInEditor_DeltaSeconds_ImplicitCast) == 0x0002B8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_StepFlickersInEditor_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_3) == 0x0002BC, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_3) == 0x0002C0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_4) == 0x0002C4, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_4) == 0x0002C8, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0002D0, "Member 'FlickeringLampEx_Base_C_ExecuteUbergraph_FlickeringLampEx_Base::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct FlickeringLampEx_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on FlickeringLampEx_Base_C_ReceiveEndPlay");
static_assert(sizeof(FlickeringLampEx_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on FlickeringLampEx_Base_C_ReceiveEndPlay");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'FlickeringLampEx_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.ReceivePointDamage
// 0x0160 (0x0160 - 0x0000)
struct FlickeringLampEx_Base_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FlickeringLampEx_Base_C_ReceivePointDamage) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_ReceivePointDamage");
static_assert(sizeof(FlickeringLampEx_Base_C_ReceivePointDamage) == 0x000160, "Wrong size on FlickeringLampEx_Base_C_ReceivePointDamage");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, Damage) == 0x000000, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, HitNormal) == 0x000028, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, HitComponent) == 0x000040, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, BoneName) == 0x000048, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, ShotFromDirection) == 0x000050, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, InstigatedBy) == 0x000068, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, DamageCauser) == 0x000070, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceivePointDamage, HitInfo) == 0x000078, "Member 'FlickeringLampEx_Base_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FlickeringLampEx_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on FlickeringLampEx_Base_C_ReceiveTick");
static_assert(sizeof(FlickeringLampEx_Base_C_ReceiveTick) == 0x000004, "Wrong size on FlickeringLampEx_Base_C_ReceiveTick");
static_assert(offsetof(FlickeringLampEx_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FlickeringLampEx_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.Reset Intensities
// 0x0010 (0x0010 - 0x0000)
struct FlickeringLampEx_Base_C_Reset_Intensities final
{
public:
	double                                        CallFunc_GetLightIntensityMultiplier_Result;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_Reset_Intensities) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_Reset_Intensities");
static_assert(sizeof(FlickeringLampEx_Base_C_Reset_Intensities) == 0x000010, "Wrong size on FlickeringLampEx_Base_C_Reset_Intensities");
static_assert(offsetof(FlickeringLampEx_Base_C_Reset_Intensities, CallFunc_GetLightIntensityMultiplier_Result) == 0x000000, "Member 'FlickeringLampEx_Base_C_Reset_Intensities::CallFunc_GetLightIntensityMultiplier_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Reset_Intensities, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast) == 0x000008, "Member 'FlickeringLampEx_Base_C_Reset_Intensities::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_Reset_Intensities, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast) == 0x00000C, "Member 'FlickeringLampEx_Base_C_Reset_Intensities::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.RestoreBrokenGroups
// 0x0038 (0x0038 - 0x0000)
struct FlickeringLampEx_Base_C_RestoreBrokenGroups final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetNumberOfBrokenComponents_ReturnValue;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESHFlickerGroupState                          CallFunc_GetGroupState_ReturnValue;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_RestoreBrokenGroups) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_RestoreBrokenGroups");
static_assert(sizeof(FlickeringLampEx_Base_C_RestoreBrokenGroups) == 0x000038, "Wrong size on FlickeringLampEx_Base_C_RestoreBrokenGroups");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_GetNumberOfBrokenComponents_ReturnValue) == 0x000020, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_GetNumberOfBrokenComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Array_Get_Item) == 0x000028, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_GetGroupState_ReturnValue) == 0x000035, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_GetGroupState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_Array_Contains_ReturnValue) == 0x000036, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_RestoreBrokenGroups, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000037, "Member 'FlickeringLampEx_Base_C_RestoreBrokenGroups::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.SetLightsState
// 0x0001 (0x0001 - 0x0000)
struct FlickeringLampEx_Base_C_SetLightsState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_SetLightsState) == 0x000001, "Wrong alignment on FlickeringLampEx_Base_C_SetLightsState");
static_assert(sizeof(FlickeringLampEx_Base_C_SetLightsState) == 0x000001, "Wrong size on FlickeringLampEx_Base_C_SetLightsState");
static_assert(offsetof(FlickeringLampEx_Base_C_SetLightsState, State) == 0x000000, "Member 'FlickeringLampEx_Base_C_SetLightsState::State' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.UpdateBreakable
// 0x0038 (0x0038 - 0x0000)
struct FlickeringLampEx_Base_C_UpdateBreakable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USHBreakableMeshComponent*>      CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USHBreakableMeshComponent*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_UpdateBreakable) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_UpdateBreakable");
static_assert(sizeof(FlickeringLampEx_Base_C_UpdateBreakable) == 0x000038, "Wrong size on FlickeringLampEx_Base_C_UpdateBreakable");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_Array_Get_Item) == 0x000020, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateBreakable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'FlickeringLampEx_Base_C_UpdateBreakable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.UpdateParameters
// 0x0020 (0x0020 - 0x0000)
struct FlickeringLampEx_Base_C_UpdateParameters final
{
public:
	float                                         CallFunc_UpdateNativeParameters_ShutdownIntensity_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_BlinkingMax_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_BlinkingMin_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_LightIntensityMax_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_LightIntensityMin_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_GentleShutdownTime_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_ChangeTimeMax_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeParameters_ChangeTimeMin_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_UpdateParameters) == 0x000004, "Wrong alignment on FlickeringLampEx_Base_C_UpdateParameters");
static_assert(sizeof(FlickeringLampEx_Base_C_UpdateParameters) == 0x000020, "Wrong size on FlickeringLampEx_Base_C_UpdateParameters");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_ShutdownIntensity_ImplicitCast) == 0x000000, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_ShutdownIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_BlinkingMax_ImplicitCast) == 0x000004, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_BlinkingMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_BlinkingMin_ImplicitCast) == 0x000008, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_BlinkingMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_LightIntensityMax_ImplicitCast) == 0x00000C, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_LightIntensityMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_LightIntensityMin_ImplicitCast) == 0x000010, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_LightIntensityMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_GentleShutdownTime_ImplicitCast) == 0x000014, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_GentleShutdownTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_ChangeTimeMax_ImplicitCast) == 0x000018, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_ChangeTimeMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UpdateParameters, CallFunc_UpdateNativeParameters_ChangeTimeMin_ImplicitCast) == 0x00001C, "Member 'FlickeringLampEx_Base_C_UpdateParameters::CallFunc_UpdateNativeParameters_ChangeTimeMin_ImplicitCast' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct FlickeringLampEx_Base_C_UserConstructionScript final
{
public:
	double                                        CallFunc_GetLightIntensityMultiplier_Result;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightIntensityMultiplier_Result_1;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetLightTemperature_Result;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_UserConstructionScript");
static_assert(sizeof(FlickeringLampEx_Base_C_UserConstructionScript) == 0x000028, "Wrong size on FlickeringLampEx_Base_C_UserConstructionScript");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_GetLightIntensityMultiplier_Result) == 0x000000, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_GetLightIntensityMultiplier_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_GetLightIntensityMultiplier_Result_1) == 0x000008, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_GetLightIntensityMultiplier_Result_1' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_GetLightTemperature_Result) == 0x000010, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_GetLightTemperature_Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast) == 0x000018, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_UpdateNativeFlickers_ExternalScaleLight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast) == 0x00001C, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_UpdateNativeFlickers_ExternalScaleMaterial_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast) == 0x000020, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_PrepareFlickerGroups_IntensityScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_UserConstructionScript, CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast) == 0x000024, "Member 'FlickeringLampEx_Base_C_UserConstructionScript::CallFunc_PrepareFlickerGroups_Temperature_ImplicitCast' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.GetCurveBasedIntensity
// 0x0080 (0x0080 - 0x0000)
struct FlickeringLampEx_Base_C_GetCurveBasedIntensity final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_GetCurveBasedIntensity) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_GetCurveBasedIntensity");
static_assert(sizeof(FlickeringLampEx_Base_C_GetCurveBasedIntensity) == 0x000080, "Wrong size on FlickeringLampEx_Base_C_GetCurveBasedIntensity");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, Result) == 0x000000, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::Result' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_GetTimeRange_MinTime) == 0x00000C, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_GetTimeRange_MaxTime) == 0x000010, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000030, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_GetFloatValue_ReturnValue) == 0x000040, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_SelectFloat_A_ImplicitCast) == 0x000058, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000070, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlickeringLampEx_Base_C_GetCurveBasedIntensity, CallFunc_FMax_A_ImplicitCast) == 0x000078, "Member 'FlickeringLampEx_Base_C_GetCurveBasedIntensity::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.GetLightIntensityMultiplier
// 0x0008 (0x0008 - 0x0000)
struct FlickeringLampEx_Base_C_GetLightIntensityMultiplier final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_GetLightIntensityMultiplier) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_GetLightIntensityMultiplier");
static_assert(sizeof(FlickeringLampEx_Base_C_GetLightIntensityMultiplier) == 0x000008, "Wrong size on FlickeringLampEx_Base_C_GetLightIntensityMultiplier");
static_assert(offsetof(FlickeringLampEx_Base_C_GetLightIntensityMultiplier, Result) == 0x000000, "Member 'FlickeringLampEx_Base_C_GetLightIntensityMultiplier::Result' has a wrong offset!");

// Function FlickeringLampEx_Base.FlickeringLampEx_Base_C.GetLightTemperature
// 0x0008 (0x0008 - 0x0000)
struct FlickeringLampEx_Base_C_GetLightTemperature final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlickeringLampEx_Base_C_GetLightTemperature) == 0x000008, "Wrong alignment on FlickeringLampEx_Base_C_GetLightTemperature");
static_assert(sizeof(FlickeringLampEx_Base_C_GetLightTemperature) == 0x000008, "Wrong size on FlickeringLampEx_Base_C_GetLightTemperature");
static_assert(offsetof(FlickeringLampEx_Base_C_GetLightTemperature, Result) == 0x000000, "Member 'FlickeringLampEx_Base_C_GetLightTemperature::Result' has a wrong offset!");

}

