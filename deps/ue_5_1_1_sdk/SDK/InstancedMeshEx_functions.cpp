#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InstancedMeshEx

#include "Basic.hpp"

#include "InstancedMeshEx_classes.hpp"
#include "InstancedMeshEx_parameters.hpp"


namespace SDK
{

// Function InstancedMeshEx.AnimatedProceduralMeshActor.ImportMeshes
// (Final, Native, Public, BlueprintCallable)

void AAnimatedProceduralMeshActor::ImportMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimatedProceduralMeshActor", "ImportMeshes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InstancedMeshEx.AnimatedProceduralMeshComponent.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UAnimatedProceduralMeshComponent::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimatedProceduralMeshComponent", "GetDynamicMaterial");

	Params::AnimatedProceduralMeshComponent_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function InstancedMeshEx.AnimatedProceduralMeshComponent.ImportMeshes
// (Final, Native, Public, BlueprintCallable)

void UAnimatedProceduralMeshComponent::ImportMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimatedProceduralMeshComponent", "ImportMeshes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function InstancedMeshEx.PaintableStaticMeshComponent.ClearPainting
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           PaintColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AlphaMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaintableStaticMeshComponent::ClearPainting(const struct FColor& PaintColor, float AlphaMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaintableStaticMeshComponent", "ClearPainting");

	Params::PaintableStaticMeshComponent_ClearPainting Parms{};

	Parms.PaintColor = std::move(PaintColor);
	Parms.AlphaMultiplier = AlphaMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InstancedMeshEx.PaintableStaticMeshComponent.PaintSphere
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          SphereCenter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SphereRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           PaintColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AlphaMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FalloffExponent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AdditivePainting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPaintableStaticMeshComponent::PaintSphere(const struct FVector& SphereCenter, float SphereRadius, const struct FColor& PaintColor, float AlphaMultiplier, float FalloffExponent, bool AdditivePainting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PaintableStaticMeshComponent", "PaintSphere");

	Params::PaintableStaticMeshComponent_PaintSphere Parms{};

	Parms.SphereCenter = std::move(SphereCenter);
	Parms.SphereRadius = SphereRadius;
	Parms.PaintColor = std::move(PaintColor);
	Parms.AlphaMultiplier = AlphaMultiplier;
	Parms.FalloffExponent = FalloffExponent;
	Parms.AdditivePainting = AdditivePainting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function InstancedMeshEx.InstancedMeshExComponent.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UInstancedMeshExComponent::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstancedMeshExComponent", "GetDynamicMaterial");

	Params::InstancedMeshExComponent_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

