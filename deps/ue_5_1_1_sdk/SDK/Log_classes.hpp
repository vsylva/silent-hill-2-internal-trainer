#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Log

#include "Basic.hpp"

#include "Log_structs.hpp"
#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class Log.LogConfig
// 0x0058 (0x0088 - 0x0030)
class ULogConfig final : public UDataAsset
{
public:
	bool                                          UseGlobalVerbosity;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELogCustomVerbosity                           GlobalVerbosity;                                   // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          EnableMessageLogWarnings;                          // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          EnableMessageLogErrors;                            // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FLogCategoryConfig>  Config;                                            // 0x0038(0x0050)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LogConfig">();
	}
	static class ULogConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULogConfig>();
	}
};
static_assert(alignof(ULogConfig) == 0x000008, "Wrong alignment on ULogConfig");
static_assert(sizeof(ULogConfig) == 0x000088, "Wrong size on ULogConfig");
static_assert(offsetof(ULogConfig, UseGlobalVerbosity) == 0x000030, "Member 'ULogConfig::UseGlobalVerbosity' has a wrong offset!");
static_assert(offsetof(ULogConfig, GlobalVerbosity) == 0x000031, "Member 'ULogConfig::GlobalVerbosity' has a wrong offset!");
static_assert(offsetof(ULogConfig, EnableMessageLogWarnings) == 0x000032, "Member 'ULogConfig::EnableMessageLogWarnings' has a wrong offset!");
static_assert(offsetof(ULogConfig, EnableMessageLogErrors) == 0x000033, "Member 'ULogConfig::EnableMessageLogErrors' has a wrong offset!");
static_assert(offsetof(ULogConfig, Config) == 0x000038, "Member 'ULogConfig::Config' has a wrong offset!");

// Class Log.LogSettings
// 0x0030 (0x0068 - 0x0038)
class ULogSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class ULogConfig>              LogConfig;                                         // 0x0038(0x0030)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LogSettings">();
	}
	static class ULogSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULogSettings>();
	}
};
static_assert(alignof(ULogSettings) == 0x000008, "Wrong alignment on ULogSettings");
static_assert(sizeof(ULogSettings) == 0x000068, "Wrong size on ULogSettings");
static_assert(offsetof(ULogSettings, LogConfig) == 0x000038, "Member 'ULogSettings::LogConfig' has a wrong offset!");

}

