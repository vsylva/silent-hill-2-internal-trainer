#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FoliageStamps

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct FoliageStamps.FoliageInstanceInfo
// 0x0048 (0x0048 - 0x0000)
struct FFoliageInstanceInfo final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFoliageInstanceInfo) == 0x000008, "Wrong alignment on FFoliageInstanceInfo");
static_assert(sizeof(FFoliageInstanceInfo) == 0x000048, "Wrong size on FFoliageInstanceInfo");
static_assert(offsetof(FFoliageInstanceInfo, Location) == 0x000000, "Member 'FFoliageInstanceInfo::Location' has a wrong offset!");
static_assert(offsetof(FFoliageInstanceInfo, Rotation) == 0x000018, "Member 'FFoliageInstanceInfo::Rotation' has a wrong offset!");
static_assert(offsetof(FFoliageInstanceInfo, Scale3D) == 0x000030, "Member 'FFoliageInstanceInfo::Scale3D' has a wrong offset!");

// ScriptStruct FoliageStamps.FoliageItemInfo
// 0x0020 (0x0020 - 0x0000)
struct FFoliageItemInfo final
{
public:
	class FString                                 FoliageType;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFoliageInstanceInfo>           Instances;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFoliageItemInfo) == 0x000008, "Wrong alignment on FFoliageItemInfo");
static_assert(sizeof(FFoliageItemInfo) == 0x000020, "Wrong size on FFoliageItemInfo");
static_assert(offsetof(FFoliageItemInfo, FoliageType) == 0x000000, "Member 'FFoliageItemInfo::FoliageType' has a wrong offset!");
static_assert(offsetof(FFoliageItemInfo, Instances) == 0x000010, "Member 'FFoliageItemInfo::Instances' has a wrong offset!");

// ScriptStruct FoliageStamps.FoliageStampPreset
// 0x0040 (0x0048 - 0x0008)
struct FFoliageStampPreset final : public FTableRowBase
{
public:
	class FString                                 BrushUniqueName;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Extent;                                            // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowRotation;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFoliageItemInfo>               Foliages;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFoliageStampPreset) == 0x000008, "Wrong alignment on FFoliageStampPreset");
static_assert(sizeof(FFoliageStampPreset) == 0x000048, "Wrong size on FFoliageStampPreset");
static_assert(offsetof(FFoliageStampPreset, BrushUniqueName) == 0x000008, "Member 'FFoliageStampPreset::BrushUniqueName' has a wrong offset!");
static_assert(offsetof(FFoliageStampPreset, Extent) == 0x000018, "Member 'FFoliageStampPreset::Extent' has a wrong offset!");
static_assert(offsetof(FFoliageStampPreset, AllowRotation) == 0x000030, "Member 'FFoliageStampPreset::AllowRotation' has a wrong offset!");
static_assert(offsetof(FFoliageStampPreset, Foliages) == 0x000038, "Member 'FFoliageStampPreset::Foliages' has a wrong offset!");

}

