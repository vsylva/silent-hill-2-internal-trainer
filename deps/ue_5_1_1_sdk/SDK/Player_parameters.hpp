#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Player.BasicCharacter.GetBasicInput
// 0x0008 (0x0008 - 0x0000)
struct BasicCharacter_GetBasicInput final
{
public:
	class UBasicInputComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BasicCharacter_GetBasicInput) == 0x000008, "Wrong alignment on BasicCharacter_GetBasicInput");
static_assert(sizeof(BasicCharacter_GetBasicInput) == 0x000008, "Wrong size on BasicCharacter_GetBasicInput");
static_assert(offsetof(BasicCharacter_GetBasicInput, ReturnValue) == 0x000000, "Member 'BasicCharacter_GetBasicInput::ReturnValue' has a wrong offset!");

// Function Player.BasicCharacter.GetBasicMovement
// 0x0008 (0x0008 - 0x0000)
struct BasicCharacter_GetBasicMovement final
{
public:
	class UBasicCharacterMovementComponent*       ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BasicCharacter_GetBasicMovement) == 0x000008, "Wrong alignment on BasicCharacter_GetBasicMovement");
static_assert(sizeof(BasicCharacter_GetBasicMovement) == 0x000008, "Wrong size on BasicCharacter_GetBasicMovement");
static_assert(offsetof(BasicCharacter_GetBasicMovement, ReturnValue) == 0x000000, "Member 'BasicCharacter_GetBasicMovement::ReturnValue' has a wrong offset!");

// Function Player.BInputAction.GetLastPressedKey
// 0x0018 (0x0018 - 0x0000)
struct BInputAction_GetLastPressedKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAction_GetLastPressedKey) == 0x000008, "Wrong alignment on BInputAction_GetLastPressedKey");
static_assert(sizeof(BInputAction_GetLastPressedKey) == 0x000018, "Wrong size on BInputAction_GetLastPressedKey");
static_assert(offsetof(BInputAction_GetLastPressedKey, ReturnValue) == 0x000000, "Member 'BInputAction_GetLastPressedKey::ReturnValue' has a wrong offset!");

// Function Player.BInputAction.GetRepeatCount
// 0x0004 (0x0004 - 0x0000)
struct BInputAction_GetRepeatCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAction_GetRepeatCount) == 0x000004, "Wrong alignment on BInputAction_GetRepeatCount");
static_assert(sizeof(BInputAction_GetRepeatCount) == 0x000004, "Wrong size on BInputAction_GetRepeatCount");
static_assert(offsetof(BInputAction_GetRepeatCount, ReturnValue) == 0x000000, "Member 'BInputAction_GetRepeatCount::ReturnValue' has a wrong offset!");

// Function Player.BInputAction.IsPressed
// 0x0001 (0x0001 - 0x0000)
struct BInputAction_IsPressed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAction_IsPressed) == 0x000001, "Wrong alignment on BInputAction_IsPressed");
static_assert(sizeof(BInputAction_IsPressed) == 0x000001, "Wrong size on BInputAction_IsPressed");
static_assert(offsetof(BInputAction_IsPressed, ReturnValue) == 0x000000, "Member 'BInputAction_IsPressed::ReturnValue' has a wrong offset!");

// Function Player.BInputAction.IsReleased
// 0x0001 (0x0001 - 0x0000)
struct BInputAction_IsReleased final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAction_IsReleased) == 0x000001, "Wrong alignment on BInputAction_IsReleased");
static_assert(sizeof(BInputAction_IsReleased) == 0x000001, "Wrong size on BInputAction_IsReleased");
static_assert(offsetof(BInputAction_IsReleased, ReturnValue) == 0x000000, "Member 'BInputAction_IsReleased::ReturnValue' has a wrong offset!");

// Function Player.BInputAxis.GetAxisName
// 0x0008 (0x0008 - 0x0000)
struct BInputAxis_GetAxisName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAxis_GetAxisName) == 0x000004, "Wrong alignment on BInputAxis_GetAxisName");
static_assert(sizeof(BInputAxis_GetAxisName) == 0x000008, "Wrong size on BInputAxis_GetAxisName");
static_assert(offsetof(BInputAxis_GetAxisName, ReturnValue) == 0x000000, "Member 'BInputAxis_GetAxisName::ReturnValue' has a wrong offset!");

// Function Player.BInputAxis.GetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct BInputAxis_GetCurrentValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputAxis_GetCurrentValue) == 0x000004, "Wrong alignment on BInputAxis_GetCurrentValue");
static_assert(sizeof(BInputAxis_GetCurrentValue) == 0x000004, "Wrong size on BInputAxis_GetCurrentValue");
static_assert(offsetof(BInputAxis_GetCurrentValue, ReturnValue) == 0x000000, "Member 'BInputAxis_GetCurrentValue::ReturnValue' has a wrong offset!");

// Function Player.BInputMovement.SetCurrentValue
// 0x0018 (0x0018 - 0x0000)
struct BInputMovement_SetCurrentValue final
{
public:
	struct FVector                                NextValue;                                         // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputMovement_SetCurrentValue) == 0x000008, "Wrong alignment on BInputMovement_SetCurrentValue");
static_assert(sizeof(BInputMovement_SetCurrentValue) == 0x000018, "Wrong size on BInputMovement_SetCurrentValue");
static_assert(offsetof(BInputMovement_SetCurrentValue, NextValue) == 0x000000, "Member 'BInputMovement_SetCurrentValue::NextValue' has a wrong offset!");

// Function Player.BInputTwoAxes.GetCurrentValue
// 0x0010 (0x0010 - 0x0000)
struct BInputTwoAxes_GetCurrentValue final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputTwoAxes_GetCurrentValue) == 0x000008, "Wrong alignment on BInputTwoAxes_GetCurrentValue");
static_assert(sizeof(BInputTwoAxes_GetCurrentValue) == 0x000010, "Wrong size on BInputTwoAxes_GetCurrentValue");
static_assert(offsetof(BInputTwoAxes_GetCurrentValue, ReturnValue) == 0x000000, "Member 'BInputTwoAxes_GetCurrentValue::ReturnValue' has a wrong offset!");

// Function Player.BInputTwoAxes.GetFirstAxisName
// 0x0008 (0x0008 - 0x0000)
struct BInputTwoAxes_GetFirstAxisName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputTwoAxes_GetFirstAxisName) == 0x000004, "Wrong alignment on BInputTwoAxes_GetFirstAxisName");
static_assert(sizeof(BInputTwoAxes_GetFirstAxisName) == 0x000008, "Wrong size on BInputTwoAxes_GetFirstAxisName");
static_assert(offsetof(BInputTwoAxes_GetFirstAxisName, ReturnValue) == 0x000000, "Member 'BInputTwoAxes_GetFirstAxisName::ReturnValue' has a wrong offset!");

// Function Player.BInputTwoAxes.GetSecondAxisName
// 0x0008 (0x0008 - 0x0000)
struct BInputTwoAxes_GetSecondAxisName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BInputTwoAxes_GetSecondAxisName) == 0x000004, "Wrong alignment on BInputTwoAxes_GetSecondAxisName");
static_assert(sizeof(BInputTwoAxes_GetSecondAxisName) == 0x000008, "Wrong size on BInputTwoAxes_GetSecondAxisName");
static_assert(offsetof(BInputTwoAxes_GetSecondAxisName, ReturnValue) == 0x000000, "Member 'BInputTwoAxes_GetSecondAxisName::ReturnValue' has a wrong offset!");

// Function Player.InputEventState.Consume
// 0x0010 (0x0010 - 0x0000)
struct InputEventState_Consume final
{
public:
	class UObject*                                NewConsumer;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InputEventState_Consume) == 0x000008, "Wrong alignment on InputEventState_Consume");
static_assert(sizeof(InputEventState_Consume) == 0x000010, "Wrong size on InputEventState_Consume");
static_assert(offsetof(InputEventState_Consume, NewConsumer) == 0x000000, "Member 'InputEventState_Consume::NewConsumer' has a wrong offset!");
static_assert(offsetof(InputEventState_Consume, ReturnValue) == 0x000008, "Member 'InputEventState_Consume::ReturnValue' has a wrong offset!");

// Function Player.InputEventState.GetConsumer
// 0x0008 (0x0008 - 0x0000)
struct InputEventState_GetConsumer final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputEventState_GetConsumer) == 0x000008, "Wrong alignment on InputEventState_GetConsumer");
static_assert(sizeof(InputEventState_GetConsumer) == 0x000008, "Wrong size on InputEventState_GetConsumer");
static_assert(offsetof(InputEventState_GetConsumer, ReturnValue) == 0x000000, "Member 'InputEventState_GetConsumer::ReturnValue' has a wrong offset!");

// Function Player.InputEventState.IsConsumed
// 0x0001 (0x0001 - 0x0000)
struct InputEventState_IsConsumed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InputEventState_IsConsumed) == 0x000001, "Wrong alignment on InputEventState_IsConsumed");
static_assert(sizeof(InputEventState_IsConsumed) == 0x000001, "Wrong size on InputEventState_IsConsumed");
static_assert(offsetof(InputEventState_IsConsumed, ReturnValue) == 0x000000, "Member 'InputEventState_IsConsumed::ReturnValue' has a wrong offset!");

}

