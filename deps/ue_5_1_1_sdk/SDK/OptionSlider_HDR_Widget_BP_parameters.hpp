#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionSlider_HDR_Widget_BP

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OptionSlider_HDR_Widget_BP.OptionSlider_HDR_Widget_BP_C.ExecuteUbergraph_OptionSlider_HDR_Widget_BP
// 0x0078 (0x0078 - 0x0000)
struct OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x0010(0x0018)(ConstParm)
	bool                                          K2Node_Event_IsActive;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Value_1;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WasChanged_1;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Value;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_WasChanged;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x003C(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0058(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP) == 0x000008, "Wrong alignment on OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP");
static_assert(sizeof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP) == 0x000078, "Wrong size on OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, EntryPoint) == 0x000000, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_bool_Variable) == 0x000004, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_byte_Variable) == 0x000005, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_byte_Variable_1) == 0x000006, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_bool_Variable_1) == 0x000007, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_byte_Variable_2) == 0x000008, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_byte_Variable_3) == 0x000009, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, Temp_bool_Variable_2) == 0x00000A, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_Text) == 0x000010, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_IsActive) == 0x000028, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_IsActive' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Select_Default) == 0x000029, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_Value_1) == 0x00002C, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_WasChanged_1) == 0x000030, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_WasChanged_1' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_Value) == 0x000034, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Event_WasChanged) == 0x000038, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Event_WasChanged' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Select_Default_1) == 0x00003C, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, K2Node_Select_Default_2) == 0x000050, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000058, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000070, "Member 'OptionSlider_HDR_Widget_BP_C_ExecuteUbergraph_OptionSlider_HDR_Widget_BP::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function OptionSlider_HDR_Widget_BP.OptionSlider_HDR_Widget_BP_C.OnLabelTextChanged
// 0x0018 (0x0018 - 0x0000)
struct OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged) == 0x000008, "Wrong alignment on OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged");
static_assert(sizeof(OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged) == 0x000018, "Wrong size on OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged, Text) == 0x000000, "Member 'OptionSlider_HDR_Widget_BP_C_OnLabelTextChanged::Text' has a wrong offset!");

// Function OptionSlider_HDR_Widget_BP.OptionSlider_HDR_Widget_BP_C.OnActivated
// 0x0001 (0x0001 - 0x0000)
struct OptionSlider_HDR_Widget_BP_C_OnActivated final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionSlider_HDR_Widget_BP_C_OnActivated) == 0x000001, "Wrong alignment on OptionSlider_HDR_Widget_BP_C_OnActivated");
static_assert(sizeof(OptionSlider_HDR_Widget_BP_C_OnActivated) == 0x000001, "Wrong size on OptionSlider_HDR_Widget_BP_C_OnActivated");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnActivated, IsActive) == 0x000000, "Member 'OptionSlider_HDR_Widget_BP_C_OnActivated::IsActive' has a wrong offset!");

// Function OptionSlider_HDR_Widget_BP.OptionSlider_HDR_Widget_BP_C.OnFValueChanged
// 0x0008 (0x0008 - 0x0000)
struct OptionSlider_HDR_Widget_BP_C_OnFValueChanged final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasChanged;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionSlider_HDR_Widget_BP_C_OnFValueChanged) == 0x000004, "Wrong alignment on OptionSlider_HDR_Widget_BP_C_OnFValueChanged");
static_assert(sizeof(OptionSlider_HDR_Widget_BP_C_OnFValueChanged) == 0x000008, "Wrong size on OptionSlider_HDR_Widget_BP_C_OnFValueChanged");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnFValueChanged, Value) == 0x000000, "Member 'OptionSlider_HDR_Widget_BP_C_OnFValueChanged::Value' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnFValueChanged, WasChanged) == 0x000004, "Member 'OptionSlider_HDR_Widget_BP_C_OnFValueChanged::WasChanged' has a wrong offset!");

// Function OptionSlider_HDR_Widget_BP.OptionSlider_HDR_Widget_BP_C.OnValueChanged
// 0x0008 (0x0008 - 0x0000)
struct OptionSlider_HDR_Widget_BP_C_OnValueChanged final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasChanged;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionSlider_HDR_Widget_BP_C_OnValueChanged) == 0x000004, "Wrong alignment on OptionSlider_HDR_Widget_BP_C_OnValueChanged");
static_assert(sizeof(OptionSlider_HDR_Widget_BP_C_OnValueChanged) == 0x000008, "Wrong size on OptionSlider_HDR_Widget_BP_C_OnValueChanged");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnValueChanged, Value) == 0x000000, "Member 'OptionSlider_HDR_Widget_BP_C_OnValueChanged::Value' has a wrong offset!");
static_assert(offsetof(OptionSlider_HDR_Widget_BP_C_OnValueChanged, WasChanged) == 0x000004, "Member 'OptionSlider_HDR_Widget_BP_C_OnValueChanged::WasChanged' has a wrong offset!");

}

