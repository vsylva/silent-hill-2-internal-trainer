#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dialog

#include "Basic.hpp"

#include "Dialog_classes.hpp"
#include "Dialog_parameters.hpp"


namespace SDK
{

// Function Dialog.FlowAction.ActionFinish
// (Final, Native, Public, BlueprintCallable)

void UFlowAction::ActionFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowAction", "ActionFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.FlowAction.GetItemOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFlowItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFlowItem* UFlowAction::GetItemOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowAction", "GetItemOwner");

	Params::FlowAction_GetItemOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.FlowAction.GrabTargets
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               Aclass                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   Actors                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFlowAction::GrabTargets(class UObject* Context, TSubclassOf<class AActor> Aclass, TArray<class AActor*>* Actors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowAction", "GrabTargets");

	Params::FlowAction_GrabTargets Parms{};

	Parms.Context = Context;
	Parms.Aclass = Aclass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function Dialog.AkWaveComponent.PlayWave
// (Final, Native, Public)

void UAkWaveComponent::PlayWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkWaveComponent", "PlayWave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.AkWaveComponent.StopWave
// (Final, Native, Public)

void UAkWaveComponent::StopWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AkWaveComponent", "StopWave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogData.CsvToJson
// (Final, Native, Public)

void UDialogData::CsvToJson()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogData", "CsvToJson");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogData.JsonToCsv
// (Final, Native, Public)

void UDialogData::JsonToCsv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogData", "JsonToCsv");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.beginQuest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestID                         QuestID                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UDialogFunctions::beginQuest(class UObject* WorldContextObject, const struct FQuestID& QuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "beginQuest");

	Params::DialogFunctions_beginQuest Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.QuestID = std::move(QuestID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.canPlayTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDialogTalkID                    TalkID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogInfo                      Info                                                   (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogFunctions::CanPlayTalk(const TArray<class AActor*>& Speakers, const struct FDialogTalkID& TalkID, const struct FDialogInfo& Info, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "canPlayTalk");

	Params::DialogFunctions_CanPlayTalk Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.TalkID = std::move(TalkID);
	Parms.Info = std::move(Info);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.clearVOCache
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogTalkID                    TalkID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::ClearVOCache(const struct FDialogTalkID& TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "clearVOCache");

	Params::DialogFunctions_ClearVOCache Parms{};

	Parms.TalkID = std::move(TalkID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.clearVOsCache
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FDialogTalkID>            TalkIDs                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UDialogFunctions::ClearVOsCache(const TArray<struct FDialogTalkID>& TalkIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "clearVOsCache");

	Params::DialogFunctions_ClearVOsCache Parms{};

	Parms.TalkIDs = std::move(TalkIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.destroySpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDialogSpeaker*                   Speaker                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::DestroySpeaker(class UDialogSpeaker* Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "destroySpeaker");

	Params::DialogFunctions_DestroySpeaker Parms{};

	Parms.Speaker = Speaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.equalFlowObjectID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogObjectID                  B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogFunctions::EqualFlowObjectID(const struct FDialogObjectID& A, const struct FDialogObjectID& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "equalFlowObjectID");

	Params::DialogFunctions_EqualFlowObjectID Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.filterSpeakersByDistance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   MaxDistToPlayer                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDialogSpeaker*>           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UDialogSpeaker*> UDialogFunctions::FilterSpeakersByDistance(const TArray<class UDialogSpeaker*>& Speakers, float MaxDistToPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "filterSpeakersByDistance");

	Params::DialogFunctions_FilterSpeakersByDistance Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.MaxDistToPlayer = MaxDistToPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.filterSpeakersByEntity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FDialogEntity                    Entity                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CheckVoices                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDialogSpeaker*>           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UDialogSpeaker*> UDialogFunctions::FilterSpeakersByEntity(const TArray<class UDialogSpeaker*>& Speakers, const struct FDialogEntity& Entity, bool CheckVoices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "filterSpeakersByEntity");

	Params::DialogFunctions_FilterSpeakersByEntity Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.Entity = std::move(Entity);
	Parms.CheckVoices = CheckVoices;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.filterSpeakersByGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UDialogSpeaker*>           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UDialogSpeaker*> UDialogFunctions::FilterSpeakersByGameplayTags(const TArray<class UDialogSpeaker*>& Speakers, const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "filterSpeakersByGameplayTags");

	Params::DialogFunctions_FilterSpeakersByGameplayTags Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.filterSpeakersByVoice
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FDialogEntity                    Entity                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDialogSpeaker*>           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UDialogSpeaker*> UDialogFunctions::FilterSpeakersByVoice(const TArray<class UDialogSpeaker*>& Speakers, const struct FDialogEntity& Entity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "filterSpeakersByVoice");

	Params::DialogFunctions_FilterSpeakersByVoice Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.Entity = std::move(Entity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.finishObjective
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestObjectiveID                ObjectiveID                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuestResult                            Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::FinishObjective(class UObject* WorldContextObject, const struct FQuestObjectiveID& ObjectiveID, EQuestResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "finishObjective");

	Params::DialogFunctions_FinishObjective Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectiveID = std::move(ObjectiveID);
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.getAllSpeakers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OnlyFromActors                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UDialogSpeaker*>           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UDialogSpeaker*> UDialogFunctions::GetAllSpeakers(class UObject* Context, const TArray<class AActor*>& OnlyFromActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getAllSpeakers");

	Params::DialogFunctions_GetAllSpeakers Parms{};

	Parms.Context = Context;
	Parms.OnlyFromActors = std::move(OnlyFromActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getDialogManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogManager*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogManager* UDialogFunctions::GetDialogManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getDialogManager");

	Params::DialogFunctions_GetDialogManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getDisplayColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UDialogFunctions::GetDisplayColor(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getDisplayColor");

	Params::DialogFunctions_GetDisplayColor Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getDisplayName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDialogFunctions::GetDisplayName(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getDisplayName");

	Params::DialogFunctions_GetDisplayName Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getFlowBoolean
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFlowBoolean                     GlobalID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogFunctions::GetFlowBoolean(const struct FFlowBoolean& GlobalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getFlowBoolean");

	Params::DialogFunctions_GetFlowBoolean Parms{};

	Parms.GlobalID = std::move(GlobalID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getFlowInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFlowInteger                     GlobalID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDialogFunctions::GetFlowInteger(const struct FFlowInteger& GlobalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getFlowInteger");

	Params::DialogFunctions_GetFlowInteger Parms{};

	Parms.GlobalID = std::move(GlobalID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getGUID
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UDialogFunctions::GetGUID(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getGUID");

	Params::DialogFunctions_GetGUID Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getInteractiveTalk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::GetInteractiveTalk(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getInteractiveTalk");

	Params::DialogFunctions_GetInteractiveTalk Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getItemObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFlowItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFlowItem* UDialogFunctions::GetItemObject(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getItemObject");

	Params::DialogFunctions_GetItemObject Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getLocalizedText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFlowText                        Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogFunctions::GetLocalizedText(class UObject* WorldContextObject, const struct FFlowText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getLocalizedText");

	Params::DialogFunctions_GetLocalizedText Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getLocalizedTextByKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogFunctions::GetLocalizedTextByKey(class UObject* WorldContextObject, const struct FDialogObjectID& ObjectID, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getLocalizedTextByKey");

	Params::DialogFunctions_GetLocalizedTextByKey Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectID = std::move(ObjectID);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getSpeakerEntity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogLine                      LineID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntity                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogEntity UDialogFunctions::GetSpeakerEntity(const struct FDialogLine& LineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getSpeakerEntity");

	Params::DialogFunctions_GetSpeakerEntity Parms{};

	Parms.LineID = std::move(LineID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getTechnicalName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDialogFunctions::GetTechnicalName(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getTechnicalName");

	Params::DialogFunctions_GetTechnicalName Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getTemplateObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  ObjectID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFlowTemplate*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFlowTemplate* UDialogFunctions::GetTemplateObject(const struct FDialogObjectID& ObjectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getTemplateObject");

	Params::DialogFunctions_GetTemplateObject Parms{};

	Parms.ObjectID = std::move(ObjectID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.getTranslationText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFlowText                        Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogFunctions::GetTranslationText(class UObject* WorldContextObject, const struct FFlowText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "getTranslationText");

	Params::DialogFunctions_GetTranslationText Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.isValidFlowGlobal
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFlowGlobal                      GlobalID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogFunctions::IsValidFlowGlobal(const struct FFlowGlobal& GlobalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "isValidFlowGlobal");

	Params::DialogFunctions_IsValidFlowGlobal Parms{};

	Parms.GlobalID = std::move(GlobalID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.isValidFlowObjectID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogFunctions::IsValidFlowObjectID(const struct FDialogObjectID& A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "isValidFlowObjectID");

	Params::DialogFunctions_IsValidFlowObjectID Parms{};

	Parms.A = std::move(A);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.pauseDialogTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDialogTalk*                      Dialog                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::PauseDialogTalk(class UDialogTalk* Dialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "pauseDialogTalk");

	Params::DialogFunctions_PauseDialogTalk Parms{};

	Parms.Dialog = Dialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.playActorDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayActorDialog(class AActor* Caller, class AActor* Speaker, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playActorDialog");

	Params::DialogFunctions_PlayActorDialog Parms{};

	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playDialogFromLine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogInfo                      Info                                                   (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayDialogFromLine(class AActor* Caller, class AActor* Speaker, const struct FDialogLine& DialogLineID, const struct FDialogInfo& Info, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playDialogFromLine");

	Params::DialogFunctions_PlayDialogFromLine Parms{};

	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.DialogLineID = std::move(DialogLineID);
	Parms.Info = std::move(Info);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playDialogTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogDialog                    DialogID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogInfo                      Info                                                   (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayDialogTalk(class AActor* Caller, class AActor* Speaker, const struct FDialogDialog& DialogID, const struct FDialogInfo& Info, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playDialogTalk");

	Params::DialogFunctions_PlayDialogTalk Parms{};

	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.DialogID = std::move(DialogID);
	Parms.Info = std::move(Info);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playMonolog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      LineID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogInfo                      Info                                                   (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayMonolog(class AActor* Speaker, const struct FDialogLine& LineID, const struct FDialogInfo& Info, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playMonolog");

	Params::DialogFunctions_PlayMonolog Parms{};

	Parms.Speaker = Speaker;
	Parms.LineID = std::move(LineID);
	Parms.Info = std::move(Info);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playMonologFromLine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERange                                  SubtitleRange                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverridenSubtitleRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayMonologFromLine(class UObject* WorldContextObject, const struct FDialogLine& DialogLineID, class AActor* Speaker, ERange SubtitleRange, float OverridenSubtitleRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playMonologFromLine");

	Params::DialogFunctions_PlayMonologFromLine Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DialogLineID = std::move(DialogLineID);
	Parms.Speaker = Speaker;
	Parms.SubtitleRange = SubtitleRange;
	Parms.OverridenSubtitleRange = OverridenSubtitleRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playMonologSingleLine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERange                                  SubtitleRange                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverridenSubtitleRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayMonologSingleLine(class UObject* WorldContextObject, const struct FDialogLine& DialogLineID, class AActor* Speaker, ERange SubtitleRange, float OverridenSubtitleRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playMonologSingleLine");

	Params::DialogFunctions_PlayMonologSingleLine Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DialogLineID = std::move(DialogLineID);
	Parms.Speaker = Speaker;
	Parms.SubtitleRange = SubtitleRange;
	Parms.OverridenSubtitleRange = OverridenSubtitleRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playSpeakerDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogSpeaker*                   Speaker                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlaySpeakerDialog(class AActor* Caller, class UDialogSpeaker* Speaker, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playSpeakerDialog");

	Params::DialogFunctions_PlaySpeakerDialog Parms{};

	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.playTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDialogTalkID                    TalkID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogInfo                      Info                                                   (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::PlayTalk(const TArray<class AActor*>& Speakers, const struct FDialogTalkID& TalkID, const struct FDialogInfo& Info, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "playTalk");

	Params::DialogFunctions_PlayTalk Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.TalkID = std::move(TalkID);
	Parms.Info = std::move(Info);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.preloadVO
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogTalkID                    TalkID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::PreloadVO(const struct FDialogTalkID& TalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "preloadVO");

	Params::DialogFunctions_PreloadVO Parms{};

	Parms.TalkID = std::move(TalkID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.preloadVOs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FDialogTalkID>            TalkIDs                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UDialogFunctions::PreloadVOs(const TArray<struct FDialogTalkID>& TalkIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "preloadVOs");

	Params::DialogFunctions_PreloadVOs Parms{};

	Parms.TalkIDs = std::move(TalkIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.resumeDialogTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDialogTalk*                      Dialog                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::ResumeDialogTalk(class UDialogTalk* Dialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "resumeDialogTalk");

	Params::DialogFunctions_ResumeDialogTalk Parms{};

	Parms.Dialog = Dialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.selectDialogEntityID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntity                    DialogEntityID                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntity                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogEntity UDialogFunctions::SelectDialogEntityID(class UDialogData* Data, const struct FDialogEntity& DialogEntityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectDialogEntityID");

	Params::DialogFunctions_SelectDialogEntityID Parms{};

	Parms.Data = Data;
	Parms.DialogEntityID = std::move(DialogEntityID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectDialogEntryID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntryID                   DialogEntryID                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntryID                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogEntryID UDialogFunctions::SelectDialogEntryID(class UDialogData* Data, const struct FDialogEntryID& DialogEntryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectDialogEntryID");

	Params::DialogFunctions_SelectDialogEntryID Parms{};

	Parms.Data = Data;
	Parms.DialogEntryID = std::move(DialogEntryID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectDialogHubID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogHub                       DialogHubID                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogHub                       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogHub UDialogFunctions::SelectDialogHubID(class UDialogData* Data, const struct FDialogHub& DialogHubID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectDialogHubID");

	Params::DialogFunctions_SelectDialogHubID Parms{};

	Parms.Data = Data;
	Parms.DialogHubID = std::move(DialogHubID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectDialogID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogDialog                    DialogID                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogDialog                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogDialog UDialogFunctions::SelectDialogID(class UDialogData* Data, const struct FDialogDialog& DialogID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectDialogID");

	Params::DialogFunctions_SelectDialogID Parms{};

	Parms.Data = Data;
	Parms.DialogID = std::move(DialogID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectDialogLineID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      DialogLineID                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogLine UDialogFunctions::SelectDialogLineID(class UDialogData* Data, const struct FDialogLine& DialogLineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectDialogLineID");

	Params::DialogFunctions_SelectDialogLineID Parms{};

	Parms.Data = Data;
	Parms.DialogLineID = std::move(DialogLineID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectFlowBoolean
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFlowBoolean                     GlobalID                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFlowBoolean                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFlowBoolean UDialogFunctions::SelectFlowBoolean(class UDialogData* Data, const struct FFlowBoolean& GlobalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectFlowBoolean");

	Params::DialogFunctions_SelectFlowBoolean Parms{};

	Parms.Data = Data;
	Parms.GlobalID = std::move(GlobalID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectFlowInteger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFlowInteger                     GlobalID                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFlowInteger                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFlowInteger UDialogFunctions::SelectFlowInteger(class UDialogData* Data, const struct FFlowInteger& GlobalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectFlowInteger");

	Params::DialogFunctions_SelectFlowInteger Parms{};

	Parms.Data = Data;
	Parms.GlobalID = std::move(GlobalID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectNearestSpeaker
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          Origin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogFunctions::SelectNearestSpeaker(const TArray<class UDialogSpeaker*>& Speakers, const struct FVector& Origin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectNearestSpeaker");

	Params::DialogFunctions_SelectNearestSpeaker Parms{};

	Parms.Speakers = std::move(Speakers);
	Parms.Origin = std::move(Origin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectQuestID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestID                         QuestID                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestID                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuestID UDialogFunctions::SelectQuestID(class UDialogData* Data, const struct FQuestID& QuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectQuestID");

	Params::DialogFunctions_SelectQuestID Parms{};

	Parms.Data = Data;
	Parms.QuestID = std::move(QuestID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectQuestObjectiveID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogData*                      Data                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestObjectiveID                ObjectiveID                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestObjectiveID                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuestObjectiveID UDialogFunctions::SelectQuestObjectiveID(class UDialogData* Data, const struct FQuestObjectiveID& ObjectiveID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectQuestObjectiveID");

	Params::DialogFunctions_SelectQuestObjectiveID Parms{};

	Parms.Data = Data;
	Parms.ObjectiveID = std::move(ObjectiveID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.selectRandomSpeaker
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogFunctions::SelectRandomSpeaker(const TArray<class UDialogSpeaker*>& Speakers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "selectRandomSpeaker");

	Params::DialogFunctions_SelectRandomSpeaker Parms{};

	Parms.Speakers = std::move(Speakers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.setFlowBoolean
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFlowBoolean                     GlobalID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::SetFlowBoolean(const struct FFlowBoolean& GlobalID, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "setFlowBoolean");

	Params::DialogFunctions_SetFlowBoolean Parms{};

	Parms.GlobalID = std::move(GlobalID);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.setFlowInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFlowInteger                     GlobalID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::SetFlowInteger(const struct FFlowInteger& GlobalID, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "setFlowInteger");

	Params::DialogFunctions_SetFlowInteger Parms{};

	Parms.GlobalID = std::move(GlobalID);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.stopDialogTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDialogTalk*                      Dialog                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogFunctions::StopDialogTalk(class UDialogTalk* Dialog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "stopDialogTalk");

	Params::DialogFunctions_StopDialogTalk Parms{};

	Parms.Dialog = Dialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogFunctions.tryPlayAnyTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FDialogFullInfo>          Infos                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::TryPlayAnyTalk(class UObject* Context, class AActor* Caller, class AActor* Speaker, TArray<struct FDialogFullInfo>& Infos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "tryPlayAnyTalk");

	Params::DialogFunctions_TryPlayAnyTalk Parms{};

	Parms.Context = Context;
	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.Infos = std::move(Infos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Infos = std::move(Parms.Infos);

	return Parms.ReturnValue;
}


// Function Dialog.DialogFunctions.tryPlayTalk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Caller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogFullInfo                  Info                                                   (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogFunctions::TryPlayTalk(class UObject* Context, class AActor* Caller, class AActor* Speaker, struct FDialogFullInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DialogFunctions", "tryPlayTalk");

	Params::DialogFunctions_TryPlayTalk Parms{};

	Parms.Context = Context;
	Parms.Caller = Caller;
	Parms.Speaker = Speaker;
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function Dialog.FlowItem.GetDisplayString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFlowItem::GetDisplayString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowItem", "GetDisplayString");

	Params::FlowItem_GetDisplayString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.FlowItem.GetFlowRef
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDialogObjectID                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogObjectID UFlowItem::GetFlowRef() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowItem", "GetFlowRef");

	Params::FlowItem_GetFlowRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.AddLineSubtitles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::AddLineSubtitles(int32 Index_0, const struct FDialogLine& Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "AddLineSubtitles");

	Params::DialogManager_AddLineSubtitles Parms{};

	Parms.Index_0 = Index_0;
	Parms.Line = std::move(Line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.beginQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQuestID                         QuestID                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UDialogManager::beginQuest(const struct FQuestID& QuestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "beginQuest");

	Params::DialogManager_beginQuest Parms{};

	Parms.QuestID = std::move(QuestID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.EndDialogTalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDialogSpeaker*                   Speaker                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      Ignore                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::EndDialogTalk(const class UDialogSpeaker* Speaker, const class UDialogTalk* Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "EndDialogTalk");

	Params::DialogManager_EndDialogTalk Parms{};

	Parms.Speaker = Speaker;
	Parms.Ignore = Ignore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.FindDialogTalk
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogObjectID                  DialogID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogManager::FindDialogTalk(const struct FDialogObjectID& DialogID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "FindDialogTalk");

	Params::DialogManager_FindDialogTalk Parms{};

	Parms.DialogID = std::move(DialogID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.FindSpeakerTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogSpeaker*                   Speaker                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogManager::FindSpeakerTalk(const class UDialogSpeaker* Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "FindSpeakerTalk");

	Params::DialogManager_FindSpeakerTalk Parms{};

	Parms.Speaker = Speaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.GetActiveQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UQuest*>                   Quests                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogManager::GetActiveQuests(TArray<class UQuest*>* Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "GetActiveQuests");

	Params::DialogManager_GetActiveQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Quests != nullptr)
		*Quests = std::move(Parms.Quests);
}


// Function Dialog.DialogManager.getInteractiveTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogManager::GetInteractiveTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "getInteractiveTalk");

	Params::DialogManager_GetInteractiveTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.RemoveSubtitles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::RemoveSubtitles(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "RemoveSubtitles");

	Params::DialogManager_RemoveSubtitles Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.SetDialogUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDialogUI*                        UI                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::SetDialogUI(class UDialogUI* UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "SetDialogUI");

	Params::DialogManager_SetDialogUI Parms{};

	Parms.UI = UI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.SetVOSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Pitch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::SetVOSpeed(float Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "SetVOSpeed");

	Params::DialogManager_SetVOSpeed Parms{};

	Parms.Pitch = Pitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.StopTalksWithLowerPriority
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      Ignore                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogManager::StopTalksWithLowerPriority(uint8 Priority, const class UDialogTalk* Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "StopTalksWithLowerPriority");

	Params::DialogManager_StopTalksWithLowerPriority Parms{};

	Parms.Priority = Priority;
	Parms.Ignore = Ignore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogManager.FindQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuestID                         QuestID                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UDialogManager::FindQuest(const struct FQuestID& QuestID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "FindQuest");

	Params::DialogManager_FindQuest Parms{};

	Parms.QuestID = std::move(QuestID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogManager.HasAnyActiveTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogManager::HasAnyActiveTalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogManager", "HasAnyActiveTalk");

	Params::DialogManager_HasAnyActiveTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.FlowTask.GetFlowRef
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDialogObjectID            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FDialogObjectID UFlowTask::GetFlowRef() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowTask", "GetFlowRef");

	Params::FlowTask_GetFlowRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogScriptInterface.DialogScript
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UDialogTalk*                      DialogTalk                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserInteger                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IDialogScriptInterface::DialogScript(class UDialogTalk* DialogTalk, uint8 EventType, int32 UserInteger, const class FString& UserString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogScriptInterface", "DialogScript");

	Params::DialogScriptInterface_DialogScript Parms{};

	Parms.DialogTalk = DialogTalk;
	Parms.EventType = EventType;
	Parms.UserInteger = UserInteger;
	Parms.UserString = std::move(UserString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogScriptInterface.DialogScriptByTag
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogTalk*                      DialogTalk                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserInteger                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          UserAsset                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IDialogScriptInterface::DialogScriptByTag(const struct FGameplayTag& EventTag, class UDialogTalk* DialogTalk, int32 UserInteger, const class FString& UserString, class UObject* UserAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogScriptInterface", "DialogScriptByTag");

	Params::DialogScriptInterface_DialogScriptByTag Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.DialogTalk = DialogTalk;
	Parms.UserInteger = UserInteger;
	Parms.UserString = std::move(UserString);
	Parms.UserAsset = UserAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.AddVoiceParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpolationTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSpeaker::AddVoiceParameter(class FName Name_0, float Value, float InterpolationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "AddVoiceParameter");

	Params::DialogSpeaker_AddVoiceParameter Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;
	Parms.InterpolationTime = InterpolationTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.playTalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FLatentActionInfo                Info                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UDialogSpeaker::PlayTalk(const struct FLatentActionInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "playTalk");

	Params::DialogSpeaker_PlayTalk Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.PlayTalkInEditor
// (Final, Native, Public)

void UDialogSpeaker::PlayTalkInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "PlayTalkInEditor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.RemoveVoiceParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpolationTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSpeaker::RemoveVoiceParameter(class FName Name_0, float InterpolationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "RemoveVoiceParameter");

	Params::DialogSpeaker_RemoveVoiceParameter Parms{};

	Parms.Name_0 = Name_0;
	Parms.InterpolationTime = InterpolationTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.SetIsPlayerSpeaker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Is                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSpeaker::SetIsPlayerSpeaker(bool Is)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "SetIsPlayerSpeaker");

	Params::DialogSpeaker_SetIsPlayerSpeaker Parms{};

	Parms.Is = Is;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSpeaker.CanStartTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogSpeaker::CanStartTalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "CanStartTalk");

	Params::DialogSpeaker_CanStartTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogSpeaker.GetCurrentVoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UDialogSpeaker::GetCurrentVoice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "GetCurrentVoice");

	Params::DialogSpeaker_GetCurrentVoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogSpeaker.GetDistanceToPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDialogSpeaker::GetDistanceToPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "GetDistanceToPlayer");

	Params::DialogSpeaker_GetDistanceToPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogSpeaker.GetTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDialogTalkID                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogTalkID UDialogSpeaker::GetTalkID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "GetTalkID");

	Params::DialogSpeaker_GetTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogSpeaker.IsPlayerSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogSpeaker::IsPlayerSpeaker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSpeaker", "IsPlayerSpeaker");

	Params::DialogSpeaker_IsPlayerSpeaker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogPlayer.playTalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDialogTalk*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogTalk* UDialogPlayer::PlayTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogPlayer", "playTalk");

	Params::DialogPlayer_PlayTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogPlayer.PlayTalkInEditor
// (Final, Native, Public)

void UDialogPlayer::PlayTalkInEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogPlayer", "PlayTalkInEditor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogPlayer.CanStartTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogPlayer::CanStartTalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogPlayer", "CanStartTalk");

	Params::DialogPlayer_CanStartTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogPlayer.GetTalkID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDialogTalkID                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogTalkID UDialogPlayer::GetTalkID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogPlayer", "GetTalkID");

	Params::DialogPlayer_GetTalkID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogSubtitles.AddSubtitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      Line                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSubtitles::AddSubtitle(int32 Index_0, const struct FDialogLine& Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSubtitles", "AddSubtitle");

	Params::DialogSubtitles_AddSubtitle Parms{};

	Parms.Index_0 = Index_0;
	Parms.Line = std::move(Line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSubtitles.ChangeVisibility
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogSubtitles::ChangeVisibility(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSubtitles", "ChangeVisibility");

	Params::DialogSubtitles_ChangeVisibility Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogSubtitles.GetLocalizedSpeakerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDialogEntity                    Entity                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogSubtitles::GetLocalizedSpeakerName(const struct FDialogEntity& Entity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogSubtitles", "GetLocalizedSpeakerName");

	Params::DialogSubtitles_GetLocalizedSpeakerName Parms{};

	Parms.Entity = std::move(Entity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.ScriptDialogSubtitles.OnAddSubtitle
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SpeakerName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FColor                           Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogEntity                    Entity                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptDialogSubtitles::OnAddSubtitle(int32 Index_0, const class FText& Text, const class FText& SpeakerName, const struct FColor& Color, const struct FDialogEntity& Entity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogSubtitles", "OnAddSubtitle");

	Params::ScriptDialogSubtitles_OnAddSubtitle Parms{};

	Parms.Index_0 = Index_0;
	Parms.Text = std::move(Text);
	Parms.SpeakerName = std::move(SpeakerName);
	Parms.Color = std::move(Color);
	Parms.Entity = std::move(Entity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptDialogSubtitles.OnChangeVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptDialogSubtitles::OnChangeVisibility(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogSubtitles", "OnChangeVisibility");

	Params::ScriptDialogSubtitles_OnChangeVisibility Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptDialogSubtitles.OnClearSubtitles
// (Event, Public, BlueprintEvent)

void UScriptDialogSubtitles::OnClearSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogSubtitles", "OnClearSubtitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogSubtitles.OnRemoveSubtitle
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptDialogSubtitles::OnRemoveSubtitle(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogSubtitles", "OnRemoveSubtitle");

	Params::ScriptDialogSubtitles_OnRemoveSubtitle Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.DialogTalk.Choose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Choice                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EndIfFail                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogTalk::Choose(int32 Choice, bool EndIfFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Choose");

	Params::DialogTalk_Choose Parms{};

	Parms.Choice = Choice;
	Parms.EndIfFail = EndIfFail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.OnAkPostEventCallback
// (Final, Native, Private)
// Parameters:
// EAkCallbackType                         CallbackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkCallbackInfo*                  CallbackInfo                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogTalk::OnAkPostEventCallback(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "OnAkPostEventCallback");

	Params::DialogTalk_OnAkPostEventCallback Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.OnSubTalkFinished
// (Final, Native, Private)
// Parameters:
// bool                                    Completed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogTalk::OnSubTalkFinished(bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "OnSubTalkFinished");

	Params::DialogTalk_OnSubTalkFinished Parms{};

	Parms.Completed = Completed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.Pause
// (Final, Native, Public, BlueprintCallable)

void UDialogTalk::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.PlayLine
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::PlayLine(const struct FDialogLine& DialogLineID, class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "PlayLine");

	Params::DialogTalk_PlayLine Parms{};

	Parms.DialogLineID = std::move(DialogLineID);
	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.playTalk
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogDialog                    DialogID                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::PlayTalk(const struct FDialogDialog& DialogID, class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "playTalk");

	Params::DialogTalk_PlayTalk Parms{};

	Parms.DialogID = std::move(DialogID);
	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.PlayTalkFromLine
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::PlayTalkFromLine(const struct FDialogLine& DialogLineID, class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "PlayTalkFromLine");

	Params::DialogTalk_PlayTalkFromLine Parms{};

	Parms.DialogLineID = std::move(DialogLineID);
	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.Resume
// (Final, Native, Public, BlueprintCallable)

void UDialogTalk::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Resume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.Skip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::Skip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Skip");

	Params::DialogTalk_Skip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.Stop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogTalk::Stop(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Stop");

	Params::DialogTalk_Stop Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.Suspend
// (Final, Native, Public, BlueprintCallable)

void UDialogTalk::Suspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "Suspend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.UpdateChoices
// (Final, Native, Public, BlueprintCallable)

void UDialogTalk::UpdateChoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "UpdateChoices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.DialogTalk.FindNonPlayerSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogTalk::FindNonPlayerSpeaker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "FindNonPlayerSpeaker");

	Params::DialogTalk_FindNonPlayerSpeaker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.FindPlayerSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogTalk::FindPlayerSpeaker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "FindPlayerSpeaker");

	Params::DialogTalk_FindPlayerSpeaker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.FindSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDialogEntity                    SpeakerID                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogTalk::FindSpeaker(const struct FDialogEntity& SpeakerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "FindSpeaker");

	Params::DialogTalk_FindSpeaker Parms{};

	Parms.SpeakerID = std::move(SpeakerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.getAllSpeakers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDialogSpeaker*>           Speakers                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogTalk::GetAllSpeakers(TArray<class UDialogSpeaker*>* Speakers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "getAllSpeakers");

	Params::DialogTalk_GetAllSpeakers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Speakers != nullptr)
		*Speakers = std::move(Parms.Speakers);
}


// Function Dialog.DialogTalk.GetCurrentSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogSpeaker*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogSpeaker* UDialogTalk::GetCurrentSpeaker() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "GetCurrentSpeaker");

	Params::DialogTalk_GetCurrentSpeaker Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.GetPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UDialogTalk::GetPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "GetPriority");

	Params::DialogTalk_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.GetResumeableLine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDialogLine                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDialogLine UDialogTalk::GetResumeableLine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "GetResumeableLine");

	Params::DialogTalk_GetResumeableLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.HasSpeaker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogSpeaker*                   Speaker                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::HasSpeaker(const class UDialogSpeaker* Speaker) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "HasSpeaker");

	Params::DialogTalk_HasSpeaker Parms{};

	Parms.Speaker = Speaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::IsFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "IsFinished");

	Params::DialogTalk_IsFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.DialogTalk.IsFinishedOrSuspended
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogTalk::IsFinishedOrSuspended() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogTalk", "IsFinishedOrSuspended");

	Params::DialogTalk_IsFinishedOrSuspended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.ScriptDialogUI.OnAddChoice
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFlowDialogLine*                  Line                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptDialogUI::OnAddChoice(const class FText& Text, const class UFlowDialogLine* Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnAddChoice");

	Params::ScriptDialogUI_OnAddChoice Parms{};

	Parms.Text = std::move(Text);
	Parms.Line = Line;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptDialogUI.OnBeginDialog
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnBeginDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnBeginDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogUI.OnDialogLine
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFlowDialogLine*                  Line                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptDialogUI::OnDialogLine(const class FText& Text, const class UFlowDialogLine* Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnDialogLine");

	Params::ScriptDialogUI_OnDialogLine Parms{};

	Parms.Text = std::move(Text);
	Parms.Line = Line;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptDialogUI.OnEndDialog
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnEndDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnEndDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogUI.OnPause
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogUI.OnReset
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogUI.OnStartChoiceTimer
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnStartChoiceTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnStartChoiceTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptDialogUI.OnUnpause
// (Event, Public, BlueprintEvent)

void UScriptDialogUI::OnUnpause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptDialogUI", "OnUnpause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog.ScriptFlowAction.ScriptPerform
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptFlowAction::ScriptPerform(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptFlowAction", "ScriptPerform");

	Params::ScriptFlowAction_ScriptPerform Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptFlowAction.ScriptStop
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptFlowAction::ScriptStop(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptFlowAction", "ScriptStop");

	Params::ScriptFlowAction_ScriptStop Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptFlowAction.ScriptTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScriptFlowAction::ScriptTick(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptFlowAction", "ScriptTick");

	Params::ScriptFlowAction_ScriptTick Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.ScriptFlowAction.ScriptToString
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UScriptFlowAction::ScriptToString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScriptFlowAction", "ScriptToString");

	Params::ScriptFlowAction_ScriptToString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.FlowTemplate.ReceiveActivation
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFlowTask*                        Task                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlowTemplate::ReceiveActivation(class UFlowTask* Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowTemplate", "ReceiveActivation");

	Params::FlowTemplate_ReceiveActivation Parms{};

	Parms.Task = Task;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.FlowTemplate.ReceiveDeactivation
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFlowTask*                        Task                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlowTemplate::ReceiveDeactivation(class UFlowTask* Task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowTemplate", "ReceiveDeactivation");

	Params::FlowTemplate_ReceiveDeactivation Parms{};

	Parms.Task = Task;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog.FlowTemplate.GetOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFlowItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFlowItem* UFlowTemplate::GetOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowTemplate", "GetOwner");

	Params::FlowTemplate_GetOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.Quest.SetObjectiveStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQuestObjectiveID                ObjectiveID                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuestStatus                            Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::SetObjectiveStatus(const struct FQuestObjectiveID& ObjectiveID, EQuestStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SetObjectiveStatus");

	Params::Quest_SetObjectiveStatus Parms{};

	Parms.ObjectiveID = std::move(ObjectiveID);
	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.Quest.Update
// (Final, Native, Public, BlueprintCallable)

void UQuest::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Dialog.Quest.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuest::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetName");

	Params::Quest_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.Quest.GetObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EQuestStatus                            Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQuestObjective>          Objectives                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuest::GetObjectives(EQuestStatus Status, TArray<struct FQuestObjective>* Objectives) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetObjectives");

	Params::Quest_GetObjectives Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Objectives != nullptr)
		*Objectives = std::move(Parms.Objectives);
}


// Function Dialog.Quest.GetObjectiveStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuestObjectiveID                ObjectiveID                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuestStatus                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestStatus UQuest::GetObjectiveStatus(const struct FQuestObjectiveID& ObjectiveID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetObjectiveStatus");

	Params::Quest_GetObjectiveStatus Parms{};

	Parms.ObjectiveID = std::move(ObjectiveID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.Quest.GetStoryRecap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuest::GetStoryRecap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetStoryRecap");

	Params::Quest_GetStoryRecap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.Quest.HasActiveStoryRecap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuest::HasActiveStoryRecap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "HasActiveStoryRecap");

	Params::Quest_HasActiveStoryRecap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Dialog.QuestScriptInterface.QuestScriptByTag
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserInteger                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQuestScriptInterface::QuestScriptByTag(const struct FGameplayTag& EventTag, class UQuest* Quest, int32 UserInteger, const class FString& UserString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestScriptInterface", "QuestScriptByTag");

	Params::QuestScriptInterface_QuestScriptByTag Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.Quest = Quest;
	Parms.UserInteger = UserInteger;
	Parms.UserString = std::move(UserString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

