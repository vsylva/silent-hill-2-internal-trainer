#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlickeringLampEx

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FlickeringLampEx_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FlickeringLampEx.FlickeringLampEx_C
// 0x0048 (0x0478 - 0x0430)
class AFlickeringLampEx_C : public AFlickeringLampEx_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_FlickeringLampEx_C;                 // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh4;                                       // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParentingRoot;                                     // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        LightIntensityMultiplayer;                         // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        LightTemperature;                                  // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FlickeringLampEx(int32 EntryPoint);
	void ReceiveBeginPlay();

	void GetLightIntensityMultiplier(double* Result) const;
	void GetLightTemperature(double* Result) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FlickeringLampEx_C">();
	}
	static class AFlickeringLampEx_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlickeringLampEx_C>();
	}
};
static_assert(alignof(AFlickeringLampEx_C) == 0x000008, "Wrong alignment on AFlickeringLampEx_C");
static_assert(sizeof(AFlickeringLampEx_C) == 0x000478, "Wrong size on AFlickeringLampEx_C");
static_assert(offsetof(AFlickeringLampEx_C, UberGraphFrame_FlickeringLampEx_C) == 0x000430, "Member 'AFlickeringLampEx_C::UberGraphFrame_FlickeringLampEx_C' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, StaticMesh4) == 0x000438, "Member 'AFlickeringLampEx_C::StaticMesh4' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, StaticMesh3) == 0x000440, "Member 'AFlickeringLampEx_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, StaticMesh2) == 0x000448, "Member 'AFlickeringLampEx_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, StaticMesh1) == 0x000450, "Member 'AFlickeringLampEx_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, ParentingRoot) == 0x000458, "Member 'AFlickeringLampEx_C::ParentingRoot' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, BaseMesh) == 0x000460, "Member 'AFlickeringLampEx_C::BaseMesh' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, LightIntensityMultiplayer) == 0x000468, "Member 'AFlickeringLampEx_C::LightIntensityMultiplayer' has a wrong offset!");
static_assert(offsetof(AFlickeringLampEx_C, LightTemperature) == 0x000470, "Member 'AFlickeringLampEx_C::LightTemperature' has a wrong offset!");

}

