#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SHProto

#include "Basic.hpp"

#include "SHProto_classes.hpp"
#include "SHProto_parameters.hpp"


namespace SDK
{

// Function SHProto.SHCineCameraActor.GetSHCineCameraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHCineCameraComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCineCameraComponent* ASHCineCameraActor::GetSHCineCameraComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCineCameraActor", "GetSHCineCameraComponent");

	Params::SHCineCameraActor_GetSHCineCameraComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayFocusSlotButton.ButtonPressed
// (Final, Native, Public)

void USHGameplayFocusSlotButton::ButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayFocusSlotButton", "ButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayFocusSlotButton.OnSetHighlight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayFocusSlotButton::OnSetHighlight(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayFocusSlotButton", "OnSetHighlight");

	Params::SHGameplayFocusSlotButton_OnSetHighlight Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetAnimComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USHAnimComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAnimComponent* USHNPCLocomotionAnimInstance::GetAnimComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetAnimComponent");

	Params::SHNPCLocomotionAnimInstance_GetAnimComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCLocomotionAnimInstance.K2_OnAnimInstanceStateDataUpdated
// (Event, Public, BlueprintEvent)

void USHNPCLocomotionAnimInstance::K2_OnAnimInstanceStateDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "K2_OnAnimInstanceStateDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHNPCLocomotionAnimInstance.K2_OnReplacedOtherLocomotionAnimInstance
// (Event, Public, BlueprintEvent)
// Parameters:
// class USHNPCLocomotionAnimInstance*     PreviousLocomotionInstance                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNPCLocomotionAnimInstance::K2_OnReplacedOtherLocomotionAnimInstance(class USHNPCLocomotionAnimInstance* PreviousLocomotionInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "K2_OnReplacedOtherLocomotionAnimInstance");

	Params::SHNPCLocomotionAnimInstance_K2_OnReplacedOtherLocomotionAnimInstance Parms{};

	Parms.PreviousLocomotionInstance = PreviousLocomotionInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHNPCLocomotionAnimInstance.MovementVariationRandomChange
// (Event, Public, BlueprintEvent)

void USHNPCLocomotionAnimInstance::MovementVariationRandomChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "MovementVariationRandomChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHNPCLocomotionAnimInstance.OnMoveStartBegin
// (Native, Public, BlueprintCallable)

void USHNPCLocomotionAnimInstance::OnMoveStartBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "OnMoveStartBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetDesiredStrafeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCLocomotionAnimInstance::GetDesiredStrafeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetDesiredStrafeAngle");

	Params::SHNPCLocomotionAnimInstance_GetDesiredStrafeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetSpeedWarping
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    OutWarpingEnabled                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutStrideScale                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutStrideDirection                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNPCLocomotionAnimInstance::GetSpeedWarping(bool* OutWarpingEnabled, float* OutStrideScale, struct FVector* OutStrideDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetSpeedWarping");

	Params::SHNPCLocomotionAnimInstance_GetSpeedWarping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWarpingEnabled != nullptr)
		*OutWarpingEnabled = Parms.OutWarpingEnabled;

	if (OutStrideScale != nullptr)
		*OutStrideScale = Parms.OutStrideScale;

	if (OutStrideDirection != nullptr)
		*OutStrideDirection = std::move(Parms.OutStrideDirection);
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetStrafeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCLocomotionAnimInstance::GetStrafeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetStrafeAngle");

	Params::SHNPCLocomotionAnimInstance_GetStrafeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetStrideWarpingSmooth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCLocomotionAnimInstance::GetStrideWarpingSmooth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetStrideWarpingSmooth");

	Params::SHNPCLocomotionAnimInstance_GetStrideWarpingSmooth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCLocomotionAnimInstance.GetTurnInPlaceAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCLocomotionAnimInstance::GetTurnInPlaceAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCLocomotionAnimInstance", "GetTurnInPlaceAngle");

	Params::SHNPCLocomotionAnimInstance_GetTurnInPlaceAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterLocomotionAnimInstance.K2_OnStanceChangedToAggressive
// (Event, Protected, BlueprintEvent)

void USHMonsterLocomotionAnimInstance::K2_OnStanceChangedToAggressive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterLocomotionAnimInstance", "K2_OnStanceChangedToAggressive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterLocomotionAnimInstance.K2_OnStanceChangedToCautious
// (Event, Protected, BlueprintEvent)

void USHMonsterLocomotionAnimInstance::K2_OnStanceChangedToCautious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterLocomotionAnimInstance", "K2_OnStanceChangedToCautious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterLocomotionAnimInstance.K2_OnStanceChangedToMaximum
// (Event, Protected, BlueprintEvent)

void USHMonsterLocomotionAnimInstance::K2_OnStanceChangedToMaximum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterLocomotionAnimInstance", "K2_OnStanceChangedToMaximum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterLocomotionAnimInstance.K2_OnStanceChangedToNeutral
// (Event, Protected, BlueprintEvent)

void USHMonsterLocomotionAnimInstance::K2_OnStanceChangedToNeutral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterLocomotionAnimInstance", "K2_OnStanceChangedToNeutral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterLocomotionAnimInstance.GetIsOtherWorldEnemy
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterLocomotionAnimInstance::GetIsOtherWorldEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterLocomotionAnimInstance", "GetIsOtherWorldEnemy");

	Params::SHMonsterLocomotionAnimInstance_GetIsOtherWorldEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.CanCharacterBeFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::CanCharacterBeFinished(const class ACharacter* CheckedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "CanCharacterBeFinished");

	Params::SHCharacterStatics_CanCharacterBeFinished Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.GetCharacterPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHCharacterPlay* USHCharacterStatics::GetCharacterPlay(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "GetCharacterPlay");

	Params::SHCharacterStatics_GetCharacterPlay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.GetEddiePawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* USHCharacterStatics::GetEddiePawn(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "GetEddiePawn");

	Params::SHCharacterStatics_GetEddiePawn Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.GetMariaPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* USHCharacterStatics::GetMariaPawn(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "GetMariaPawn");

	Params::SHCharacterStatics_GetMariaPawn Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.GetTrueCharacterLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           InCharacterActor                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterStatics::GetTrueCharacterLocation(const class AActor* InCharacterActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "GetTrueCharacterLocation");

	Params::SHCharacterStatics_GetTrueCharacterLocation Parms{};

	Parms.InCharacterActor = InCharacterActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.IsCharacterDead
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::IsCharacterDead(const class ACharacter* CheckedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "IsCharacterDead");

	Params::SHCharacterStatics_IsCharacterDead Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.IsCharacterInCutscene
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::IsCharacterInCutscene(const class ACharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "IsCharacterInCutscene");

	Params::SHCharacterStatics_IsCharacterInCutscene Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.IsCharacterInSyncAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::IsCharacterInSyncAction(const class ACharacter* CheckedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "IsCharacterInSyncAction");

	Params::SHCharacterStatics_IsCharacterInSyncAction Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.IsCharacterKnockedDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::IsCharacterKnockedDown(const class ACharacter* CheckedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "IsCharacterKnockedDown");

	Params::SHCharacterStatics_IsCharacterKnockedDown Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.IsCharacterOnGround
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::IsCharacterOnGround(const class ACharacter* CheckedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "IsCharacterOnGround");

	Params::SHCharacterStatics_IsCharacterOnGround Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.SetActorTeam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            PawnActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGenericTeamId                   TeamID                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterStatics::SetActorTeam(const class UObject* WorldContextObject, class APawn* PawnActor, const struct FGenericTeamId& TeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "SetActorTeam");

	Params::SHCharacterStatics_SetActorTeam Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PawnActor = PawnActor;
	Parms.TeamID = std::move(TeamID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterStatics.SwitchCharacterPlay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHSuccessFailureEnum                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterStatics::SwitchCharacterPlay(const class UObject* WorldContextObject, ESHSuccessFailureEnum* Result, class ASHCharacterPlay** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterStatics", "SwitchCharacterPlay");

	Params::SHCharacterStatics_SwitchCharacterPlay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function SHProto.SHLyingFigureMovementHistoryComponent.AddMovementWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       InWorldTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLyingFigureMovementHistoryComponent::AddMovementWaypoint(const struct FTransform& InWorldTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureMovementHistoryComponent", "AddMovementWaypoint");

	Params::SHLyingFigureMovementHistoryComponent_AddMovementWaypoint Parms{};

	Parms.InWorldTransform = std::move(InWorldTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureMovementHistoryComponent.ResetMovementHistory
// (Final, Native, Public, BlueprintCallable)

void USHLyingFigureMovementHistoryComponent::ResetMovementHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureMovementHistoryComponent", "ResetMovementHistory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLyingFigureMovementHistoryComponent.DebugDrawMovementPath
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureMovementHistoryComponent::DebugDrawMovementPath(float InDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureMovementHistoryComponent", "DebugDrawMovementPath");

	Params::SHLyingFigureMovementHistoryComponent_DebugDrawMovementPath Parms{};

	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLyingFigureMovementHistoryComponent.FindWaypointAtDistance
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutTimeBehind                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDistanceBehind                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMinimumDistanceFromCurrentPosition                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLyingFigureMovementHistoryComponent::FindWaypointAtDistance(struct FTransform* OutTransform, float* OutDistance, float* OutTimeBehind, float InDistanceBehind, float InMinimumDistanceFromCurrentPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureMovementHistoryComponent", "FindWaypointAtDistance");

	Params::SHLyingFigureMovementHistoryComponent_FindWaypointAtDistance Parms{};

	Parms.InDistanceBehind = InDistanceBehind;
	Parms.InMinimumDistanceFromCurrentPosition = InMinimumDistanceFromCurrentPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	if (OutDistance != nullptr)
		*OutDistance = Parms.OutDistance;

	if (OutTimeBehind != nullptr)
		*OutTimeBehind = Parms.OutTimeBehind;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureMovementHistoryComponent.FindWaypointAtTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutTimeBehind                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDeltaTimeBehind                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMinimumDistanceFromCurrentPosition                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLyingFigureMovementHistoryComponent::FindWaypointAtTime(struct FTransform* OutTransform, float* OutDistance, float* OutTimeBehind, float InDeltaTimeBehind, float InMinimumDistanceFromCurrentPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureMovementHistoryComponent", "FindWaypointAtTime");

	Params::SHLyingFigureMovementHistoryComponent_FindWaypointAtTime Parms{};

	Parms.InDeltaTimeBehind = InDeltaTimeBehind;
	Parms.InMinimumDistanceFromCurrentPosition = InMinimumDistanceFromCurrentPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);

	if (OutDistance != nullptr)
		*OutDistance = Parms.OutDistance;

	if (OutTimeBehind != nullptr)
		*OutTimeBehind = Parms.OutTimeBehind;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.K2_OnAnimInstanceStateDataUpdated
// (Event, Protected, BlueprintEvent)

void USHNPCAnimInstance::K2_OnAnimInstanceStateDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "K2_OnAnimInstanceStateDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHNPCAnimInstance.MoveEndBegin
// (Final, Native, Protected, BlueprintCallable)

void USHNPCAnimInstance::MoveEndBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "MoveEndBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNPCAnimInstance.OnDeath
// (Final, Native, Public, BlueprintCallable)

void USHNPCAnimInstance::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNPCAnimInstance.OnDeathEvent
// (Event, Public, BlueprintEvent)

void USHNPCAnimInstance::OnDeathEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnDeathEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHNPCAnimInstance.OnLocomotionAnimInstanceChanged_BPEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNPCAnimInstance::OnLocomotionAnimInstanceChanged_BPEvent(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnLocomotionAnimInstanceChanged_BPEvent");

	Params::SHNPCAnimInstance_OnLocomotionAnimInstanceChanged_BPEvent Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHNPCAnimInstance.OnLocomotionAnimInstanceInitialised_BPEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNPCAnimInstance::OnLocomotionAnimInstanceInitialised_BPEvent(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnLocomotionAnimInstanceInitialised_BPEvent");

	Params::SHNPCAnimInstance_OnLocomotionAnimInstanceInitialised_BPEvent Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHNPCAnimInstance.OnRevive
// (Native, Public, BlueprintCallable)

void USHNPCAnimInstance::OnRevive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnRevive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNPCAnimInstance.OnReviveEvent
// (Event, Public, BlueprintEvent)

void USHNPCAnimInstance::OnReviveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "OnReviveEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHNPCAnimInstance.SetNewLocomotionAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHNPCLocomotionAnimInstance>NewLocomotionInstance                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForceReplacement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimInstance*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimInstance* USHNPCAnimInstance::SetNewLocomotionAnimInstance(TSubclassOf<class USHNPCLocomotionAnimInstance> NewLocomotionInstance, bool ForceReplacement, float TransitionDuration, float TransitionDelay, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "SetNewLocomotionAnimInstance");

	Params::SHNPCAnimInstance_SetNewLocomotionAnimInstance Parms{};

	Parms.NewLocomotionInstance = NewLocomotionInstance;
	Parms.ForceReplacement = ForceReplacement;
	Parms.TransitionDuration = TransitionDuration;
	Parms.TransitionDelay = TransitionDelay;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.GetAnimComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHAnimComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAnimComponent* USHNPCAnimInstance::GetAnimComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "GetAnimComponent");

	Params::SHNPCAnimInstance_GetAnimComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.GetChangeLocomotionSnapshotName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHNPCAnimInstance::GetChangeLocomotionSnapshotName(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "GetChangeLocomotionSnapshotName");

	Params::SHNPCAnimInstance_GetChangeLocomotionSnapshotName Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.GetLocomotionAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHNPCLocomotionAnimInstance*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHNPCLocomotionAnimInstance* USHNPCAnimInstance::GetLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "GetLocomotionAnimInstance");

	Params::SHNPCAnimInstance_GetLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.GetLocomotionChangeAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCAnimInstance::GetLocomotionChangeAlpha(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "GetLocomotionChangeAlpha");

	Params::SHNPCAnimInstance_GetLocomotionChangeAlpha Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstance.GetLocomotionTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHNPCAnimInstance::GetLocomotionTag(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstance", "GetLocomotionTag");

	Params::SHNPCAnimInstance_GetLocomotionTag Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.DecrementReviveSeizure
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InReduceSeizuresCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::DecrementReviveSeizure(float InReduceSeizuresCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "DecrementReviveSeizure");

	Params::SHMonsterAnimInstance_DecrementReviveSeizure Parms{};

	Parms.InReduceSeizuresCount = InReduceSeizuresCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.K2_OnStanceChangedToAggressive
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnStanceChangedToAggressive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnStanceChangedToAggressive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnStanceChangedToCautious
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnStanceChangedToCautious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnStanceChangedToCautious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnStanceChangedToMaximum
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnStanceChangedToMaximum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnStanceChangedToMaximum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnStanceChangedToNeutral
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnStanceChangedToNeutral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnStanceChangedToNeutral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnTransformationToLyingFinished
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnTransformationToLyingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnTransformationToLyingFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnTransformationToLyingStarted
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnTransformationToLyingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnTransformationToLyingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnTransformationToStandingFinished
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnTransformationToStandingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnTransformationToStandingFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.K2_OnTransformationToStandingStarted
// (Event, Protected, BlueprintEvent)

void USHMonsterAnimInstance::K2_OnTransformationToStandingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "K2_OnTransformationToStandingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMonsterAnimInstance.SetEnemyIsOtherWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnemyIsOW                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMonsterAnimInstance::SetEnemyIsOtherWorld(bool InEnemyIsOW)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "SetEnemyIsOtherWorld");

	Params::SHMonsterAnimInstance_SetEnemyIsOtherWorld Parms{};

	Parms.InEnemyIsOW = InEnemyIsOW;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMonsterAnimInstance.SetEnemyReviveSeizuresToBePlayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InSeizuresCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMonsterAnimInstance::SetEnemyReviveSeizuresToBePlayed(float InSeizuresCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "SetEnemyReviveSeizuresToBePlayed");

	Params::SHMonsterAnimInstance_SetEnemyReviveSeizuresToBePlayed Parms{};

	Parms.InSeizuresCount = InSeizuresCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMonsterAnimInstance.GetRemainingReviveSeizuresCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMonsterAnimInstance::GetRemainingReviveSeizuresCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "GetRemainingReviveSeizuresCount");

	Params::SHMonsterAnimInstance_GetRemainingReviveSeizuresCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.IsLying
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    IncludeTransformingInto                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeTransformingOutOf                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::IsLying(bool IncludeTransformingInto, bool IncludeTransformingOutOf) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "IsLying");

	Params::SHMonsterAnimInstance_IsLying Parms{};

	Parms.IncludeTransformingInto = IncludeTransformingInto;
	Parms.IncludeTransformingOutOf = IncludeTransformingOutOf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.IsOtherWorldEnemy
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::IsOtherWorldEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "IsOtherWorldEnemy");

	Params::SHMonsterAnimInstance_IsOtherWorldEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.IsStanding
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    IncludeTransformingInto                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeTransformingOutOf                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::IsStanding(bool IncludeTransformingInto, bool IncludeTransformingOutOf) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "IsStanding");

	Params::SHMonsterAnimInstance_IsStanding Parms{};

	Parms.IncludeTransformingInto = IncludeTransformingInto;
	Parms.IncludeTransformingOutOf = IncludeTransformingOutOf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.IsTransformingToLying
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::IsTransformingToLying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "IsTransformingToLying");

	Params::SHMonsterAnimInstance_IsTransformingToLying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMonsterAnimInstance.IsTransformingToStanding
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMonsterAnimInstance::IsTransformingToStanding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMonsterAnimInstance", "IsTransformingToStanding");

	Params::SHMonsterAnimInstance_IsTransformingToStanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCreeperAnimInstance.GetCreeperAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHCreeperAnimInstanceStateData*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCreeperAnimInstanceStateData* USHCreeperAnimInstance::GetCreeperAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperAnimInstance", "GetCreeperAnimInstanceStateData");

	Params::SHCreeperAnimInstance_GetCreeperAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCreeperAnimInstance.GetCreeperLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHCreeperLocomotionAnimInstance* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCreeperLocomotionAnimInstance* USHCreeperAnimInstance::GetCreeperLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperAnimInstance", "GetCreeperLocomotionAnimInstance");

	Params::SHCreeperAnimInstance_GetCreeperLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFreezingVolume.IsPointWithin
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFreezingVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFreezingVolume", "IsPointWithin");

	Params::SHFreezingVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDPSCounter.ProcessOwnerTakeAnyDamage
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDPSCounter::ProcessOwnerTakeAnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDPSCounter", "ProcessOwnerTakeAnyDamage");

	Params::SHDPSCounter_ProcessOwnerTakeAnyDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDPSCounter.ResetDPS
// (Final, Native, Public, BlueprintCallable)

void USHDPSCounter::ResetDPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDPSCounter", "ResetDPS");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDPSCounter.GetRecentDPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   HistoryPeriodSeconds                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDPSCounter::GetRecentDPS(float HistoryPeriodSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDPSCounter", "GetRecentDPS");

	Params::SHDPSCounter_GetRecentDPS Parms{};

	Parms.HistoryPeriodSeconds = HistoryPeriodSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDPSCounter.GetRecentTotalDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   HistoryPeriodSeconds                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDPSCounter::GetRecentTotalDamage(float HistoryPeriodSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDPSCounter", "GetRecentTotalDamage");

	Params::SHDPSCounter_GetRecentTotalDamage Parms{};

	Parms.HistoryPeriodSeconds = HistoryPeriodSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatSubcomponentBase.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHCombatSubcomponentBase::GetOwnerCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatSubcomponentBase", "GetOwnerCharacter");

	Params::SHCombatSubcomponentBase_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatSubcomponentBase.GetOwningActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHCombatSubcomponentBase::GetOwningActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatSubcomponentBase", "GetOwningActor");

	Params::SHCombatSubcomponentBase_GetOwningActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatSubcomponentBase.GetOwningComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHCharacterPlayCombatComponent*  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCharacterPlayCombatComponent* USHCombatSubcomponentBase::GetOwningComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatSubcomponentBase", "GetOwningComponent");

	Params::SHCombatSubcomponentBase_GetOwningComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnChangeWeaponEquipBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnChangeWeaponEquipBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnChangeWeaponEquipBlendingOut");

	Params::SHWeaponManageCmbSubcomp_OnChangeWeaponEquipBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnChangeWeaponEquipEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnChangeWeaponEquipEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnChangeWeaponEquipEnd");

	Params::SHWeaponManageCmbSubcomp_OnChangeWeaponEquipEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnChangeWeaponUnequipBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnChangeWeaponUnequipBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnChangeWeaponUnequipBlendingOut");

	Params::SHWeaponManageCmbSubcomp_OnChangeWeaponUnequipBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnChangeWeaponUnequipEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnChangeWeaponUnequipEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnChangeWeaponUnequipEnd");

	Params::SHWeaponManageCmbSubcomp_OnChangeWeaponUnequipEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnEquipWeaponEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnEquipWeaponEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnEquipWeaponEnd");

	Params::SHWeaponManageCmbSubcomp_OnEquipWeaponEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.OnUnequipWeaponEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::OnUnequipWeaponEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "OnUnequipWeaponEnd");

	Params::SHWeaponManageCmbSubcomp_OnUnequipWeaponEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.ProcessCombatPoseChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::ProcessCombatPoseChangedEvent(class USHCharacterPlayCombatComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "ProcessCombatPoseChangedEvent");

	Params::SHWeaponManageCmbSubcomp_ProcessCombatPoseChangedEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.ProcessItemRemovedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::ProcessItemRemovedEvent(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "ProcessItemRemovedEvent");

	Params::SHWeaponManageCmbSubcomp_ProcessItemRemovedEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.ProcessPreloadItemAssetsEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::ProcessPreloadItemAssetsEvent(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "ProcessPreloadItemAssetsEvent");

	Params::SHWeaponManageCmbSubcomp_ProcessPreloadItemAssetsEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.ProcessReleasePreloadedItemAssetsEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::ProcessReleasePreloadedItemAssetsEvent(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "ProcessReleasePreloadedItemAssetsEvent");

	Params::SHWeaponManageCmbSubcomp_ProcessReleasePreloadedItemAssetsEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWeaponManageCmbSubcomp.RequestEquipWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WeaponDataRowName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Instant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWeaponManageCmbSubcomp::RequestEquipWeapon(class FName WeaponDataRowName, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "RequestEquipWeapon");

	Params::SHWeaponManageCmbSubcomp_RequestEquipWeapon Parms{};

	Parms.WeaponDataRowName = WeaponDataRowName;
	Parms.Instant = Instant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.RequestUnequipWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Instant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWeaponManageCmbSubcomp::RequestUnequipWeapon(bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "RequestUnequipWeapon");

	Params::SHWeaponManageCmbSubcomp_RequestUnequipWeapon Parms{};

	Parms.Instant = Instant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.SHDebug_Character_Combat_UnequipWeapon
// (Final, Exec, Native, Public)

void USHWeaponManageCmbSubcomp::SHDebug_Character_Combat_UnequipWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "SHDebug_Character_Combat_UnequipWeapon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHWeaponManageCmbSubcomp.SHHWeaponManageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHWeaponManageCmbSubcomp*        WeaponManagerSubcomp                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWeaponManageCmbSubcomp::SHHWeaponManageEvent__DelegateSignature(class USHWeaponManageCmbSubcomp* WeaponManagerSubcomp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "SHHWeaponManageEvent__DelegateSignature");

	Params::SHWeaponManageCmbSubcomp_SHHWeaponManageEvent__DelegateSignature Parms{};

	Parms.WeaponManagerSubcomp = WeaponManagerSubcomp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemWeapon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemWeapon* USHWeaponManageCmbSubcomp::GetEquippedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetEquippedWeapon");

	Params::SHWeaponManageCmbSubcomp_GetEquippedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetEquippedWeaponName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetEquippedWeaponName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetEquippedWeaponName");

	Params::SHWeaponManageCmbSubcomp_GetEquippedWeaponName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetLastUsedMeleeWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetLastUsedMeleeWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetLastUsedMeleeWeapon");

	Params::SHWeaponManageCmbSubcomp_GetLastUsedMeleeWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetLastUsedRangedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetLastUsedRangedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetLastUsedRangedWeapon");

	Params::SHWeaponManageCmbSubcomp_GetLastUsedRangedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetLastUsedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetLastUsedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetLastUsedWeapon");

	Params::SHWeaponManageCmbSubcomp_GetLastUsedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetMeleeWeaponToEquip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Next                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetMeleeWeaponToEquip(bool Next) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetMeleeWeaponToEquip");

	Params::SHWeaponManageCmbSubcomp_GetMeleeWeaponToEquip Parms{};

	Parms.Next = Next;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetNoWeaponDataTableRowName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetNoWeaponDataTableRowName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetNoWeaponDataTableRowName");

	Params::SHWeaponManageCmbSubcomp_GetNoWeaponDataTableRowName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.GetRangedWeaponToEquip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Next                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHWeaponManageCmbSubcomp::GetRangedWeaponToEquip(bool Next) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "GetRangedWeaponToEquip");

	Params::SHWeaponManageCmbSubcomp_GetRangedWeaponToEquip Parms{};

	Parms.Next = Next;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponManageCmbSubcomp.HasEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWeaponManageCmbSubcomp::HasEquippedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponManageCmbSubcomp", "HasEquippedWeapon");

	Params::SHWeaponManageCmbSubcomp_HasEquippedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.AnalyticsGameplayRecorderComponent.SHDebug_Analytics_Gameplay_DumpValues
// (Final, Exec, Native, Public)

void UAnalyticsGameplayRecorderComponent::SHDebug_Analytics_Gameplay_DumpValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsGameplayRecorderComponent", "SHDebug_Analytics_Gameplay_DumpValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsGameplayRecorderComponent.SHDebug_Analytics_Gameplay_EndSession
// (Final, Exec, Native, Public)

void UAnalyticsGameplayRecorderComponent::SHDebug_Analytics_Gameplay_EndSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsGameplayRecorderComponent", "SHDebug_Analytics_Gameplay_EndSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsGameplayRecorderComponent.SHDebug_Analytics_Gameplay_FlushSession
// (Final, Exec, Native, Public)

void UAnalyticsGameplayRecorderComponent::SHDebug_Analytics_Gameplay_FlushSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsGameplayRecorderComponent", "SHDebug_Analytics_Gameplay_FlushSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsGameplayRecorderComponent.SHDebug_Analytics_Gameplay_StartSession
// (Final, Exec, Native, Public)

void UAnalyticsGameplayRecorderComponent::SHDebug_Analytics_Gameplay_StartSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsGameplayRecorderComponent", "SHDebug_Analytics_Gameplay_StartSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsGameplayRecorderComponent.SHDebug_Analytics_Gameplay_ValuesDebug
// (Final, Exec, Native, Public)

void UAnalyticsGameplayRecorderComponent::SHDebug_Analytics_Gameplay_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsGameplayRecorderComponent", "SHDebug_Analytics_Gameplay_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsPerformanceRecorderComponent.SHDebug_Analytics_Performance_DumpCurrentWorldOwnedComponents
// (Final, Exec, Native, Public)

void UAnalyticsPerformanceRecorderComponent::SHDebug_Analytics_Performance_DumpCurrentWorldOwnedComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsPerformanceRecorderComponent", "SHDebug_Analytics_Performance_DumpCurrentWorldOwnedComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsPerformanceRecorderComponent.SHDebug_Analytics_Performance_EndSession
// (Final, Exec, Native, Public)

void UAnalyticsPerformanceRecorderComponent::SHDebug_Analytics_Performance_EndSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsPerformanceRecorderComponent", "SHDebug_Analytics_Performance_EndSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsPerformanceRecorderComponent.SHDebug_Analytics_Performance_FlushSession
// (Final, Exec, Native, Public)

void UAnalyticsPerformanceRecorderComponent::SHDebug_Analytics_Performance_FlushSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsPerformanceRecorderComponent", "SHDebug_Analytics_Performance_FlushSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsPerformanceRecorderComponent.SHDebug_Analytics_Performance_StartSession
// (Final, Exec, Native, Public)

void UAnalyticsPerformanceRecorderComponent::SHDebug_Analytics_Performance_StartSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsPerformanceRecorderComponent", "SHDebug_Analytics_Performance_StartSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnalyticsPerformanceRecorderComponent.SHDebug_Analytics_Performance_ValuesDebug
// (Final, Exec, Native, Public)

void UAnalyticsPerformanceRecorderComponent::SHDebug_Analytics_Performance_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalyticsPerformanceRecorderComponent", "SHDebug_Analytics_Performance_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.AnimNotify_SHAkEvent.ProcessNotify
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequenceBase*                Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAnimNotifyEventReference        EventReference                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           AttachName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    AudioEvent                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFollow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCreatedComponentDestroyOnFinish                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CreatedComponentOcclusionRefreshInverval               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimNotify_SHAkEvent::ProcessNotify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference, const class FString& AttachName, class UAkAudioEvent* AudioEvent, bool bFollow, bool bCreatedComponentDestroyOnFinish, float CreatedComponentOcclusionRefreshInverval) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimNotify_SHAkEvent", "ProcessNotify");

	Params::AnimNotify_SHAkEvent_ProcessNotify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);
	Parms.AttachName = std::move(AttachName);
	Parms.AudioEvent = AudioEvent;
	Parms.bFollow = bFollow;
	Parms.bCreatedComponentDestroyOnFinish = bCreatedComponentDestroyOnFinish;
	Parms.CreatedComponentOcclusionRefreshInverval = CreatedComponentOcclusionRefreshInverval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCombatPushedInterface.CanBePushed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHCombatPushedInterface::CanBePushed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatPushedInterface", "CanBePushed");

	Params::SHCombatPushedInterface_CanBePushed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatPushedInterface.PushedBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Pusher                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHCombatPushedInterface::PushedBy(class AActor* Pusher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatPushedInterface", "PushedBy");

	Params::SHCombatPushedInterface_PushedBy Parms{};

	Parms.Pusher = Pusher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.AskNewGameSettingsWidget.BP_OnHideVisualization
// (Event, Protected, BlueprintEvent)

void UAskNewGameSettingsWidget::BP_OnHideVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AskNewGameSettingsWidget", "BP_OnHideVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.AskNewGameSettingsWidget.BP_OnShowVisualization
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSettingOptionVisualizationData  Visualization                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAskNewGameSettingsWidget::BP_OnShowVisualization(const struct FSettingOptionVisualizationData& Visualization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AskNewGameSettingsWidget", "BP_OnShowVisualization");

	Params::AskNewGameSettingsWidget_BP_OnShowVisualization Parms{};

	Parms.Visualization = std::move(Visualization);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.AskNewGameSettingsWidget.Update
// (Final, Native, Public, BlueprintCallable)

void UAskNewGameSettingsWidget::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AskNewGameSettingsWidget", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoaderComponent.SHDebug_AsyncLoader_DumpValues
// (Final, Exec, Native, Public)

void USHAsyncLoaderComponent::SHDebug_AsyncLoader_DumpValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoaderComponent", "SHDebug_AsyncLoader_DumpValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoaderComponent.SHDebug_AsyncLoader_ToggleSpam
// (Final, Exec, Native, Public)

void USHAsyncLoaderComponent::SHDebug_AsyncLoader_ToggleSpam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoaderComponent", "SHDebug_AsyncLoader_ToggleSpam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoaderComponent.SHDebug_AsyncLoader_ValuesDebug
// (Final, Exec, Native, Public)

void USHAsyncLoaderComponent::SHDebug_AsyncLoader_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoaderComponent", "SHDebug_AsyncLoader_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCombatSnapInterface.CanSnapOnActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHCombatSnapInterface::CanSnapOnActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatSnapInterface", "CanSnapOnActor");

	Params::SHCombatSnapInterface_CanSnapOnActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatSnapInterface.GetSnapLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ISHCombatSnapInterface::GetSnapLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatSnapInterface", "GetSnapLocation");

	Params::SHCombatSnapInterface_GetSnapLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXComponent.FindSubcomponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class USHFXSubcomponent>    SubcomponentClass                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHFXSubcomponent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFXSubcomponent* USHFXComponent::FindSubcomponentByClass(const TSubclassOf<class USHFXSubcomponent> SubcomponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXComponent", "FindSubcomponentByClass");

	Params::SHFXComponent_FindSubcomponentByClass Parms{};

	Parms.SubcomponentClass = SubcomponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXComponent.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXComponent::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXComponent", "IsInitialized");

	Params::SHFXComponent_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.AddValueBlissEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEndingFactorsStatics::AddValueBlissEnding(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "AddValueBlissEnding");

	Params::SHEndingFactorsStatics_AddValueBlissEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.AddValueUFOEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEndingFactorsStatics::AddValueUFOEndingFactor(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "AddValueUFOEndingFactor");

	Params::SHEndingFactorsStatics_AddValueUFOEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.AddValueWestCityFWMariaRedirectionsCommentsEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::AddValueWestCityFWMariaRedirectionsCommentsEndingFactor(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "AddValueWestCityFWMariaRedirectionsCommentsEndingFactor");

	Params::SHEndingFactorsStatics_AddValueWestCityFWMariaRedirectionsCommentsEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.AllowAddValueBlissEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEndingFactorsStatics::AllowAddValueBlissEnding(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "AllowAddValueBlissEnding");

	Params::SHEndingFactorsStatics_AllowAddValueBlissEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.CanPlayBlissEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEndingFactorsStatics::CanPlayBlissEnding(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "CanPlayBlissEnding");

	Params::SHEndingFactorsStatics_CanPlayBlissEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.CanPlayUFOEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEndingFactorsStatics::CanPlayUFOEnding(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "CanPlayUFOEnding");

	Params::SHEndingFactorsStatics_CanPlayUFOEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.GetCurrentEndingType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHEndingType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHEndingType USHEndingFactorsStatics::GetCurrentEndingType(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "GetCurrentEndingType");

	Params::SHEndingFactorsStatics_GetCurrentEndingType Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEndingFactorsStatics.SetHospitalFWLyingMariaInteractionsEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetHospitalFWLyingMariaInteractionsEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetHospitalFWLyingMariaInteractionsEndingFactor");

	Params::SHEndingFactorsStatics_SetHospitalFWLyingMariaInteractionsEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetHotelFWKilledAllDefenselessEnemiesEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetHotelFWKilledAllDefenselessEnemiesEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetHotelFWKilledAllDefenselessEnemiesEndingFactor");

	Params::SHEndingFactorsStatics_SetHotelFWKilledAllDefenselessEnemiesEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetHotelFWListenedSickbedConversationEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetHotelFWListenedSickbedConversationEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetHotelFWListenedSickbedConversationEndingFactor");

	Params::SHEndingFactorsStatics_SetHotelFWListenedSickbedConversationEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetHotelFWPyramidHeadBossAftermathEndingFactorValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHotelFWPyramidHeadBossAftermathEndingFactorValueInValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetHotelFWPyramidHeadBossAftermathEndingFactorValue(class UObject* WorldContextObject, ESHHotelFWPyramidHeadBossAftermathEndingFactorValue InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetHotelFWPyramidHeadBossAftermathEndingFactorValue");

	Params::SHEndingFactorsStatics_SetHotelFWPyramidHeadBossAftermathEndingFactorValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetHotelOWMirrorPuzzleEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHotelOWMirrorPuzzleEndingFactorValue InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetHotelOWMirrorPuzzleEndingFactor(class UObject* WorldContextObject, ESHHotelOWMirrorPuzzleEndingFactorValue InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetHotelOWMirrorPuzzleEndingFactor");

	Params::SHEndingFactorsStatics_SetHotelOWMirrorPuzzleEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetLabyrinthMariaRoomsEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetLabyrinthMariaRoomsEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetLabyrinthMariaRoomsEndingFactor");

	Params::SHEndingFactorsStatics_SetLabyrinthMariaRoomsEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetNeelysBarMessageEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetNeelysBarMessageEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetNeelysBarMessageEndingFactor");

	Params::SHEndingFactorsStatics_SetNeelysBarMessageEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetPrisonGallowPuzzleEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHPrisonGallowPuzzleEndingFactorValue  InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetPrisonGallowPuzzleEndingFactor(class UObject* WorldContextObject, ESHPrisonGallowPuzzleEndingFactorValue InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetPrisonGallowPuzzleEndingFactor");

	Params::SHEndingFactorsStatics_SetPrisonGallowPuzzleEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetPyramidHeadBossFightOutcomeEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHPyramidHeadBossFightOutcomeEndingFactorValueInValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetPyramidHeadBossFightOutcomeEndingFactor(class UObject* WorldContextObject, ESHPyramidHeadBossFightOutcomeEndingFactorValue InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetPyramidHeadBossFightOutcomeEndingFactor");

	Params::SHEndingFactorsStatics_SetPyramidHeadBossFightOutcomeEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetWestCityFWInteractedAllAtHeavensNightEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetWestCityFWInteractedAllAtHeavensNightEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetWestCityFWInteractedAllAtHeavensNightEndingFactor");

	Params::SHEndingFactorsStatics_SetWestCityFWInteractedAllAtHeavensNightEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetWestCityFWMariaInteractionsEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetWestCityFWMariaInteractionsEndingFactor(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetWestCityFWMariaInteractionsEndingFactor");

	Params::SHEndingFactorsStatics_SetWestCityFWMariaInteractionsEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEndingFactorsStatics.SetWoodsideCoinPuzzleEndingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHWoodsideCoinPuzzleEndingFactorValue  InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEndingFactorsStatics::SetWoodsideCoinPuzzleEndingFactor(class UObject* WorldContextObject, ESHWoodsideCoinPuzzleEndingFactorValue InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEndingFactorsStatics", "SetWoodsideCoinPuzzleEndingFactor");

	Params::SHEndingFactorsStatics_SetWoodsideCoinPuzzleEndingFactor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.GetValidRegions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHSwarmRegionBase>   RegionClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USHSwarmRegionBase*>       OutComponents                                          (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    RemoveDisabledRegions                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::GetValidRegions(TSubclassOf<class USHSwarmRegionBase> RegionClass, TArray<class USHSwarmRegionBase*>* OutComponents, bool RemoveDisabledRegions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "GetValidRegions");

	Params::SHSwarmBase_GetValidRegions Parms{};

	Parms.RegionClass = RegionClass;
	Parms.RemoveDisabledRegions = RemoveDisabledRegions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutComponents != nullptr)
		*OutComponents = std::move(Parms.OutComponents);
}


// Function SHProto.SHSwarmBase.InitializeSwarm
// (Final, Native, Protected, BlueprintCallable)

void ASHSwarmBase::InitializeSwarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "InitializeSwarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.OnFlashlightOff
// (Event, Public, BlueprintEvent)

void ASHSwarmBase::OnFlashlightOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "OnFlashlightOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSwarmBase.OnFlashlightOn
// (Event, Public, BlueprintEvent)

void ASHSwarmBase::OnFlashlightOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "OnFlashlightOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSwarmBase.OnWeaponFireEffect
// (Event, Public, BlueprintEvent)

void ASHSwarmBase::OnWeaponFireEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "OnWeaponFireEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSwarmBase.OnWeaponFireEffectImpl
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::OnWeaponFireEffectImpl(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "OnWeaponFireEffectImpl");

	Params::SHSwarmBase_OnWeaponFireEffectImpl Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshAllRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshAllRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshAllRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshAllVariables
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshAllVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshAllVariables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshBoundRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshBoundRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshBoundRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshDestroyRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshDestroyRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshDestroyRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshFollowPoints
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshFollowPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshFollowPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshFollowRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshFollowRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshFollowRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshReflectRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshReflectRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshReflectRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshRegions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             RegionNiagaraName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class USHSwarmRegionBase>   RegionClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::RefreshRegions(const class FName& RegionNiagaraName, const TSubclassOf<class USHSwarmRegionBase> RegionClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshRegions");

	Params::SHSwarmBase_RefreshRegions Parms{};

	Parms.RegionNiagaraName = RegionNiagaraName;
	Parms.RegionClass = RegionClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshRegionsSimply
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             RegionNiagaraName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class USHSwarmRegionBase>   RegionClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::RefreshRegionsSimply(const class FName& RegionNiagaraName, const TSubclassOf<class USHSwarmRegionBase> RegionClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshRegionsSimply");

	Params::SHSwarmBase_RefreshRegionsSimply Parms{};

	Parms.RegionNiagaraName = RegionNiagaraName;
	Parms.RegionClass = RegionClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.RefreshSpawnRegions
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::RefreshSpawnRegions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "RefreshSpawnRegions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.SetSwarmDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDisable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::SetSwarmDisabled(bool IsDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "SetSwarmDisabled");

	Params::SHSwarmBase_SetSwarmDisabled Parms{};

	Parms.IsDisable = IsDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.ShowAllDebugRegions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::ShowAllDebugRegions(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "ShowAllDebugRegions");

	Params::SHSwarmBase_ShowAllDebugRegions Parms{};

	Parms.IsShow = IsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.UpdateStateAngleCone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESwarmCreeperState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::UpdateStateAngleCone(ESwarmCreeperState State, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "UpdateStateAngleCone");

	Params::SHSwarmBase_UpdateStateAngleCone Parms{};

	Parms.State = State;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.UpdateStateParameters
// (Final, Native, Public, BlueprintCallable)

void ASHSwarmBase::UpdateStateParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "UpdateStateParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.UpdateStateSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ESwarmCreeperState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::UpdateStateSpeed(ESwarmCreeperState State, const struct FVector2D& Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "UpdateStateSpeed");

	Params::SHSwarmBase_UpdateStateSpeed Parms{};

	Parms.State = State;
	Parms.Speed = std::move(Speed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmBase.UpdateStateTime
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ESwarmCreeperState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmBase::UpdateStateTime(ESwarmCreeperState State, const struct FVector2D& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmBase", "UpdateStateTime");

	Params::SHSwarmBase_UpdateStateTime Parms{};

	Parms.State = State;
	Parms.Time = std::move(Time);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCityOWNeelysBarMessageEndingFactor.SHDebug_Character_Endings_CityOWNeelysBarMessageEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCityOWNeelysBarMessageEndingFactor::SHDebug_Character_Endings_CityOWNeelysBarMessageEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCityOWNeelysBarMessageEndingFactor", "SHDebug_Character_Endings_CityOWNeelysBarMessageEndingFactor_SetDebugValue");

	Params::SHCityOWNeelysBarMessageEndingFactor_SHDebug_Character_Endings_CityOWNeelysBarMessageEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHAimedAtComponent.AimedAtEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USHAimedAtComponent::AimedAtEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "AimedAtEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHAimedAtComponent.EndBeingAimedAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAimingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAimedAtComponent::EndBeingAimedAt(class AActor* InAimingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "EndBeingAimedAt");

	Params::SHAimedAtComponent_EndBeingAimedAt Parms{};

	Parms.InAimingActor = InAimingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAimedAtComponent.ResetAimedAtDuration
// (Final, Native, Public, BlueprintCallable)

void USHAimedAtComponent::ResetAimedAtDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "ResetAimedAtDuration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAimedAtComponent.StartBeingAimedAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAimingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InAimedWithActor                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAimedAtComponent::StartBeingAimedAt(class AActor* InAimingActor, class AActor* InAimedWithActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "StartBeingAimedAt");

	Params::SHAimedAtComponent_StartBeingAimedAt Parms{};

	Parms.InAimingActor = InAimingActor;
	Parms.InAimedWithActor = InAimedWithActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAimedAtComponent.GetAimedWithActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHAimedAtComponent::GetAimedWithActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "GetAimedWithActor");

	Params::SHAimedAtComponent_GetAimedWithActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimedAtComponent.GetAimingActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHAimedAtComponent::GetAimingActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "GetAimingActor");

	Params::SHAimedAtComponent_GetAimingActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimedAtComponent.GetBeingAimedAtDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAimedAtComponent::GetBeingAimedAtDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "GetBeingAimedAtDuration");

	Params::SHAimedAtComponent_GetBeingAimedAtDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimedAtComponent.IsAlloweedToBeShoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAimedAtComponent::IsAlloweedToBeShoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "IsAlloweedToBeShoot");

	Params::SHAimedAtComponent_IsAlloweedToBeShoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimedAtComponent.IsBeingAimedAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAimedAtComponent::IsBeingAimedAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimedAtComponent", "IsBeingAimedAt");

	Params::SHAimedAtComponent_IsBeingAimedAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCrosshairWidget.OnAnimFinished
// (Final, Native, Protected)

void USHCrosshairWidget::OnAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCrosshairWidget", "OnAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHControlTipsPanel.Hide
// (Final, Native, Public, BlueprintCallable)

void USHControlTipsPanel::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHControlTipsPanel", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHControlTipsPanel.Show
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     WantedTooltips                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    WithBackground                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseVisibilitySettings                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHControlTipsPanel::Show(const TArray<class FName>& WantedTooltips, bool WithBackground, bool UseVisibilitySettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHControlTipsPanel", "Show");

	Params::SHControlTipsPanel_Show Parms{};

	Parms.WantedTooltips = std::move(WantedTooltips);
	Parms.WithBackground = WithBackground;
	Parms.UseVisibilitySettings = UseVisibilitySettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHControlTipsPanel.ShowBackground
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHControlTipsPanel::ShowBackground(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHControlTipsPanel", "ShowBackground");

	Params::SHControlTipsPanel_ShowBackground Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetActorFromTarget
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHLookAtTargetScoreFunction::GetActorFromTarget(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetActorFromTarget");

	Params::SHLookAtTargetScoreFunction_GetActorFromTarget Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHLookAtTargetScoreFunction::GetCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetCharacter");

	Params::SHLookAtTargetScoreFunction_GetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetDefaultLookAtTargetScore
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHLookAtTargetScoreFunction::GetDefaultLookAtTargetScore(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetDefaultLookAtTargetScore");

	Params::SHLookAtTargetScoreFunction_GetDefaultLookAtTargetScore Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetLookAtTargetScore
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHLookAtTargetScoreFunction::GetLookAtTargetScore(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetLookAtTargetScore");

	Params::SHLookAtTargetScoreFunction_GetLookAtTargetScore Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetTargetActorAngleDeltas
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHLookAtTargetScoreFunction::GetTargetActorAngleDeltas(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetTargetActorAngleDeltas");

	Params::SHLookAtTargetScoreFunction_GetTargetActorAngleDeltas Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetTargetActortDistance
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLookAtTargetScoreFunction::GetTargetActortDistance(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetTargetActortDistance");

	Params::SHLookAtTargetScoreFunction_GetTargetActortDistance Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetTargetComponentAngleDeltas
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHLookAtTargetScoreFunction::GetTargetComponentAngleDeltas(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetTargetComponentAngleDeltas");

	Params::SHLookAtTargetScoreFunction_GetTargetComponentAngleDeltas Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.GetTargetComponentDistance
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLookAtTargetScoreFunction::GetTargetComponentDistance(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "GetTargetComponentDistance");

	Params::SHLookAtTargetScoreFunction_GetTargetComponentDistance Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtTargetScoreFunction.IsLookAtTargetValid
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHLookAtTarget                  LookAtTarget                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLookAtTargetScoreFunction::IsLookAtTargetValid(const struct FSHLookAtTarget& LookAtTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtTargetScoreFunction", "IsLookAtTargetValid");

	Params::SHLookAtTargetScoreFunction_IsLookAtTargetValid Parms{};

	Parms.LookAtTarget = std::move(LookAtTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatStatisticsValueProcessor.ProcessRangedFireSuccess
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCombatStatisticsValueProcessor::ProcessRangedFireSuccess(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatStatisticsValueProcessor", "ProcessRangedFireSuccess");

	Params::SHCombatStatisticsValueProcessor_ProcessRangedFireSuccess Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLabyrinthMariaRoomsEndingFactor.SHDebug_Character_Endings_LabyrinthMariaRoomsEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLabyrinthMariaRoomsEndingFactor::SHDebug_Character_Endings_LabyrinthMariaRoomsEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLabyrinthMariaRoomsEndingFactor", "SHDebug_Character_Endings_LabyrinthMariaRoomsEndingFactor_SetDebugValue");

	Params::SHLabyrinthMariaRoomsEndingFactor_SHDebug_Character_Endings_LabyrinthMariaRoomsEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCreeperLocomotionAnimInstance.CacheTurnInPlaceAngle
// (Final, Native, Protected, BlueprintCallable)

void USHCreeperLocomotionAnimInstance::CacheTurnInPlaceAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperLocomotionAnimInstance", "CacheTurnInPlaceAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCreeperLocomotionAnimInstance.GetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   OutVectorSize                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVectorYaw                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Smoothing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCreeperLocomotionAnimInstance::GetDesiredVelocitySizeAndYaw(float* OutVectorSize, float* OutVectorYaw, float Smoothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperLocomotionAnimInstance", "GetDesiredVelocitySizeAndYaw");

	Params::SHCreeperLocomotionAnimInstance_GetDesiredVelocitySizeAndYaw Parms{};

	Parms.Smoothing = Smoothing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVectorSize != nullptr)
		*OutVectorSize = Parms.OutVectorSize;

	if (OutVectorYaw != nullptr)
		*OutVectorYaw = Parms.OutVectorYaw;
}


// Function SHProto.SHCreeperLocomotionAnimInstance.GetCreeperAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHCreeperAnimInstanceStateData*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCreeperAnimInstanceStateData* USHCreeperLocomotionAnimInstance::GetCreeperAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperLocomotionAnimInstance", "GetCreeperAnimInstanceStateData");

	Params::SHCreeperLocomotionAnimInstance_GetCreeperAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWestCityFWMariaRedirectionsCommentsEndingFactor.SHDebug_Character_Endings_WestCityFWMariaRedirectionsCommentsEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWestCityFWMariaRedirectionsCommentsEndingFactor::SHDebug_Character_Endings_WestCityFWMariaRedirectionsCommentsEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWestCityFWMariaRedirectionsCommentsEndingFactor", "SHDebug_Character_Endings_WestCityFWMariaRedirectionsCommentsEndingFactor_SetDebugValue");

	Params::SHWestCityFWMariaRedirectionsCommentsEndingFactor_SHDebug_Character_Endings_WestCityFWMariaRedirectionsCommentsEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.OnReceiveDamageEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHReceiveDamageCmbSubcomp::OnReceiveDamageEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "OnReceiveDamageEnd");

	Params::SHReceiveDamageCmbSubcomp_OnReceiveDamageEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.ReceiveDamage
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   DamageValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          DamageType                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHReceiveDamageCmbSubcomp::ReceiveDamage(float DamageValue, const class UObject* Object, const struct FVector& HitDirection, const TSubclassOf<class UDamageType>& DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "ReceiveDamage");

	Params::SHReceiveDamageCmbSubcomp_ReceiveDamage Parms{};

	Parms.DamageValue = DamageValue;
	Parms.Object = Object;
	Parms.HitDirection = std::move(HitDirection);
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.SetReceiveContinuousDamageBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHReceiveDamageCmbSubcomp::SetReceiveContinuousDamageBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "SetReceiveContinuousDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_SetReceiveContinuousDamageBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.SetReceiveSoftDamageBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHReceiveDamageCmbSubcomp::SetReceiveSoftDamageBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "SetReceiveSoftDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_SetReceiveSoftDamageBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.SetReceiveStunDamageBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHReceiveDamageCmbSubcomp::SetReceiveStunDamageBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "SetReceiveStunDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_SetReceiveStunDamageBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.SynchroReceiveDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayAnimationData               AnimData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHReceiveDamageCmbSubcomp::SynchroReceiveDamage(const class UObject* Object, const struct FPlayAnimationData& AnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "SynchroReceiveDamage");

	Params::SHReceiveDamageCmbSubcomp_SynchroReceiveDamage Parms{};

	Parms.Object = Object;
	Parms.AnimData = std::move(AnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.IsReceiveContinuousDamageBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHReceiveDamageCmbSubcomp::IsReceiveContinuousDamageBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "IsReceiveContinuousDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_IsReceiveContinuousDamageBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.IsReceiveSoftDamageBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHReceiveDamageCmbSubcomp::IsReceiveSoftDamageBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "IsReceiveSoftDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_IsReceiveSoftDamageBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHReceiveDamageCmbSubcomp.IsReceiveStunDamageBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHReceiveDamageCmbSubcomp::IsReceiveStunDamageBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHReceiveDamageCmbSubcomp", "IsReceiveStunDamageBlocked");

	Params::SHReceiveDamageCmbSubcomp_IsReceiveStunDamageBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleCustomEnter
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleCustomEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleCustomEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleCustomExit
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleCustomExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleCustomExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleCustomStateUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHLocomotionAnimInstance::OnIdleCustomStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleCustomStateUpdate");

	Params::SHLocomotionAnimInstance_OnIdleCustomStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleEnter
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleExit
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleLoopEnter
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleLoopEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleLoopEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleLoopExit
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnIdleLoopExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleLoopExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnIdleLoopStateUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHLocomotionAnimInstance::OnIdleLoopStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnIdleLoopStateUpdate");

	Params::SHLocomotionAnimInstance_OnIdleLoopStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnMoveEnter
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnMoveEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnMoveEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnMoveExit
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnMoveExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnMoveExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnMoveStateUpdate
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHLocomotionAnimInstance::OnMoveStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnMoveStateUpdate");

	Params::SHLocomotionAnimInstance_OnMoveStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.OnStopEnter
// (Final, Native, Public, BlueprintCallable)

void USHLocomotionAnimInstance::OnStopEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "OnStopEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.SetForcedCloseToWallState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          RequestOwner                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLocomotionAnimInstance::SetForcedCloseToWallState(bool Enabled, class UObject* RequestOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "SetForcedCloseToWallState");

	Params::SHLocomotionAnimInstance_SetForcedCloseToWallState Parms{};

	Parms.Enabled = Enabled;
	Parms.RequestOwner = RequestOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocomotionAnimInstance.GetControlRotationYawDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLocomotionAnimInstance::GetControlRotationYawDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetControlRotationYawDelta");

	Params::SHLocomotionAnimInstance_GetControlRotationYawDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetCurrentMovementProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHMovementProfile                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHMovementProfile USHLocomotionAnimInstance::GetCurrentMovementProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetCurrentMovementProfile");

	Params::SHLocomotionAnimInstance_GetCurrentMovementProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemWeapon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemWeapon* USHLocomotionAnimInstance::GetEquippedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetEquippedWeapon");

	Params::SHLocomotionAnimInstance_GetEquippedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetForcedCloseToWallState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::GetForcedCloseToWallState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetForcedCloseToWallState");

	Params::SHLocomotionAnimInstance_GetForcedCloseToWallState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetHealthState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHealthStateEnum                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHHealthStateEnum USHLocomotionAnimInstance::GetHealthState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetHealthState");

	Params::SHLocomotionAnimInstance_GetHealthState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetInteriorExteriorState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHInteriorExteriorStateEnum            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHInteriorExteriorStateEnum USHLocomotionAnimInstance::GetInteriorExteriorState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetInteriorExteriorState");

	Params::SHLocomotionAnimInstance_GetInteriorExteriorState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetMoveDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLocomotionAnimInstance::GetMoveDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetMoveDirection");

	Params::SHLocomotionAnimInstance_GetMoveDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.GetQuantizedMoveDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLocomotionAnimInstance::GetQuantizedMoveDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "GetQuantizedMoveDirection");

	Params::SHLocomotionAnimInstance_GetQuantizedMoveDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.HasMovementInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::HasMovementInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "HasMovementInput");

	Params::SHLocomotionAnimInstance_HasMovementInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.HasValidLookAtTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::HasValidLookAtTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "HasValidLookAtTarget");

	Params::SHLocomotionAnimInstance_HasValidLookAtTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsCloseToEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsCloseToEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsCloseToEnemy");

	Params::SHLocomotionAnimInstance_IsCloseToEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsCloseToWall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsCloseToWall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsCloseToWall");

	Params::SHLocomotionAnimInstance_IsCloseToWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsInDangerMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsInDangerMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsInDangerMode");

	Params::SHLocomotionAnimInstance_IsInDangerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsInWater() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsInWater");

	Params::SHLocomotionAnimInstance_IsInWater Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsMoving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsMoving");

	Params::SHLocomotionAnimInstance_IsMoving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsObstacleDetected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsObstacleDetected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsObstacleDetected");

	Params::SHLocomotionAnimInstance_IsObstacleDetected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    OverrideIfInWater                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsSprinting(bool OverrideIfInWater) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsSprinting");

	Params::SHLocomotionAnimInstance_IsSprinting Parms{};

	Parms.OverrideIfInWater = OverrideIfInWater;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.IsSprinting_WaterOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::IsSprinting_WaterOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "IsSprinting_WaterOverride");

	Params::SHLocomotionAnimInstance_IsSprinting_WaterOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.NotShouldMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::NotShouldMove() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "NotShouldMove");

	Params::SHLocomotionAnimInstance_NotShouldMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.Rule_IdleCustomToIdleDefault
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::Rule_IdleCustomToIdleDefault() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "Rule_IdleCustomToIdleDefault");

	Params::SHLocomotionAnimInstance_Rule_IdleCustomToIdleDefault Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.Rule_IdleDefaultToIdleCustom
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::Rule_IdleDefaultToIdleCustom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "Rule_IdleDefaultToIdleCustom");

	Params::SHLocomotionAnimInstance_Rule_IdleDefaultToIdleCustom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.Rule_RunToWalk
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::Rule_RunToWalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "Rule_RunToWalk");

	Params::SHLocomotionAnimInstance_Rule_RunToWalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.Rule_WalkToRun
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::Rule_WalkToRun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "Rule_WalkToRun");

	Params::SHLocomotionAnimInstance_Rule_WalkToRun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.ShouldMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::ShouldMove() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "ShouldMove");

	Params::SHLocomotionAnimInstance_ShouldMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.ShouldProcessRotateInPlace
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionAnimInstance::ShouldProcessRotateInPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "ShouldProcessRotateInPlace");

	Params::SHLocomotionAnimInstance_ShouldProcessRotateInPlace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionAnimInstance.TryGetCurrentStateWeight
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FAnimNodeReference               Node                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLocomotionAnimInstance::TryGetCurrentStateWeight(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionAnimInstance", "TryGetCurrentStateWeight");

	Params::SHLocomotionAnimInstance_TryGetCurrentStateWeight Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.CountUniqueSeenEndings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHCustomSaveStatics::CountUniqueSeenEndings(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "CountUniqueSeenEndings");

	Params::SHCustomSaveStatics_CountUniqueSeenEndings Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.FetchActorSavedPropertyBoolValue
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            InActorGuid                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPropertyName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutFetchSuccess                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutFoundValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomSaveStatics::FetchActorSavedPropertyBoolValue(const class UObject* WorldContextObject, const struct FGuid& InActorGuid, class FName InPropertyName, bool* OutFetchSuccess, bool* OutFoundValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "FetchActorSavedPropertyBoolValue");

	Params::SHCustomSaveStatics_FetchActorSavedPropertyBoolValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InActorGuid = std::move(InActorGuid);
	Parms.InPropertyName = InPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFetchSuccess != nullptr)
		*OutFetchSuccess = Parms.OutFetchSuccess;

	if (OutFoundValue != nullptr)
		*OutFoundValue = Parms.OutFoundValue;
}


// Function SHProto.SHCustomSaveStatics.GetDeathCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHCustomSaveStatics::GetDeathCount(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "GetDeathCount");

	Params::SHCustomSaveStatics_GetDeathCount Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasEverFinishedGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasEverFinishedGame(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasEverFinishedGame");

	Params::SHCustomSaveStatics_HasEverFinishedGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasEverSeenLeaveEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasEverSeenLeaveEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasEverSeenLeaveEnding");

	Params::SHCustomSaveStatics_HasEverSeenLeaveEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasSeenBlissEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasSeenBlissEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasSeenBlissEnding");

	Params::SHCustomSaveStatics_HasSeenBlissEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasSeenInWaterEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasSeenInWaterEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasSeenInWaterEnding");

	Params::SHCustomSaveStatics_HasSeenInWaterEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasSeenMariaEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasSeenMariaEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasSeenMariaEnding");

	Params::SHCustomSaveStatics_HasSeenMariaEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasSeenRebirthEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasSeenRebirthEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasSeenRebirthEnding");

	Params::SHCustomSaveStatics_HasSeenRebirthEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.HasSeenStillnessEnding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::HasSeenStillnessEnding(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "HasSeenStillnessEnding");

	Params::SHCustomSaveStatics_HasSeenStillnessEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.IsNewGamePlus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCustomSaveStatics::IsNewGamePlus(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "IsNewGamePlus");

	Params::SHCustomSaveStatics_IsNewGamePlus Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCustomSaveStatics.RegisterSeenEnding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHEndingType                           InEndingType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomSaveStatics::RegisterSeenEnding(const class UObject* WorldContextObject, ESHEndingType InEndingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCustomSaveStatics", "RegisterSeenEnding");

	Params::SHCustomSaveStatics_RegisterSeenEnding Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InEndingType = InEndingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimComponent.CreateAnimActionExe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHAnimActionExecutiveBase>AnimActionExeClass                                     (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InContextObject                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimComponent::CreateAnimActionExe(TSubclassOf<class USHAnimActionExecutiveBase> AnimActionExeClass, class UObject* InContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "CreateAnimActionExe");

	Params::SHAnimComponent_CreateAnimActionExe Parms{};

	Parms.AnimActionExeClass = AnimActionExeClass;
	Parms.InContextObject = InContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.LinkGameplayAnimInst
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UAnimInstance>        InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimInstance*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimInstance* USHAnimComponent::LinkGameplayAnimInst(TSubclassOf<class UAnimInstance> InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "LinkGameplayAnimInst");

	Params::SHAnimComponent_LinkGameplayAnimInst Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.SetAnimActionBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimComponent::SetAnimActionBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "SetAnimActionBlocked");

	Params::SHAnimComponent_SetAnimActionBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimComponent.UnlinkGameplayAnimInst
// (Final, Native, Public, BlueprintCallable)

void USHAnimComponent::UnlinkGameplayAnimInst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "UnlinkGameplayAnimInst");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimComponent.FindSubcomponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class USHAnimSubcomponentBase>SubcomponentClass                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHAnimSubcomponentBase*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAnimSubcomponentBase* USHAnimComponent::FindSubcomponentByClass(const TSubclassOf<class USHAnimSubcomponentBase> SubcomponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "FindSubcomponentByClass");

	Params::SHAnimComponent_FindSubcomponentByClass Parms{};

	Parms.SubcomponentClass = SubcomponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetAnimActionExe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHAnimActionExecutiveBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAnimActionExecutiveBase* USHAnimComponent::GetAnimActionExe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetAnimActionExe");

	Params::SHAnimComponent_GetAnimActionExe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BoneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBones                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBones USHAnimComponent::GetBoneFromName(class FName BoneType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneFromName");

	Params::SHAnimComponent_GetBoneFromName Parms{};

	Parms.BoneType = BoneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  BoneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBoneSpaces                             TransformSpace                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimComponent::GetBoneLocation(EBones BoneType, EBoneSpaces TransformSpace) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneLocation");

	Params::SHAnimComponent_GetBoneLocation Parms{};

	Parms.BoneType = BoneType;
	Parms.TransformSpace = TransformSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  BoneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHAnimComponent::GetBoneName(EBones BoneType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneName");

	Params::SHAnimComponent_GetBoneName Parms{};

	Parms.BoneType = BoneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneRootLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimComponent::GetBoneRootLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneRootLocation");

	Params::SHAnimComponent_GetBoneRootLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  BoneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERelativeTransformSpace                 TransformSpace                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHAnimComponent::GetBoneRotation(EBones BoneType, ERelativeTransformSpace TransformSpace) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneRotation");

	Params::SHAnimComponent_GetBoneRotation Parms{};

	Parms.BoneType = BoneType;
	Parms.TransformSpace = TransformSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetBoneTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  BoneType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERelativeTransformSpace                 Space                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform USHAnimComponent::GetBoneTransform(EBones BoneType, ERelativeTransformSpace Space) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetBoneTransform");

	Params::SHAnimComponent_GetBoneTransform Parms{};

	Parms.BoneType = BoneType;
	Parms.Space = Space;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetCharacterBodyForward
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimComponent::GetCharacterBodyForward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetCharacterBodyForward");

	Params::SHAnimComponent_GetCharacterBodyForward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetCharacterBodyRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHAnimComponent::GetCharacterBodyRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetCharacterBodyRotation");

	Params::SHAnimComponent_GetCharacterBodyRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetHipsForward
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimComponent::GetHipsForward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetHipsForward");

	Params::SHAnimComponent_GetHipsForward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.GetSkeletonSocketName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESkeletonSockets                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHAnimComponent::GetSkeletonSocketName(ESkeletonSockets SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "GetSkeletonSocketName");

	Params::SHAnimComponent_GetSkeletonSocketName Parms{};

	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.IsAnimActionBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimComponent::IsAnimActionBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "IsAnimActionBlocked");

	Params::SHAnimComponent_IsAnimActionBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.IsGameplayLinkedAnimInstSupported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimComponent::IsGameplayLinkedAnimInstSupported() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "IsGameplayLinkedAnimInstSupported");

	Params::SHAnimComponent_IsGameplayLinkedAnimInstSupported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimComponent.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimComponent::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimComponent", "IsInitialized");

	Params::SHAnimComponent_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoor.ProcessDoorAlphaChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementBaseComponent*     MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoor::ProcessDoorAlphaChanged(class USHDoorMovementBaseComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoor", "ProcessDoorAlphaChanged");

	Params::SHDoor_ProcessDoorAlphaChanged Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoor.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoor::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoor", "ProcessInteractionManagerInitialized");

	Params::SHDoor_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.OnTraversalFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHDetectionSide                        Side                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::OnTraversalFinished(const ESHDetectionSide Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "OnTraversalFinished");

	Params::SHTraversalLadder_OnTraversalFinished Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalLadder.OnTraversalStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHDetectionSide                        Side                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::OnTraversalStarted(const ESHDetectionSide Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "OnTraversalStarted");

	Params::SHTraversalLadder_OnTraversalStarted Parms{};

	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalLadder.ProcessEndTraversalFinish
// (Final, Native, Protected)

void ASHTraversalLadder::ProcessEndTraversalFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessEndTraversalFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessEndTraversalStart
// (Final, Native, Protected)

void ASHTraversalLadder::ProcessEndTraversalStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessEndTraversalStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessInteract
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessInteract(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessInteract");

	Params::SHTraversalLadder_ProcessInteract Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessInteractionManagerAboveInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessInteractionManagerAboveInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessInteractionManagerAboveInitialized");

	Params::SHTraversalLadder_ProcessInteractionManagerAboveInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessInteractionManagerBelowInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessInteractionManagerBelowInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessInteractionManagerBelowInitialized");

	Params::SHTraversalLadder_ProcessInteractionManagerBelowInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessLookAtRotationAbsoluteEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessLookAtRotationAbsoluteEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessLookAtRotationAbsoluteEnd");

	Params::SHTraversalLadder_ProcessLookAtRotationAbsoluteEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessMovementSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessMovementSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessMovementSnapEnd");

	Params::SHTraversalLadder_ProcessMovementSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadder.ProcessSlideSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::ProcessSlideSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ProcessSlideSnapEnd");

	Params::SHTraversalLadder_ProcessSlideSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHTraversalLadder.SHLadderEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHTraversalLadder*               LadderActorPtr                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::SHLadderEvent__DelegateSignature(class ASHTraversalLadder* LadderActorPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "SHLadderEvent__DelegateSignature");

	Params::SHTraversalLadder_SHLadderEvent__DelegateSignature Parms{};

	Parms.LadderActorPtr = LadderActorPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalLadder.SHLadderTraversalEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHTraversalLadder*               LadderActorPtr                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHDetectionSide                        Side                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHTraversalLadder::SHLadderTraversalEvent__DelegateSignature(class ASHTraversalLadder* LadderActorPtr, ESHDetectionSide Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "SHLadderTraversalEvent__DelegateSignature");

	Params::SHTraversalLadder_SHLadderTraversalEvent__DelegateSignature Parms{};

	Parms.LadderActorPtr = LadderActorPtr;
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalLadder.ComputeStepWorldTransformClosestTo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InWorldLoc                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform ASHTraversalLadder::ComputeStepWorldTransformClosestTo(const struct FVector& InWorldLoc) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadder", "ComputeStepWorldTransformClosestTo");

	Params::SHTraversalLadder_ComputeStepWorldTransformClosestTo Parms{};

	Parms.InWorldLoc = std::move(InWorldLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureLocomotionAnimInstance.GetLyingFigureAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLyingFigureAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLyingFigureAnimInstanceStateData* USHLyingFigureLocomotionAnimInstance::GetLyingFigureAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureLocomotionAnimInstance", "GetLyingFigureAnimInstanceStateData");

	Params::SHLyingFigureLocomotionAnimInstance_GetLyingFigureAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHLyingFigureCrawlingLocomotionAnimInstance.GetTransformationToStandingAnimation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         InLocalRotation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UAnimSequenceBase*                OutAnimation                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutPlayRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBlendInDuration                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBlendOutDuration                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutAnimationRotation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         OutRemainderRotation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    OutUsesDelayedRootRotation                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureCrawlingLocomotionAnimInstance::GetTransformationToStandingAnimation(const struct FRotator& InLocalRotation, class UAnimSequenceBase** OutAnimation, float* OutPlayRate, float* OutBlendInDuration, float* OutBlendOutDuration, struct FRotator* OutAnimationRotation, struct FRotator* OutRemainderRotation, bool* OutUsesDelayedRootRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureCrawlingLocomotionAnimInstance", "GetTransformationToStandingAnimation");

	Params::SHLyingFigureCrawlingLocomotionAnimInstance_GetTransformationToStandingAnimation Parms{};

	Parms.InLocalRotation = std::move(InLocalRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimation != nullptr)
		*OutAnimation = Parms.OutAnimation;

	if (OutPlayRate != nullptr)
		*OutPlayRate = Parms.OutPlayRate;

	if (OutBlendInDuration != nullptr)
		*OutBlendInDuration = Parms.OutBlendInDuration;

	if (OutBlendOutDuration != nullptr)
		*OutBlendOutDuration = Parms.OutBlendOutDuration;

	if (OutAnimationRotation != nullptr)
		*OutAnimationRotation = std::move(Parms.OutAnimationRotation);

	if (OutRemainderRotation != nullptr)
		*OutRemainderRotation = std::move(Parms.OutRemainderRotation);

	if (OutUsesDelayedRootRotation != nullptr)
		*OutUsesDelayedRootRotation = Parms.OutUsesDelayedRootRotation;
}


// Function SHProto.SHDefenceCmbSubcomp.HandleSyncedActionBegin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       CharacterSynchedWith                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::HandleSyncedActionBegin(class ACharacter* CharacterSynchedWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "HandleSyncedActionBegin");

	Params::SHDefenceCmbSubcomp_HandleSyncedActionBegin Parms{};

	Parms.CharacterSynchedWith = CharacterSynchedWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.HandleSyncedActionEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       CharacterSynchedWith                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::HandleSyncedActionEnd(class ACharacter* CharacterSynchedWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "HandleSyncedActionEnd");

	Params::SHDefenceCmbSubcomp_HandleSyncedActionEnd Parms{};

	Parms.CharacterSynchedWith = CharacterSynchedWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.OnDodgeBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::OnDodgeBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "OnDodgeBlendingOut");

	Params::SHDefenceCmbSubcomp_OnDodgeBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.OnDodgeEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::OnDodgeEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "OnDodgeEnd");

	Params::SHDefenceCmbSubcomp_OnDodgeEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.OnQuickTurnEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    bWasCompleted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::OnQuickTurnEnd(bool bWasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "OnQuickTurnEnd");

	Params::SHDefenceCmbSubcomp_OnQuickTurnEnd Parms{};

	Parms.bWasCompleted = bWasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.RequestDefaultFallToFloor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::RequestDefaultFallToFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "RequestDefaultFallToFloor");

	Params::SHDefenceCmbSubcomp_RequestDefaultFallToFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDefenceCmbSubcomp.RequestFallToFloor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               FallAnim                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHCameraAnimationData           CameraAnim                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::RequestFallToFloor(const struct FPlayAnimationData& FallAnim, const struct FSHCameraAnimationData& CameraAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "RequestFallToFloor");

	Params::SHDefenceCmbSubcomp_RequestFallToFloor Parms{};

	Parms.FallAnim = std::move(FallAnim);
	Parms.CameraAnim = std::move(CameraAnim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDefenceCmbSubcomp.RequestPerformDodge
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InMovementVector                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::RequestPerformDodge(const struct FVector& InMovementVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "RequestPerformDodge");

	Params::SHDefenceCmbSubcomp_RequestPerformDodge Parms{};

	Parms.InMovementVector = std::move(InMovementVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDefenceCmbSubcomp.SetDodgeBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InBlocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::SetDodgeBlocked(bool InBlocked, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "SetDodgeBlocked");

	Params::SHDefenceCmbSubcomp_SetDodgeBlocked Parms{};

	Parms.InBlocked = InBlocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDefenceCmbSubcomp.SHDefenceEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDefenceCmbSubcomp*             DefenceCmbSubcomp                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDefenceCmbSubcomp::SHDefenceEvent__DelegateSignature(class USHDefenceCmbSubcomp* DefenceCmbSubcomp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "SHDefenceEvent__DelegateSignature");

	Params::SHDefenceCmbSubcomp_SHDefenceEvent__DelegateSignature Parms{};

	Parms.DefenceCmbSubcomp = DefenceCmbSubcomp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDefenceCmbSubcomp.IsInQuickTurn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::IsInQuickTurn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "IsInQuickTurn");

	Params::SHDefenceCmbSubcomp_IsInQuickTurn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDefenceCmbSubcomp.IsInSuperArmour
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::IsInSuperArmour() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "IsInSuperArmour");

	Params::SHDefenceCmbSubcomp_IsInSuperArmour Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDefenceCmbSubcomp.IsOnFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::IsOnFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "IsOnFloor");

	Params::SHDefenceCmbSubcomp_IsOnFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDefenceCmbSubcomp.IsRightAfterDodge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDefenceCmbSubcomp::IsRightAfterDodge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDefenceCmbSubcomp", "IsRightAfterDodge");

	Params::SHDefenceCmbSubcomp_IsRightAfterDodge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.GetAimPoseWeightCurveName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHLocomotionRangeAnimInstance::GetAimPoseWeightCurveName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "GetAimPoseWeightCurveName");

	Params::SHLocomotionRangeAnimInstance_GetAimPoseWeightCurveName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.IsAimPoseBlendingIn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    MustBePureAimPose                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionRangeAnimInstance::IsAimPoseBlendingIn(bool MustBePureAimPose) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "IsAimPoseBlendingIn");

	Params::SHLocomotionRangeAnimInstance_IsAimPoseBlendingIn Parms{};

	Parms.MustBePureAimPose = MustBePureAimPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.IsAimPoseBlendingInOurOut
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    MustBePureAimPose                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionRangeAnimInstance::IsAimPoseBlendingInOurOut(bool MustBePureAimPose) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "IsAimPoseBlendingInOurOut");

	Params::SHLocomotionRangeAnimInstance_IsAimPoseBlendingInOurOut Parms{};

	Parms.MustBePureAimPose = MustBePureAimPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.IsAimPoseBlendingOut
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    MustBePureAimPose                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionRangeAnimInstance::IsAimPoseBlendingOut(bool MustBePureAimPose) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "IsAimPoseBlendingOut");

	Params::SHLocomotionRangeAnimInstance_IsAimPoseBlendingOut Parms{};

	Parms.MustBePureAimPose = MustBePureAimPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.IsAnyPreAimOffsetSlotAnimationPlaying
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionRangeAnimInstance::IsAnyPreAimOffsetSlotAnimationPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "IsAnyPreAimOffsetSlotAnimationPlaying");

	Params::SHLocomotionRangeAnimInstance_IsAnyPreAimOffsetSlotAnimationPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.IsPureAimPoseBlendingInOurOut
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLocomotionRangeAnimInstance::IsPureAimPoseBlendingInOurOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "IsPureAimPoseBlendingInOurOut");

	Params::SHLocomotionRangeAnimInstance_IsPureAimPoseBlendingInOurOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocomotionRangeAnimInstance.MapAimPoseWeightToIgnoreWeaponIKCurve
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLocomotionRangeAnimInstance::MapAimPoseWeightToIgnoreWeaponIKCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocomotionRangeAnimInstance", "MapAimPoseWeightToIgnoreWeaponIKCurve");

	Params::SHLocomotionRangeAnimInstance_MapAimPoseWeightToIgnoreWeaponIKCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSwarmRegionBase.GetScaledShapeSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHSwarmRegionBase::GetScaledShapeSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmRegionBase", "GetScaledShapeSize");

	Params::SHSwarmRegionBase_GetScaledShapeSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.DebugLightsRootActor.GetAllChildsWithTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromAllRoots                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ADebugLightsRootActor::GetAllChildsWithTag(class FName Tag, bool FromAllRoots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugLightsRootActor", "GetAllChildsWithTag");

	Params::DebugLightsRootActor_GetAllChildsWithTag Parms{};

	Parms.Tag = Tag;
	Parms.FromAllRoots = FromAllRoots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.DebugLightsRootActor.GetAllLightsRoots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ADebugLightsRootActor*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ADebugLightsRootActor*> ADebugLightsRootActor::GetAllLightsRoots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugLightsRootActor", "GetAllLightsRoots");

	Params::DebugLightsRootActor_GetAllLightsRoots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinAnimInstance.DecrementAlphaTongueTransformationAlpha
// (Final, Native, Protected)

void USHMandarinAnimInstance::DecrementAlphaTongueTransformationAlpha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimInstance", "DecrementAlphaTongueTransformationAlpha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimInstance.IncrementAlphaTongueTransformationAlpha
// (Final, Native, Protected)

void USHMandarinAnimInstance::IncrementAlphaTongueTransformationAlpha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimInstance", "IncrementAlphaTongueTransformationAlpha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimInstance.GetMandarinAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMandarinAnimInstanceStateData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMandarinAnimInstanceStateData* USHMandarinAnimInstance::GetMandarinAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimInstance", "GetMandarinAnimInstanceStateData");

	Params::SHMandarinAnimInstance_GetMandarinAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinAnimInstance.GetMandarinLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHMandarinLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMandarinLocomotionAnimInstance* USHMandarinAnimInstance::GetMandarinLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimInstance", "GetMandarinLocomotionAnimInstance");

	Params::SHMandarinAnimInstance_GetMandarinLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicInteractionManagerComponent.DestroySpawnedInteractionExecutive
// (Final, Native, Public, BlueprintCallable)

void USHDynamicInteractionManagerComponent::DestroySpawnedInteractionExecutive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionManagerComponent", "DestroySpawnedInteractionExecutive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDynamicInteractionManagerComponent.SpawnInteractionExecutive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ASHDynamicInteractionExecutive>InteractionExeClass                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHDynamicInteractionExecutive*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHDynamicInteractionExecutive* USHDynamicInteractionManagerComponent::SpawnInteractionExecutive(TSubclassOf<class ASHDynamicInteractionExecutive> InteractionExeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionManagerComponent", "SpawnInteractionExecutive");

	Params::SHDynamicInteractionManagerComponent_SpawnInteractionExecutive Parms{};

	Parms.InteractionExeClass = InteractionExeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicInteractionManagerComponent.GetSpawnedInteractionExecutive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHDynamicInteractionExecutive*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHDynamicInteractionExecutive* USHDynamicInteractionManagerComponent::GetSpawnedInteractionExecutive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionManagerComponent", "GetSpawnedInteractionExecutive");

	Params::SHDynamicInteractionManagerComponent_GetSpawnedInteractionExecutive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPlaythroughKilledEnemiesEndingFactor.SHDebug_Character_Endings_PlaythroughKilledEnemiesEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlaythroughKilledEnemiesEndingFactor::SHDebug_Character_Endings_PlaythroughKilledEnemiesEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlaythroughKilledEnemiesEndingFactor", "SHDebug_Character_Endings_PlaythroughKilledEnemiesEndingFactor_SetDebugValue");

	Params::SHPlaythroughKilledEnemiesEndingFactor_SHDebug_Character_Endings_PlaythroughKilledEnemiesEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEddieAnimInstance.K2_OnEddieMovementStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHEddieAnimInstanceMovementState       InMovementState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieAnimInstance::K2_OnEddieMovementStateChanged(ESHEddieAnimInstanceMovementState InMovementState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "K2_OnEddieMovementStateChanged");

	Params::SHEddieAnimInstance_K2_OnEddieMovementStateChanged Parms{};

	Parms.InMovementState = InMovementState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHEddieAnimInstance.ResetFaceExpression
// (Final, Native, Protected)

void USHEddieAnimInstance::ResetFaceExpression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "ResetFaceExpression");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEddieAnimInstance.SetFaceExpression
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESHEddieFaceExpression                  Expression                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieAnimInstance::SetFaceExpression(const ESHEddieFaceExpression Expression, const float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "SetFaceExpression");

	Params::SHEddieAnimInstance_SetFaceExpression Parms{};

	Parms.Expression = Expression;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEddieAnimInstance.GetActiveEddieLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEddieLocomotionAnimInstance*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEddieLocomotionAnimInstance* USHEddieAnimInstance::GetActiveEddieLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "GetActiveEddieLocomotionAnimInstance");

	Params::SHEddieAnimInstance_GetActiveEddieLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieAnimInstance.GetEddieAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEddieAnimInstanceStateData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEddieAnimInstanceStateData* USHEddieAnimInstance::GetEddieAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "GetEddieAnimInstanceStateData");

	Params::SHEddieAnimInstance_GetEddieAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieAnimInstance.GetEddieLimpingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEddieLimpingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEddieLimpingLocomotionAnimInstance* USHEddieAnimInstance::GetEddieLimpingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "GetEddieLimpingLocomotionAnimInstance");

	Params::SHEddieAnimInstance_GetEddieLimpingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieAnimInstance.GetEddieWalkingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEddieWalkingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEddieWalkingLocomotionAnimInstance* USHEddieAnimInstance::GetEddieWalkingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimInstance", "GetEddieWalkingLocomotionAnimInstance");

	Params::SHEddieAnimInstance_GetEddieWalkingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.GameplayPresetsConfig.PresetsToDefault
// (Final, Native, Public)

void UGameplayPresetsConfig::PresetsToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayPresetsConfig", "PresetsToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemBase.BlueprintImplementableExecutiveInit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemExecutiveBase*             Executive                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementableExecutiveInit(class ASHItemExecutiveBase* Executive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementableExecutiveInit");

	Params::SHItemBase_BlueprintImplementableExecutiveInit Parms{};

	Parms.Executive = Executive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementableInvestigationFlip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SideB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementableInvestigationFlip(class ASHItemInvestigationExecutive* InvestigationExecutive, bool SideB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementableInvestigationFlip");

	Params::SHItemBase_BlueprintImplementableInvestigationFlip Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;
	Parms.SideB = SideB;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementableInvestigationInputChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimationTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementableInvestigationInputChanged(class ASHItemInvestigationExecutive* InvestigationExecutive, float AnimationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementableInvestigationInputChanged");

	Params::SHItemBase_BlueprintImplementableInvestigationInputChanged Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;
	Parms.AnimationTime = AnimationTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementableInvestigationSwitchedItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementableInvestigationSwitchedItem(class ASHItemInvestigationExecutive* InvestigationExecutive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementableInvestigationSwitchedItem");

	Params::SHItemBase_BlueprintImplementableInvestigationSwitchedItem Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementableMainInvestigationStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementableMainInvestigationStarted(class ASHItemInvestigationExecutive* InvestigationExecutive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementableMainInvestigationStarted");

	Params::SHItemBase_BlueprintImplementableMainInvestigationStarted Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementablePostInvestigationStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementablePostInvestigationStarted(class ASHItemInvestigationExecutive* InvestigationExecutive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementablePostInvestigationStarted");

	Params::SHItemBase_BlueprintImplementablePostInvestigationStarted Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.BlueprintImplementablePreInvestigationStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemInvestigationExecutive*    InvestigationExecutive                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::BlueprintImplementablePreInvestigationStarted(class ASHItemInvestigationExecutive* InvestigationExecutive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "BlueprintImplementablePreInvestigationStarted");

	Params::SHItemBase_BlueprintImplementablePreInvestigationStarted Parms{};

	Parms.InvestigationExecutive = InvestigationExecutive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.Equip
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          RelativeLocation                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          RelativeRotation                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemBase::Equip(const class FName SocketName, const struct FVector& RelativeLocation, const struct FVector& RelativeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "Equip");

	Params::SHItemBase_Equip Parms{};

	Parms.SocketName = SocketName;
	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.RelativeRotation = std::move(RelativeRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemBase.SetItemDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDisabled                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::SetItemDisabled(const bool bInDisabled, const class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "SetItemDisabled");

	Params::SHItemBase_SetItemDisabled Parms{};

	Parms.bInDisabled = bInDisabled;
	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHItemBase.SHItemBaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemBase*                      ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::SHItemBaseEvent__DelegateSignature(class ASHItemBase* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "SHItemBaseEvent__DelegateSignature");

	Params::SHItemBase_SHItemBaseEvent__DelegateSignature Parms{};

	Parms.ItemPtr = ItemPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHItemBase.SHItemBaseWithExecutiveEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemBase*                      ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemExecutiveBase*             ExecutivePtr                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemBase::SHItemBaseWithExecutiveEvent__DelegateSignature(class ASHItemBase* ItemPtr, class ASHItemExecutiveBase* ExecutivePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "SHItemBaseWithExecutiveEvent__DelegateSignature");

	Params::SHItemBase_SHItemBaseWithExecutiveEvent__DelegateSignature Parms{};

	Parms.ItemPtr = ItemPtr;
	Parms.ExecutivePtr = ExecutivePtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemBase.Unequip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemBase::Unequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "Unequip");

	Params::SHItemBase_Unequip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemBase.GetInteractingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class ACharacter*                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class ACharacter* ASHItemBase::GetInteractingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "GetInteractingCharacter");

	Params::SHItemBase_GetInteractingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemBase.IsItemDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemBase::IsItemDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemBase", "IsItemDisabled");

	Params::SHItemBase_IsItemDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItem.BlueprintImplementableCollected
// (Event, Protected, BlueprintEvent)

void ASHItem::BlueprintImplementableCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItem", "BlueprintImplementableCollected");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHItem.SHItemEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItem*                          ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItem::SHItemEvent__DelegateSignature(class ASHItem* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItem", "SHItemEvent__DelegateSignature");

	Params::SHItem_SHItemEvent__DelegateSignature Parms{};

	Parms.ItemPtr = ItemPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItem.WasCollected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItem::WasCollected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItem", "WasCollected");

	Params::SHItem_WasCollected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicWidgetAnimStatics.SHReplacePossessable
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// class UMovieScene*                      InMovieScene                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            OldGuid                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieScenePossessable           InNewPossessable                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDynamicWidgetAnimStatics::SHReplacePossessable(class UMovieScene* InMovieScene, const struct FGuid& OldGuid, const struct FMovieScenePossessable& InNewPossessable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHDynamicWidgetAnimStatics", "SHReplacePossessable");

	Params::SHDynamicWidgetAnimStatics_SHReplacePossessable Parms{};

	Parms.InMovieScene = InMovieScene;
	Parms.OldGuid = std::move(OldGuid);
	Parms.InNewPossessable = std::move(InNewPossessable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHProjectile.IsMaxRangeReached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHProjectile::IsMaxRangeReached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHProjectile", "IsMaxRangeReached");

	Params::SHProjectile_IsMaxRangeReached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHProjectile.WantDrawDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHProjectile::WantDrawDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHProjectile", "WantDrawDebug");

	Params::SHProjectile_WantDrawDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieLocomotionAnimInstance.GetEddieAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEddieAnimInstanceStateData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEddieAnimInstanceStateData* USHEddieLocomotionAnimInstance::GetEddieAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieLocomotionAnimInstance", "GetEddieAnimInstanceStateData");

	Params::SHEddieLocomotionAnimInstance_GetEddieAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHEddieWalkingLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHEddieWalkingLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHEddieWalkingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirectionYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InToleranceAngle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection(float* OutVelocitySize, float* OutVelocityYaw, float InDirectionYaw, float InToleranceAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection");

	Params::SHEddieWalkingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection Parms{};

	Parms.InDirectionYaw = InDirectionYaw;
	Parms.InToleranceAngle = InToleranceAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHEddieWalkingLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHEddieWalkingLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHEddieWalkingLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHEddieWalkingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYawLimitedToDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirectionYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InToleranceAngle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYawLimitedToDirection(float* OutVelocitySize, float* OutVelocityYaw, float InDirectionYaw, float InToleranceAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYawLimitedToDirection");

	Params::SHEddieWalkingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYawLimitedToDirection Parms{};

	Parms.InDirectionYaw = InDirectionYaw;
	Parms.InToleranceAngle = InToleranceAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHEddieWalkingLocomotionAnimInstance.GetTargetLookAtAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieWalkingLocomotionAnimInstance::GetTargetLookAtAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieWalkingLocomotionAnimInstance", "GetTargetLookAtAlpha");

	Params::SHEddieWalkingLocomotionAnimInstance_GetTargetLookAtAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.KeyRichTexts.GetKeyDisplayRichText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyRichTexts::GetKeyDisplayRichText(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyRichTexts", "GetKeyDisplayRichText");

	Params::KeyRichTexts_GetKeyDisplayRichText Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.BoxComponentEncompassesPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UBoxComponent*                    InBoxComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InCheckedPoint                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::BoxComponentEncompassesPoint(class UBoxComponent* InBoxComponent, const struct FVector& InCheckedPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "BoxComponentEncompassesPoint");

	Params::SHOtherStatics_BoxComponentEncompassesPoint Parms{};

	Parms.InBoxComponent = InBoxComponent;
	Parms.InCheckedPoint = std::move(InCheckedPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.CanDrawLevelDebug
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           InActorContext                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::CanDrawLevelDebug(const class AActor* InActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "CanDrawLevelDebug");

	Params::SHOtherStatics_CanDrawLevelDebug Parms{};

	Parms.InActorContext = InActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.ClearWorldState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::ClearWorldState(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "ClearWorldState");

	Params::SHOtherStatics_ClearWorldState Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DisableAffectNavigation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*                  InActorComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DisableAffectNavigation(class UActorComponent* InActorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DisableAffectNavigation");

	Params::SHOtherStatics_DisableAffectNavigation Parms{};

	Parms.InActorComponent = InActorComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugArc
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Center                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinAngle                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxAngle                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSegments                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          YAxis                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ZAxis                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrawAxis                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugArc(const class UObject* WorldContextObject, const struct FVector& Center, const float MinAngle, const float MaxAngle, float Radius, int32 NumSegments, const struct FLinearColor& Color, float Duration, float Thickness, const struct FVector& YAxis, const struct FVector& ZAxis, bool bDrawAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugArc");

	Params::SHOtherStatics_DrawDebugArc Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Center = std::move(Center);
	Parms.MinAngle = MinAngle;
	Parms.MaxAngle = MaxAngle;
	Parms.Radius = Radius;
	Parms.NumSegments = NumSegments;
	Parms.Color = std::move(Color);
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;
	Parms.YAxis = std::move(YAxis);
	Parms.ZAxis = std::move(ZAxis);
	Parms.bDrawAxis = bDrawAxis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugBoxEx
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Center                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Box                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TopPlaneDepthPriority                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BottomPlaneDepthPriority                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SidesPlanesDepthPriority                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugBoxEx(const class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& Box, const struct FRotator& Rotation, const struct FLinearColor& Color, float Duration, float Thickness, int32 TopPlaneDepthPriority, int32 BottomPlaneDepthPriority, int32 SidesPlanesDepthPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugBoxEx");

	Params::SHOtherStatics_DrawDebugBoxEx Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Center = std::move(Center);
	Parms.Box = std::move(Box);
	Parms.Rotation = std::move(Rotation);
	Parms.Color = std::move(Color);
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;
	Parms.TopPlaneDepthPriority = TopPlaneDepthPriority;
	Parms.BottomPlaneDepthPriority = BottomPlaneDepthPriority;
	Parms.SidesPlanesDepthPriority = SidesPlanesDepthPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugRadiusAtSimpleSplineComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 SplineComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeightOffset                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugRadiusAtSimpleSplineComponent(class UObject* WorldContextObject, class USplineComponent* SplineComponent, const float Radius, const float HeightOffset, const struct FLinearColor& Color, float Duration, float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugRadiusAtSimpleSplineComponent");

	Params::SHOtherStatics_DrawDebugRadiusAtSimpleSplineComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SplineComponent = SplineComponent;
	Parms.Radius = Radius;
	Parms.HeightOffset = HeightOffset;
	Parms.Color = std::move(Color);
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugSegmentRadius2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SegmentStart                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SegmentEnd                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugSegmentRadius2D(const class UObject* WorldContextObject, const struct FVector& SegmentStart, const struct FVector& SegmentEnd, const float Radius, const struct FLinearColor& Color, const float DrawTime, const float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugSegmentRadius2D");

	Params::SHOtherStatics_DrawDebugSegmentRadius2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SegmentStart = std::move(SegmentStart);
	Parms.SegmentEnd = std::move(SegmentEnd);
	Parms.Radius = Radius;
	Parms.Color = std::move(Color);
	Parms.DrawTime = DrawTime;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugSimpleCylinder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartPosition                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndPosition                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DrawTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugSimpleCylinder(const class UObject* WorldContextObject, const struct FVector& StartPosition, const struct FVector& EndPosition, const float Radius, const struct FLinearColor& Color, const float DrawTime, const float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugSimpleCylinder");

	Params::SHOtherStatics_DrawDebugSimpleCylinder Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartPosition = std::move(StartPosition);
	Parms.EndPosition = std::move(EndPosition);
	Parms.Radius = Radius;
	Parms.Color = std::move(Color);
	Parms.DrawTime = DrawTime;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugStaticMeshComponent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*             StaticMeshComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugStaticMeshComponent(const class UObject* WorldContextObject, class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& Color, float Duration, float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugStaticMeshComponent");

	Params::SHOtherStatics_DrawDebugStaticMeshComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StaticMeshComponent = StaticMeshComponent;
	Parms.Color = std::move(Color);
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.DrawDebugVolume
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AVolume*                          InVolume                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseTriangulate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::DrawDebugVolume(const class UObject* WorldContextObject, class AVolume* InVolume, bool bUseTriangulate, const struct FLinearColor& Color, float Duration, float Thickness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "DrawDebugVolume");

	Params::SHOtherStatics_DrawDebugVolume Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InVolume = InVolume;
	Parms.bUseTriangulate = bUseTriangulate;
	Parms.Color = std::move(Color);
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.FindFurthestActor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Origin                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToCheck                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHOtherStatics::FindFurthestActor(const struct FVector& Origin, const TArray<class AActor*>& ActorsToCheck, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "FindFurthestActor");

	Params::SHOtherStatics_FindFurthestActor Parms{};

	Parms.Origin = std::move(Origin);
	Parms.ActorsToCheck = std::move(ActorsToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.FInterpToConstantAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHOtherStatics::FInterpToConstantAngle(float Current, float Target, const float DeltaTime, const float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "FInterpToConstantAngle");

	Params::SHOtherStatics_FInterpToConstantAngle Parms{};

	Parms.Current = Current;
	Parms.Target = Target;
	Parms.DeltaTime = DeltaTime;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.ForceDisableLumenReflections
// (Final, Native, Static, Public, BlueprintCallable)

void USHOtherStatics::ForceDisableLumenReflections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "ForceDisableLumenReflections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.ForceEnableLumenReflections
// (Final, Native, Static, Public, BlueprintCallable)

void USHOtherStatics::ForceEnableLumenReflections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "ForceEnableLumenReflections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.GenerateGridLocationsArray
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          GridStartPoint                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FIntPoint                        GridSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        GridDistribution                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       GridWorldTransform                                     (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> USHOtherStatics::GenerateGridLocationsArray(const struct FVector& GridStartPoint, const struct FIntPoint& GridSize, const struct FVector2D& GridDistribution, const struct FTransform& GridWorldTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GenerateGridLocationsArray");

	Params::SHOtherStatics_GenerateGridLocationsArray Parms{};

	Parms.GridStartPoint = std::move(GridStartPoint);
	Parms.GridSize = std::move(GridSize);
	Parms.GridDistribution = std::move(GridDistribution);
	Parms.GridWorldTransform = std::move(GridWorldTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetAnimToPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimationAsset*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimationAsset* USHOtherStatics::GetAnimToPlay(class USkeletalMeshComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetAnimToPlay");

	Params::SHOtherStatics_GetAnimToPlay Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetEquipmentDataTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* USHOtherStatics::GetEquipmentDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetEquipmentDataTable");

	Params::SHOtherStatics_GetEquipmentDataTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetFirstViewportTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform USHOtherStatics::GetFirstViewportTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetFirstViewportTransform");

	Params::SHOtherStatics_GetFirstViewportTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetGenericDeathPlayerFullAreaWork
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ASHCharacterPlayGenericDeathPlayer>InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutExtend                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutRelLoc                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::GetGenericDeathPlayerFullAreaWork(TSubclassOf<class ASHCharacterPlayGenericDeathPlayer> InClass, struct FVector* OutExtend, struct FVector* OutRelLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetGenericDeathPlayerFullAreaWork");

	Params::SHOtherStatics_GetGenericDeathPlayerFullAreaWork Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutExtend != nullptr)
		*OutExtend = std::move(Parms.OutExtend);

	if (OutRelLoc != nullptr)
		*OutRelLoc = std::move(Parms.OutRelLoc);

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetGFrameNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHOtherStatics::GetGFrameNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetGFrameNumber");

	Params::SHOtherStatics_GetGFrameNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetItemsDataTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* USHOtherStatics::GetItemsDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetItemsDataTable");

	Params::SHOtherStatics_GetItemsDataTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetMapsDataTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* USHOtherStatics::GetMapsDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetMapsDataTable");

	Params::SHOtherStatics_GetMapsDataTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetPreSkinPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkinnedMeshComponent*            Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHOtherStatics::GetPreSkinPosition(class USkinnedMeshComponent* Component, class FName BoneName, const struct FVector& WorldPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetPreSkinPosition");

	Params::SHOtherStatics_GetPreSkinPosition Parms{};

	Parms.Component = Component;
	Parms.BoneName = BoneName;
	Parms.WorldPosition = std::move(WorldPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetRootMotionTranslation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimationAsset*                  AnimationAsset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHOtherStatics::GetRootMotionTranslation(class UAnimationAsset* AnimationAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetRootMotionTranslation");

	Params::SHOtherStatics_GetRootMotionTranslation Parms{};

	Parms.AnimationAsset = AnimationAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetRotatorInterpTo
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         Current                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         Target                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHOtherStatics::GetRotatorInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetRotatorInterpTo");

	Params::SHOtherStatics_GetRotatorInterpTo Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.DeltaTime = DeltaTime;
	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetRotatorsComponentDelta
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InRot1                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRot2                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHOtherStatics::GetRotatorsComponentDelta(const float InRot1, const float InRot2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetRotatorsComponentDelta");

	Params::SHOtherStatics_GetRotatorsComponentDelta Parms{};

	Parms.InRot1 = InRot1;
	Parms.InRot2 = InRot2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetRotatorsDelta
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         InRot1                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         InRot2                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHOtherStatics::GetRotatorsDelta(const struct FRotator& InRot1, const struct FRotator& InRot2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetRotatorsDelta");

	Params::SHOtherStatics_GetRotatorsDelta Parms{};

	Parms.InRot1 = std::move(InRot1);
	Parms.InRot2 = std::move(InRot2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetShowFlagValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InName                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHOtherStatics::GetShowFlagValue(const class FString& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetShowFlagValue");

	Params::SHOtherStatics_GetShowFlagValue Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetUseablesDataTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* USHOtherStatics::GetUseablesDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetUseablesDataTable");

	Params::SHOtherStatics_GetUseablesDataTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.GetWeaponsDataTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDataTable*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* USHOtherStatics::GetWeaponsDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "GetWeaponsDataTable");

	Params::SHOtherStatics_GetWeaponsDataTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.HasValidWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::HasValidWorld(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "HasValidWorld");

	Params::SHOtherStatics_HasValidWorld Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.IsGoalReachable
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          GoalLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSearchDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DistanceTolerance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::IsGoalReachable(class AController* Controller, const struct FVector& GoalLocation, TSubclassOf<class UNavigationQueryFilter> FilterClass, float InSearchDistance, float DistanceTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "IsGoalReachable");

	Params::SHOtherStatics_IsGoalReachable Parms{};

	Parms.Controller = Controller;
	Parms.GoalLocation = std::move(GoalLocation);
	Parms.FilterClass = FilterClass;
	Parms.InSearchDistance = InSearchDistance;
	Parms.DistanceTolerance = DistanceTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.IsSonyDemo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::IsSonyDemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "IsSonyDemo");

	Params::SHOtherStatics_IsSonyDemo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.IsWorldLocInGenericDeathPlayerFullAreaWork
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ASHCharacterPlayGenericDeathPlayer>InClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InWorldLoc                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::IsWorldLocInGenericDeathPlayerFullAreaWork(TSubclassOf<class ASHCharacterPlayGenericDeathPlayer> InClass, const struct FVector& InWorldLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "IsWorldLocInGenericDeathPlayerFullAreaWork");

	Params::SHOtherStatics_IsWorldLocInGenericDeathPlayerFullAreaWork Parms{};

	Parms.InClass = InClass;
	Parms.InWorldLoc = std::move(InWorldLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.LogErrorPIE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InLogString                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::LogErrorPIE(const class FString& InLogString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "LogErrorPIE");

	Params::SHOtherStatics_LogErrorPIE Parms{};

	Parms.InLogString = std::move(InLogString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.LogWarnPIE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InLogString                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::LogWarnPIE(const class FString& InLogString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "LogWarnPIE");

	Params::SHOtherStatics_LogWarnPIE Parms{};

	Parms.InLogString = std::move(InLogString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.RemoveLinkedAnimInstances
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    AnimInstance                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::RemoveLinkedAnimInstances(class UAnimInstance* AnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "RemoveLinkedAnimInstances");

	Params::SHOtherStatics_RemoveLinkedAnimInstances Parms{};

	Parms.AnimInstance = AnimInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.RestoreForcedLumenReflections
// (Final, Native, Static, Public, BlueprintCallable)

void USHOtherStatics::RestoreForcedLumenReflections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "RestoreForcedLumenReflections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.SetDefaultCollisionProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::SetDefaultCollisionProfile(class UPrimitiveComponent* InComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "SetDefaultCollisionProfile");

	Params::SHOtherStatics_SetDefaultCollisionProfile Parms{};

	Parms.InComp = InComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.SortIntsArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Array                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAscending                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::SortIntsArray(TArray<int32>& Array, const bool bAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "SortIntsArray");

	Params::SHOtherStatics_SortIntsArray Parms{};

	Parms.Array = std::move(Array);
	Parms.bAscending = bAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Array = std::move(Parms.Array);
}


// Function SHProto.SHOtherStatics.SplitNameIntMapSortedByInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, int32>              StringIntMap                                           (Parm, NativeAccessSpecifierPublic)
// TArray<class FString>                   StringArray                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           IntArray                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAscending                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::SplitNameIntMapSortedByInt(const TMap<class FString, int32>& StringIntMap, TArray<class FString>& StringArray, TArray<int32>& IntArray, const bool bAscending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "SplitNameIntMapSortedByInt");

	Params::SHOtherStatics_SplitNameIntMapSortedByInt Parms{};

	Parms.StringIntMap = std::move(StringIntMap);
	Parms.StringArray = std::move(StringArray);
	Parms.IntArray = std::move(IntArray);
	Parms.bAscending = bAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	StringArray = std::move(Parms.StringArray);
	IntArray = std::move(Parms.IntArray);
}


// Function SHProto.SHOtherStatics.Trace_ContextObject_CPUProfiler
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHOtherStatics::Trace_ContextObject_CPUProfiler(class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "Trace_ContextObject_CPUProfiler");

	Params::SHOtherStatics_Trace_ContextObject_CPUProfiler Parms{};

	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHOtherStatics.VectorsToSimpleDirectionType
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InVectorA                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InVectorB                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHSimpleDirectionType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHSimpleDirectionType USHOtherStatics::VectorsToSimpleDirectionType(const struct FVector& InVectorA, const struct FVector& InVectorB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "VectorsToSimpleDirectionType");

	Params::SHOtherStatics_VectorsToSimpleDirectionType Parms{};

	Parms.InVectorA = std::move(InVectorA);
	Parms.InVectorB = std::move(InVectorB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHOtherStatics.VolumeEncompassesPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AVolume*                          InVolume                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InCheckedPoint                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHOtherStatics::VolumeEncompassesPoint(class AVolume* InVolume, const struct FVector& InCheckedPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHOtherStatics", "VolumeEncompassesPoint");

	Params::SHOtherStatics_VolumeEncompassesPoint Parms{};

	Parms.InVolume = InVolume;
	Parms.InCheckedPoint = std::move(InCheckedPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicItemsManager.ProcessItemCollected
// (Final, Native, Protected)
// Parameters:
// class ASHItem*                          ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDynamicItemsManager::ProcessItemCollected(class ASHItem* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicItemsManager", "ProcessItemCollected");

	Params::SHDynamicItemsManager_ProcessItemCollected Parms{};

	Parms.ItemPtr = ItemPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.LocalFogVolumeActor.SetDebugPosition
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALocalFogVolumeActor::SetDebugPosition(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalFogVolumeActor", "SetDebugPosition");

	Params::LocalFogVolumeActor_SetDebugPosition Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHEddieMeatPushComponent.ProcessPlayerCharacterInWorkAreaTick
// (Final, Native, Protected)

void USHEddieMeatPushComponent::ProcessPlayerCharacterInWorkAreaTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieMeatPushComponent", "ProcessPlayerCharacterInWorkAreaTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.MandarinLookAtComponent.GetLookAtTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UMandarinLookAtComponent::GetLookAtTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MandarinLookAtComponent", "GetLookAtTargetLocation");

	Params::MandarinLookAtComponent_GetLookAtTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.MandarinLookAtComponent.SetAttackLookAtLimits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AttackLimit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMandarinLookAtComponent::SetAttackLookAtLimits(bool AttackLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MandarinLookAtComponent", "SetAttackLookAtLimits");

	Params::MandarinLookAtComponent_SetAttackLookAtLimits Parms{};

	Parms.AttackLimit = AttackLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.MandarinLookAtComponent.SetFreezeLookAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Freeze                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMandarinLookAtComponent::SetFreezeLookAt(bool Freeze)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MandarinLookAtComponent", "SetFreezeLookAt");

	Params::MandarinLookAtComponent_SetFreezeLookAt Parms{};

	Parms.Freeze = Freeze;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.LookAtActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             LookAtTypeID                                           (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterLookAtLogicComponent::LookAtActor(class AActor* TargetActor, TSoftClassPtr<class UClass> LookAtTypeID, float BlendSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "LookAtActor");

	Params::SHCharacterLookAtLogicComponent_LookAtActor Parms{};

	Parms.TargetActor = TargetActor;
	Parms.LookAtTypeID = LookAtTypeID;
	Parms.BlendSpeed = BlendSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.LookAtComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TargetComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             LookAtTypeID                                           (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterLookAtLogicComponent::LookAtComponent(class USceneComponent* TargetComponent, TSoftClassPtr<class UClass> LookAtTypeID, float BlendSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "LookAtComponent");

	Params::SHCharacterLookAtLogicComponent_LookAtComponent Parms{};

	Parms.TargetComponent = TargetComponent;
	Parms.LookAtTypeID = LookAtTypeID;
	Parms.BlendSpeed = BlendSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.ResetLookAtLogic
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendOutSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterLookAtLogicComponent::ResetLookAtLogic(float BlendOutSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "ResetLookAtLogic");

	Params::SHCharacterLookAtLogicComponent_ResetLookAtLogic Parms{};

	Parms.BlendOutSpeed = BlendOutSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.StopLookAtActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterLookAtLogicComponent::StopLookAtActor(class AActor* TargetActor, float BlendOutSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "StopLookAtActor");

	Params::SHCharacterLookAtLogicComponent_StopLookAtActor Parms{};

	Parms.TargetActor = TargetActor;
	Parms.BlendOutSpeed = BlendOutSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.StopLookAtComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  TargetComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterLookAtLogicComponent::StopLookAtComponent(class USceneComponent* TargetComponent, float BlendOutSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "StopLookAtComponent");

	Params::SHCharacterLookAtLogicComponent_StopLookAtComponent Parms{};

	Parms.TargetComponent = TargetComponent;
	Parms.BlendOutSpeed = BlendOutSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterLookAtLogicComponent.GetCurrentLookAtTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* USHCharacterLookAtLogicComponent::GetCurrentLookAtTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "GetCurrentLookAtTarget");

	Params::SHCharacterLookAtLogicComponent_GetCurrentLookAtTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterLookAtLogicComponent.GetLookAtTargetProvider
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UClass>             LookAtTypeID                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHLookAtTargetProvider*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLookAtTargetProvider* USHCharacterLookAtLogicComponent::GetLookAtTargetProvider(const TSoftClassPtr<class UClass>& LookAtTypeID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterLookAtLogicComponent", "GetLookAtTargetProvider");

	Params::SHCharacterLookAtLogicComponent_GetLookAtTargetProvider Parms{};

	Parms.LookAtTypeID = LookAtTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.NiagaraDynamicComponent.GetDynamicMaterialInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UNiagaraDynamicComponent::GetDynamicMaterialInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NiagaraDynamicComponent", "GetDynamicMaterialInstance");

	Params::NiagaraDynamicComponent_GetDynamicMaterialInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.PlaneSideDetectionComponent.CalculateSide
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHDetectionPlaneType                   Plane                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHDetectionSide                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHDetectionSide UPlaneSideDetectionComponent::CalculateSide(const ESHDetectionPlaneType Plane, const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlaneSideDetectionComponent", "CalculateSide");

	Params::PlaneSideDetectionComponent_CalculateSide Parms{};

	Parms.Plane = Plane;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.PlayGameMode.EndFakeLoading
// (Final, Native, Public)

void APlayGameMode::EndFakeLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayGameMode", "EndFakeLoading");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.PlayGameMode.GameReadyToPlayEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void APlayGameMode::GameReadyToPlayEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayGameMode", "GameReadyToPlayEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.PlayGameMode.SHDebug_World_DumpAllActors
// (Final, Exec, Native, Public)

void APlayGameMode::SHDebug_World_DumpAllActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayGameMode", "SHDebug_World_DumpAllActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.PlayGameMode.SHDebug_World_DumpAllLevels
// (Final, Exec, Native, Public)

void APlayGameMode::SHDebug_World_DumpAllLevels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayGameMode", "SHDebug_World_DumpAllLevels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.PlayGameMode.IsReadyToPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APlayGameMode::IsReadyToPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayGameMode", "IsReadyToPlay");

	Params::PlayGameMode_IsReadyToPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHExtraSettingsPanelWidget.FadedOut
// (Final, Native, Protected)

void USHExtraSettingsPanelWidget::FadedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHExtraSettingsPanelWidget", "FadedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHExtraSettingsPanelWidget.HideBackInfo
// (Final, Native, Protected, BlueprintCallable)

void USHExtraSettingsPanelWidget::HideBackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHExtraSettingsPanelWidget", "HideBackInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHExtraSettingsPanelWidget.OnHideBackInfo
// (Event, Protected, BlueprintEvent)

void USHExtraSettingsPanelWidget::OnHideBackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHExtraSettingsPanelWidget", "OnHideBackInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHExtraSettingsPanelWidget.OnShowBackInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHExtraSettingsPanelWidget::OnShowBackInfo(class FName Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHExtraSettingsPanelWidget", "OnShowBackInfo");

	Params::SHExtraSettingsPanelWidget_OnShowBackInfo Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHExtraSettingsPanelWidget.ShowBackInfo
// (Final, Native, Protected, BlueprintCallable)

void USHExtraSettingsPanelWidget::ShowBackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHExtraSettingsPanelWidget", "ShowBackInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionStatics.MakeAllowedHitReactionsAll
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSHEnemyHitReactionSelectionAllowedStatesReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHEnemyHitReactionSelectionAllowedStates USHEnemyHitReactionSelectionStatics::MakeAllowedHitReactionsAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEnemyHitReactionSelectionStatics", "MakeAllowedHitReactionsAll");

	Params::SHEnemyHitReactionSelectionStatics_MakeAllowedHitReactionsAll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionStatics.MakeAllowedHitReactionsNone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSHEnemyHitReactionSelectionAllowedStatesReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHEnemyHitReactionSelectionAllowedStates USHEnemyHitReactionSelectionStatics::MakeAllowedHitReactionsNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEnemyHitReactionSelectionStatics", "MakeAllowedHitReactionsNone");

	Params::SHEnemyHitReactionSelectionStatics_MakeAllowedHitReactionsNone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionStatics.MakeAllowedHitReactionsSimple
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    AllowKnockdown                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowFalter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowStagger                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowNormal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHEnemyHitReactionSelectionAllowedStatesReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHEnemyHitReactionSelectionAllowedStates USHEnemyHitReactionSelectionStatics::MakeAllowedHitReactionsSimple(bool AllowKnockdown, bool AllowFalter, bool AllowStagger, bool AllowNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEnemyHitReactionSelectionStatics", "MakeAllowedHitReactionsSimple");

	Params::SHEnemyHitReactionSelectionStatics_MakeAllowedHitReactionsSimple Parms{};

	Parms.AllowKnockdown = AllowKnockdown;
	Parms.AllowFalter = AllowFalter;
	Parms.AllowStagger = AllowStagger;
	Parms.AllowNormal = AllowNormal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionStatics.MergeAllowedHitReactions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHEnemyHitReactionSelectionAllowedStatesMergeInto                                              (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHEnemyHitReactionSelectionAllowedStatesMergeFrom                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHEnemyHitReactionSelectionAllowedStatesReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHEnemyHitReactionSelectionAllowedStates USHEnemyHitReactionSelectionStatics::MergeAllowedHitReactions(struct FSHEnemyHitReactionSelectionAllowedStates& MergeInto, const struct FSHEnemyHitReactionSelectionAllowedStates& MergeFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHEnemyHitReactionSelectionStatics", "MergeAllowedHitReactions");

	Params::SHEnemyHitReactionSelectionStatics_MergeAllowedHitReactions Parms{};

	Parms.MergeInto = std::move(MergeInto);
	Parms.MergeFrom = std::move(MergeFrom);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	MergeInto = std::move(Parms.MergeInto);

	return Parms.ReturnValue;
}


// Function SHProto.SHTraversalBaseComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHTraversalBaseComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "ProcessProximityBeginOverlap");

	Params::SHTraversalBaseComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalBaseComponent.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalBaseComponent::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "ProcessProximityEndOverlap");

	Params::SHTraversalBaseComponent_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalBaseComponent.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalBaseComponent::SetEnabled(bool InEnable, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "SetEnabled");

	Params::SHTraversalBaseComponent_SetEnabled Parms{};

	Parms.InEnable = InEnable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalBaseComponent.SetUnavailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUnavailable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalBaseComponent::SetUnavailable(bool InUnavailable, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "SetUnavailable");

	Params::SHTraversalBaseComponent_SetUnavailable Parms{};

	Parms.InUnavailable = InUnavailable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHTraversalBaseComponent.SHTraversalBaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalBaseComponent*        ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalBaseComponent::SHTraversalBaseEvent__DelegateSignature(class USHTraversalBaseComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "SHTraversalBaseEvent__DelegateSignature");

	Params::SHTraversalBaseComponent_SHTraversalBaseEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalBaseComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraversalBaseComponent::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "IsEnabled");

	Params::SHTraversalBaseComponent_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraversalBaseComponent.IsUnavailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraversalBaseComponent::IsUnavailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalBaseComponent", "IsUnavailable");

	Params::SHTraversalBaseComponent_IsUnavailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraversalClimbComponent.Initialize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USphereComponent*                 InProximitySphere                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USplineComponent*>         InEdgeSplines                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::Initialize(class USphereComponent* InProximitySphere, const TArray<class USplineComponent*>& InEdgeSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "Initialize");

	Params::SHTraversalClimbComponent_Initialize Parms{};

	Parms.InProximitySphere = InProximitySphere;
	Parms.InEdgeSplines = std::move(InEdgeSplines);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalClimbComponent.ProcessEndTraversal
// (Final, Native, Protected)

void USHTraversalClimbComponent::ProcessEndTraversal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "ProcessEndTraversal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalClimbComponent.ProcessMovementSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::ProcessMovementSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "ProcessMovementSnapEnd");

	Params::SHTraversalClimbComponent_ProcessMovementSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalClimbComponent.ProcessSlideSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::ProcessSlideSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "ProcessSlideSnapEnd");

	Params::SHTraversalClimbComponent_ProcessSlideSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalClimbComponent.RegisterSplines
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USplineComponent*>         InEdgeSplines                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::RegisterSplines(const TArray<class USplineComponent*>& InEdgeSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "RegisterSplines");

	Params::SHTraversalClimbComponent_RegisterSplines Parms{};

	Parms.InEdgeSplines = std::move(InEdgeSplines);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHTraversalClimbComponent.SHClimbComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESHDetectionSide                        DetectionSide                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::SHClimbComponentEvent__DelegateSignature(ESHDetectionSide DetectionSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "SHClimbComponentEvent__DelegateSignature");

	Params::SHTraversalClimbComponent_SHClimbComponentEvent__DelegateSignature Parms{};

	Parms.DetectionSide = DetectionSide;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalClimbComponent.SHClimbEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalClimbComponent*       ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::SHClimbEvent__DelegateSignature(class USHTraversalClimbComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "SHClimbEvent__DelegateSignature");

	Params::SHTraversalClimbComponent_SHClimbEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalClimbComponent.SHClimbWithSideEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalClimbComponent*       ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHDetectionSide                        DetectionSide                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::SHClimbWithSideEvent__DelegateSignature(class USHTraversalClimbComponent* ComponentPtr, ESHDetectionSide DetectionSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "SHClimbWithSideEvent__DelegateSignature");

	Params::SHTraversalClimbComponent_SHClimbWithSideEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.DetectionSide = DetectionSide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalClimbComponent.UnregisterSplines
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USplineComponent*>         InEdgeSplines                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHTraversalClimbComponent::UnregisterSplines(const TArray<class USplineComponent*>& InEdgeSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbComponent", "UnregisterSplines");

	Params::SHTraversalClimbComponent_UnregisterSplines Parms{};

	Parms.InEdgeSplines = std::move(InEdgeSplines);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnvironmentSwitchVolume.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHEnvironmentSwitchVolume::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnvironmentSwitchVolume", "SetEnabled");

	Params::SHEnvironmentSwitchVolume_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFakeDoor.HandleReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFakeDoor::HandleReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "HandleReceiveDamageEvent");

	Params::SHFakeDoor_HandleReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFakeDoor.OnAutoLockedDoorCheckAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFakeDoor::OnAutoLockedDoorCheckAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "OnAutoLockedDoorCheckAnimEnd");

	Params::SHFakeDoor_OnAutoLockedDoorCheckAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFakeDoor.ProcessFakeHitDetectorBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHFakeDoor::ProcessFakeHitDetectorBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "ProcessFakeHitDetectorBeginOverlap");

	Params::SHFakeDoor_ProcessFakeHitDetectorBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFakeDoor.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFakeDoor::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "SetEnabled");

	Params::SHFakeDoor_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHFakeDoor.SHFakeDoorEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHFakeDoor*                      FakeDoorPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFakeDoor::SHFakeDoorEvent__DelegateSignature(class ASHFakeDoor* FakeDoorPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "SHFakeDoorEvent__DelegateSignature");

	Params::SHFakeDoor_SHFakeDoorEvent__DelegateSignature Parms{};

	Parms.FakeDoorPtr = FakeDoorPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHFakeDoor.SHFakeDoorEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHFakeDoor*                      FakeDoorPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFakeDoor::SHFakeDoorEventBP__DelegateSignature(class ASHFakeDoor* FakeDoorPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeDoor", "SHFakeDoorEventBP__DelegateSignature");

	Params::SHFakeDoor_SHFakeDoorEventBP__DelegateSignature Parms{};

	Parms.FakeDoorPtr = FakeDoorPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFlashlightControlVolume.SetDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDisabled                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlightControlVolume::SetDisabled(const bool bInDisabled, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlightControlVolume", "SetDisabled");

	Params::SHFlashlightControlVolume_SetDisabled Parms{};

	Parms.bInDisabled = bInDisabled;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlightControlVolume.IsDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFlashlightControlVolume::IsDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlightControlVolume", "IsDisabled");

	Params::SHFlashlightControlVolume_IsDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.OnControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "OnControllerChanged");

	Params::SHEnemyAnimComponent_OnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyAnimComponent.ProcessEnemyBehaviorStanceChangedEvent
// (Final, Native, Protected)
// Parameters:
// EMaiAggroStance                         NewAggroStance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::ProcessEnemyBehaviorStanceChangedEvent(EMaiAggroStance NewAggroStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "ProcessEnemyBehaviorStanceChangedEvent");

	Params::SHEnemyAnimComponent_ProcessEnemyBehaviorStanceChangedEvent Parms{};

	Parms.NewAggroStance = NewAggroStance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyAnimComponent.ProcessHitReactionBonePhysicsRequestEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class USHHitReactionSubcomponent*       InHitReactionComponent                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHHitReactionResultBonePhysics  InBonePhysics                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::ProcessHitReactionBonePhysicsRequestEvent(class USHHitReactionSubcomponent* InHitReactionComponent, const struct FSHHitReactionResultBonePhysics& InBonePhysics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "ProcessHitReactionBonePhysicsRequestEvent");

	Params::SHEnemyAnimComponent_ProcessHitReactionBonePhysicsRequestEvent Parms{};

	Parms.InHitReactionComponent = InHitReactionComponent;
	Parms.InBonePhysics = std::move(InBonePhysics);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.ProcessHitReactionStateEndedEvent
// (Final, Native, Protected)
// Parameters:
// class USHHitReactionSubcomponent*       InHitReactionComponent                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHHitReactionState*              InHitReactionState                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::ProcessHitReactionStateEndedEvent(class USHHitReactionSubcomponent* InHitReactionComponent, class USHHitReactionState* InHitReactionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "ProcessHitReactionStateEndedEvent");

	Params::SHEnemyAnimComponent_ProcessHitReactionStateEndedEvent Parms{};

	Parms.InHitReactionComponent = InHitReactionComponent;
	Parms.InHitReactionState = InHitReactionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyAnimComponent.ProcessHitReactionStateStartedEvent
// (Final, Native, Protected)
// Parameters:
// class USHHitReactionSubcomponent*       InHitReactionComponent                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHHitReactionState*              InHitReactionState                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::ProcessHitReactionStateStartedEvent(class USHHitReactionSubcomponent* InHitReactionComponent, class USHHitReactionState* InHitReactionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "ProcessHitReactionStateStartedEvent");

	Params::SHEnemyAnimComponent_ProcessHitReactionStateStartedEvent Parms{};

	Parms.InHitReactionComponent = InHitReactionComponent;
	Parms.InHitReactionState = InHitReactionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyAnimComponent.SetLyingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsLying                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTransforming                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::SetLyingState(bool InIsLying, bool InIsTransforming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "SetLyingState");

	Params::SHEnemyAnimComponent_SetLyingState Parms{};

	Parms.InIsLying = InIsLying;
	Parms.InIsTransforming = InIsTransforming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyAnimComponent.GetActiveHitReactionVariants
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionResponseType              InHitReactionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutHitReactionVariants                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USHEnemyAnimComponent::GetActiveHitReactionVariants(ESHHitReactionResponseType InHitReactionType, TArray<class FName>* OutHitReactionVariants) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "GetActiveHitReactionVariants");

	Params::SHEnemyAnimComponent_GetActiveHitReactionVariants Parms{};

	Parms.InHitReactionType = InHitReactionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionVariants != nullptr)
		*OutHitReactionVariants = std::move(Parms.OutHitReactionVariants);
}


// Function SHProto.SHEnemyAnimComponent.IsInDeathState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInDeathState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInDeathState");

	Params::SHEnemyAnimComponent_IsInDeathState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.IsInFalterState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInFalterState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInFalterState");

	Params::SHEnemyAnimComponent_IsInFalterState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.IsInKnockdownState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInKnockdownState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInKnockdownState");

	Params::SHEnemyAnimComponent_IsInKnockdownState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.IsInNormalHitState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInNormalHitState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInNormalHitState");

	Params::SHEnemyAnimComponent_IsInNormalHitState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.IsInStaggerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInStaggerState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInStaggerState");

	Params::SHEnemyAnimComponent_IsInStaggerState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyAnimComponent.IsInTwitchState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyAnimComponent::IsInTwitchState(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyAnimComponent", "IsInTwitchState");

	Params::SHEnemyAnimComponent_IsInTwitchState Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyAnimComponent.SetBrakingPoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AreaFlags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyAnimComponent::SetBrakingPoint(const struct FVector& Location, int32 AreaFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimComponent", "SetBrakingPoint");

	Params::SHAbstractDaddyAnimComponent_SetBrakingPoint Parms{};

	Parms.Location = std::move(Location);
	Parms.AreaFlags = AreaFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPendulumComponent.AddAngularVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InVelocity                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPendulumComponent::AddAngularVelocity(const float InVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPendulumComponent", "AddAngularVelocity");

	Params::SHPendulumComponent_AddAngularVelocity Parms{};

	Parms.InVelocity = InVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPendulumComponent.SetFreeze
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInFreeze                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPendulumComponent::SetFreeze(const bool bInFreeze)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPendulumComponent", "SetFreeze");

	Params::SHPendulumComponent_SetFreeze Parms{};

	Parms.bInFreeze = bInFreeze;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorLockBaseComponent.OnInteract
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorLockBaseComponent::OnInteract(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "OnInteract");

	Params::SHDoorLockBaseComponent_OnInteract Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorLockBaseComponent.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SkipDetectableManagement                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorLockBaseComponent::SetLocked(bool NewLocked, bool SkipDetectableManagement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "SetLocked");

	Params::SHDoorLockBaseComponent_SetLocked Parms{};

	Parms.NewLocked = NewLocked;
	Parms.SkipDetectableManagement = SkipDetectableManagement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDoorLockBaseComponent.SHDoorLockEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorLockBaseComponent*         Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorLockBaseComponent::SHDoorLockEvent__DelegateSignature(class USHDoorLockBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "SHDoorLockEvent__DelegateSignature");

	Params::SHDoorLockBaseComponent_SHDoorLockEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorLockBaseComponent.SHDoorLockEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorLockBaseComponent*         Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorLockBaseComponent::SHDoorLockEventBP__DelegateSignature(class USHDoorLockBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "SHDoorLockEventBP__DelegateSignature");

	Params::SHDoorLockBaseComponent_SHDoorLockEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDoorLockBaseComponent.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorLockBaseComponent::IsLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "IsLocked");

	Params::SHDoorLockBaseComponent_IsLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorLockBaseComponent.IsLockedOnBegin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorLockBaseComponent::IsLockedOnBegin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorLockBaseComponent", "IsLockedOnBegin");

	Params::SHDoorLockBaseComponent_IsLockedOnBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorAnimationsBaseComponent.HandleReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsBaseComponent::HandleReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsBaseComponent", "HandleReceiveDamageEvent");

	Params::SHDoorAnimationsBaseComponent_HandleReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDoorAnimationsBaseComponent.SHDoorAnimationsBaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorAnimationsBaseComponent*   Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsBaseComponent::SHDoorAnimationsBaseEvent__DelegateSignature(class USHDoorAnimationsBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsBaseComponent", "SHDoorAnimationsBaseEvent__DelegateSignature");

	Params::SHDoorAnimationsBaseComponent_SHDoorAnimationsBaseEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorAnimationsBaseComponent.SHDoorAnimationsBaseEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorAnimationsBaseComponent*   Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsBaseComponent::SHDoorAnimationsBaseEventBP__DelegateSignature(class USHDoorAnimationsBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsBaseComponent", "SHDoorAnimationsBaseEventBP__DelegateSignature");

	Params::SHDoorAnimationsBaseComponent_SHDoorAnimationsBaseEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAbstractDaddyAnimInstance.SetBrakingPoint
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyAnimInstance::SetBrakingPoint(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "SetBrakingPoint");

	Params::SHAbstractDaddyAnimInstance_SetBrakingPoint Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAbstractDaddyAnimInstance.SetOutstretchedArmsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InOutstretchedArmsActive                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyAnimInstance::SetOutstretchedArmsActive(bool InOutstretchedArmsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "SetOutstretchedArmsActive");

	Params::SHAbstractDaddyAnimInstance_SetOutstretchedArmsActive Parms{};

	Parms.InOutstretchedArmsActive = InOutstretchedArmsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAbstractDaddyAnimInstance.StartChargeMovement
// (Final, Native, Public, BlueprintCallable)

void USHAbstractDaddyAnimInstance::StartChargeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "StartChargeMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAbstractDaddyAnimInstance.StopChargeMovement
// (Final, Native, Public, BlueprintCallable)

void USHAbstractDaddyAnimInstance::StopChargeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "StopChargeMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAbstractDaddyAnimInstance.GetAbstractDaddyAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHAbstractDaddyAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAbstractDaddyAnimInstanceStateData* USHAbstractDaddyAnimInstance::GetAbstractDaddyAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "GetAbstractDaddyAnimInstanceStateData");

	Params::SHAbstractDaddyAnimInstance_GetAbstractDaddyAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyAnimInstance.GetAbstractDaddyLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHAbstractDaddyLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAbstractDaddyLocomotionAnimInstance* USHAbstractDaddyAnimInstance::GetAbstractDaddyLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "GetAbstractDaddyLocomotionAnimInstance");

	Params::SHAbstractDaddyAnimInstance_GetAbstractDaddyLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyAnimInstance.GetBrakingPoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAbstractDaddyAnimInstance::GetBrakingPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstance", "GetBrakingPoint");

	Params::SHAbstractDaddyAnimInstance_GetBrakingPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetDesiredLocalRotationYaw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCAnimInstanceStateData::GetDesiredLocalRotationYaw() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetDesiredLocalRotationYaw");

	Params::SHNPCAnimInstanceStateData_GetDesiredLocalRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetDesiredLocalVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector USHNPCAnimInstanceStateData::GetDesiredLocalVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetDesiredLocalVelocity");

	Params::SHNPCAnimInstanceStateData_GetDesiredLocalVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetDesiredStrafeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCAnimInstanceStateData::GetDesiredStrafeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetDesiredStrafeAngle");

	Params::SHNPCAnimInstanceStateData_GetDesiredStrafeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetLookAtRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutWorldRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutRotationAlpha                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNPCAnimInstanceStateData::GetLookAtRotation(struct FRotator* OutWorldRotation, float* OutRotationAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetLookAtRotation");

	Params::SHNPCAnimInstanceStateData_GetLookAtRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldRotation != nullptr)
		*OutWorldRotation = std::move(Parms.OutWorldRotation);

	if (OutRotationAlpha != nullptr)
		*OutRotationAlpha = Parms.OutRotationAlpha;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetStrafeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCAnimInstanceStateData::GetStrafeAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetStrafeAngle");

	Params::SHNPCAnimInstanceStateData_GetStrafeAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNPCAnimInstanceStateData.GetTurnInPlaceAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHNPCAnimInstanceStateData::GetTurnInPlaceAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNPCAnimInstanceStateData", "GetTurnInPlaceAngle");

	Params::SHNPCAnimInstanceStateData_GetTurnInPlaceAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyAnimInstanceStateData.GetAreOutstretchedArmsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAbstractDaddyAnimInstanceStateData::GetAreOutstretchedArmsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstanceStateData", "GetAreOutstretchedArmsActive");

	Params::SHAbstractDaddyAnimInstanceStateData_GetAreOutstretchedArmsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyAnimInstanceStateData.GetBrakingSegmentLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAbstractDaddyAnimInstanceStateData::GetBrakingSegmentLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyAnimInstanceStateData", "GetBrakingSegmentLocation");

	Params::SHAbstractDaddyAnimInstanceStateData_GetBrakingSegmentLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorControlInterface.OnPushedByDoorEvent
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USHDoorMovementComponent*         DoorMovementComp                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PushNormal                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHDoorControlInterface::OnPushedByDoorEvent(class USHDoorMovementComponent* DoorMovementComp, const struct FVector& PushNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorControlInterface", "OnPushedByDoorEvent");

	Params::SHDoorControlInterface_OnPushedByDoorEvent Parms{};

	Parms.DoorMovementComp = DoorMovementComp;
	Parms.PushNormal = std::move(PushNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorControlInterface.CanBePushedByDoor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHDoorControlInterface::CanBePushedByDoor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorControlInterface", "CanBePushedByDoor");

	Params::SHDoorControlInterface_CanBePushedByDoor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorControlInterface.CanPushDoor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHDoorControlInterface::CanPushDoor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorControlInterface", "CanPushDoor");

	Params::SHDoorControlInterface_CanPushDoor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorControlInterface.GetPushingVelocity
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ISHDoorControlInterface::GetPushingVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorControlInterface", "GetPushingVelocity");

	Params::SHDoorControlInterface_GetPushingVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyLocomotionAnimInstance.SetChargeMovementIsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyLocomotionAnimInstance::SetChargeMovementIsActive(bool NewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyLocomotionAnimInstance", "SetChargeMovementIsActive");

	Params::SHAbstractDaddyLocomotionAnimInstance_SetChargeMovementIsActive Parms{};

	Parms.NewActive = NewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAbstractDaddyLocomotionAnimInstance.GetAbstractDaddyAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHAbstractDaddyAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAbstractDaddyAnimInstanceStateData* USHAbstractDaddyLocomotionAnimInstance::GetAbstractDaddyAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyLocomotionAnimInstance", "GetAbstractDaddyAnimInstanceStateData");

	Params::SHAbstractDaddyLocomotionAnimInstance_GetAbstractDaddyAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHAbstractDaddyStandingLocomotionAnimInstance.GetTargetLookAtAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAbstractDaddyStandingLocomotionAnimInstance::GetTargetLookAtAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAbstractDaddyStandingLocomotionAnimInstance", "GetTargetLookAtAlpha");

	Params::SHAbstractDaddyStandingLocomotionAnimInstance_GetTargetLookAtAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHMusicSwitchVolume.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMusicSwitchVolume::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMusicSwitchVolume", "SetEnabled");

	Params::SHMusicSwitchVolume_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHActorLevelObserverComponent.ActorLevelObserverEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                           ObservedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHActorLevelObserverComponent::ActorLevelObserverEvent__DelegateSignature(class AActor* ObservedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHActorLevelObserverComponent", "ActorLevelObserverEvent__DelegateSignature");

	Params::SHActorLevelObserverComponent_ActorLevelObserverEvent__DelegateSignature Parms{};

	Parms.ObservedActor = ObservedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHActorLevelObserverComponent.RequestObserveActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            InActorToObserve                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHActorLevelObserverComponent::RequestObserveActor(TSoftObjectPtr<class AActor> InActorToObserve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHActorLevelObserverComponent", "RequestObserveActor");

	Params::SHActorLevelObserverComponent_RequestObserveActor Parms{};

	Parms.InActorToObserve = InActorToObserve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHActorLevelObserverComponent.RequestStopObserveActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            ActorToStopObserve                                     (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHActorLevelObserverComponent::RequestStopObserveActor(TSoftObjectPtr<class AActor> ActorToStopObserve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHActorLevelObserverComponent", "RequestStopObserveActor");

	Params::SHActorLevelObserverComponent_RequestStopObserveActor Parms{};

	Parms.ActorToStopObserve = ActorToStopObserve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimWholeBodyTranslationSubcomp.CheckOnGroundAdditionalRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FWholeBodyTranslation            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FWholeBodyTranslation USHAnimWholeBodyTranslationSubcomp::CheckOnGroundAdditionalRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimWholeBodyTranslationSubcomp", "CheckOnGroundAdditionalRotation");

	Params::SHAnimWholeBodyTranslationSubcomp_CheckOnGroundAdditionalRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimWholeBodyTranslationSubcomp.ResetAdditionalTranslation
// (Final, Native, Public, BlueprintCallable)

void USHAnimWholeBodyTranslationSubcomp::ResetAdditionalTranslation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimWholeBodyTranslationSubcomp", "ResetAdditionalTranslation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimWholeBodyTranslationSubcomp.SetAdditionalRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewRotation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USHAnimWholeBodyTranslationSubcomp::SetAdditionalRotation(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimWholeBodyTranslationSubcomp", "SetAdditionalRotation");

	Params::SHAnimWholeBodyTranslationSubcomp_SetAdditionalRotation Parms{};

	Parms.NewRotation = std::move(NewRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimWholeBodyTranslationSubcomp.SetAdditionalTranslation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FWholeBodyTranslation            InAdditionalRotationTarget                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USHAnimWholeBodyTranslationSubcomp::SetAdditionalTranslation(const struct FWholeBodyTranslation& InAdditionalRotationTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimWholeBodyTranslationSubcomp", "SetAdditionalTranslation");

	Params::SHAnimWholeBodyTranslationSubcomp_SetAdditionalTranslation Parms{};

	Parms.InAdditionalRotationTarget = std::move(InAdditionalRotationTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHActorsManagementControllableInterface.ApplyShouldBeActive
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASHActorsManagementBaseControllerActor*InControllerActor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShouldBeActive                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHActorsManagementControllableInterface::ApplyShouldBeActive(class ASHActorsManagementBaseControllerActor* InControllerActor, const bool InShouldBeActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHActorsManagementControllableInterface", "ApplyShouldBeActive");

	Params::SHActorsManagementControllableInterface_ApplyShouldBeActive Parms{};

	Parms.InControllerActor = InControllerActor;
	Parms.InShouldBeActive = InShouldBeActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIAction_Sync.StopCameraChange
// (Final, Native, Public, BlueprintCallable)

void USHAIAction_Sync::StopCameraChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIAction_Sync", "StopCameraChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.ExpandCapsule
// (Final, Native, Public, BlueprintCallable)

void USHCaterpillarCapsuleComponent::ExpandCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "ExpandCapsule");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.ReExpandCapsuleAtDesiredLocationAndRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::ReExpandCapsuleAtDesiredLocationAndRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "ReExpandCapsuleAtDesiredLocationAndRotation");

	Params::SHCaterpillarCapsuleComponent_ReExpandCapsuleAtDesiredLocationAndRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.RetractCapsule
// (Final, Native, Public, BlueprintCallable)

void USHCaterpillarCapsuleComponent::RetractCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "RetractCapsule");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetBaseHalfHeightWithoutHemisphere
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InHalfHeightWithoutHemisphere                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetBaseHalfHeightWithoutHemisphere(float InHalfHeightWithoutHemisphere)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetBaseHalfHeightWithoutHemisphere");

	Params::SHCaterpillarCapsuleComponent_SetBaseHalfHeightWithoutHemisphere Parms{};

	Parms.InHalfHeightWithoutHemisphere = InHalfHeightWithoutHemisphere;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleActivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InActivated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleActivated(bool InActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleActivated");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleActivated Parms{};

	Parms.InActivated = InActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleAnchorHeightScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAnchorScalar                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleAnchorHeightScalar(float InAnchorScalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleAnchorHeightScalar");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleAnchorHeightScalar Parms{};

	Parms.InAnchorScalar = InAnchorScalar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleAvoidCollisions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InAvoidCollisions                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleAvoidCollisions(bool InAvoidCollisions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleAvoidCollisions");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleAvoidCollisions Parms{};

	Parms.InAvoidCollisions = InAvoidCollisions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleDesiredExtensionScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScalar                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleDesiredExtensionScalar(float InScalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleDesiredExtensionScalar");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleDesiredExtensionScalar Parms{};

	Parms.InScalar = InScalar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleIdleRotationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnableIdleRotation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleIdleRotationEnabled(bool InEnableIdleRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleIdleRotationEnabled");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleIdleRotationEnabled Parms{};

	Parms.InEnableIdleRotation = InEnableIdleRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleInterpolatingRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InInterpolate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleInterpolatingRotation(bool InInterpolate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleInterpolatingRotation");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleInterpolatingRotation Parms{};

	Parms.InInterpolate = InInterpolate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleLocationAndRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InAnchorLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InCapsuleRotation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    InSweepCollisions                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPullbackRotationMultiplier                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::SetCapsuleLocationAndRotation(const struct FVector& InAnchorLocation, const struct FRotator& InCapsuleRotation, bool InSweepCollisions, float InPullbackRotationMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleLocationAndRotation");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleLocationAndRotation Parms{};

	Parms.InAnchorLocation = std::move(InAnchorLocation);
	Parms.InCapsuleRotation = std::move(InCapsuleRotation);
	Parms.InSweepCollisions = InSweepCollisions;
	Parms.InPullbackRotationMultiplier = InPullbackRotationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleLocationAndRotationToDesired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InSweepCollisions                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::SetCapsuleLocationAndRotationToDesired(bool InSweepCollisions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleLocationAndRotationToDesired");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleLocationAndRotationToDesired Parms{};

	Parms.InSweepCollisions = InSweepCollisions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleParentAttachmentOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InAttachmentOffset                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleParentAttachmentOffset(const struct FVector& InAttachmentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleParentAttachmentOffset");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleParentAttachmentOffset Parms{};

	Parms.InAttachmentOffset = std::move(InAttachmentOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleParentAttachmentScalars
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InAttachmentScalars                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleParentAttachmentScalars(const struct FVector& InAttachmentScalars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleParentAttachmentScalars");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleParentAttachmentScalars Parms{};

	Parms.InAttachmentScalars = std::move(InAttachmentScalars);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.SetCapsuleSurfaceAlignmentEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnableAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::SetCapsuleSurfaceAlignmentEnabled(bool InEnableAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "SetCapsuleSurfaceAlignmentEnabled");

	Params::SHCaterpillarCapsuleComponent_SetCapsuleSurfaceAlignmentEnabled Parms{};

	Parms.InEnableAlignment = InEnableAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCaterpillarCapsuleComponent.TraceCapsuleLocationAndRotationChange
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InTargetAnchorLocation                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InTargetCapsuleRotation                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InPullbackRotationMultiplier                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutCapsuleLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            OutCapsuleRotation                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::TraceCapsuleLocationAndRotationChange(const struct FVector& InTargetAnchorLocation, const struct FRotator& InTargetCapsuleRotation, float InPullbackRotationMultiplier, struct FVector* OutCapsuleLocation, struct FQuat* OutCapsuleRotation, struct FHitResult* OutHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "TraceCapsuleLocationAndRotationChange");

	Params::SHCaterpillarCapsuleComponent_TraceCapsuleLocationAndRotationChange Parms{};

	Parms.InTargetAnchorLocation = std::move(InTargetAnchorLocation);
	Parms.InTargetCapsuleRotation = std::move(InTargetCapsuleRotation);
	Parms.InPullbackRotationMultiplier = InPullbackRotationMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCapsuleLocation != nullptr)
		*OutCapsuleLocation = std::move(Parms.OutCapsuleLocation);

	if (OutCapsuleRotation != nullptr)
		*OutCapsuleRotation = std::move(Parms.OutCapsuleRotation);

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleCurrentExtensionScalar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetCapsuleCurrentExtensionScalar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleCurrentExtensionScalar");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleCurrentExtensionScalar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleDesiredHalfHeightWithoutHemisphere
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetCapsuleDesiredHalfHeightWithoutHemisphere() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleDesiredHalfHeightWithoutHemisphere");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleDesiredHalfHeightWithoutHemisphere Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleExtensionSafetyMargin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetCapsuleExtensionSafetyMargin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleExtensionSafetyMargin");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleExtensionSafetyMargin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleExtensionScalarsFromAnchor
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutTopScalar                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBottomScalar                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InClamped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCaterpillarCapsuleComponent::GetCapsuleExtensionScalarsFromAnchor(float* OutTopScalar, float* OutBottomScalar, bool InClamped) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleExtensionScalarsFromAnchor");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleExtensionScalarsFromAnchor Parms{};

	Parms.InClamped = InClamped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTopScalar != nullptr)
		*OutTopScalar = Parms.OutTopScalar;

	if (OutBottomScalar != nullptr)
		*OutBottomScalar = Parms.OutBottomScalar;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleIdleRotationEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::GetCapsuleIdleRotationEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleIdleRotationEnabled");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleIdleRotationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleIsActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::GetCapsuleIsActivated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleIsActivated");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleIsActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleIsAvoidingCollisions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::GetCapsuleIsAvoidingCollisions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleIsAvoidingCollisions");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleIsAvoidingCollisions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleIsInterpolatingRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::GetCapsuleIsInterpolatingRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleIsInterpolatingRotation");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleIsInterpolatingRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleLyingRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat USHCaterpillarCapsuleComponent::GetCapsuleLyingRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleLyingRotation");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleLyingRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleParentAttachmentDesiredRotationInActorSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat USHCaterpillarCapsuleComponent::GetCapsuleParentAttachmentDesiredRotationInActorSpace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleParentAttachmentDesiredRotationInActorSpace");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleParentAttachmentDesiredRotationInActorSpace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleRadiusSafetyMargin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetCapsuleRadiusSafetyMargin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleRadiusSafetyMargin");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleRadiusSafetyMargin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleSurfaceAlignmentEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCaterpillarCapsuleComponent::GetCapsuleSurfaceAlignmentEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleSurfaceAlignmentEnabled");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleSurfaceAlignmentEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleTargetAnchorScalar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetCapsuleTargetAnchorScalar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleTargetAnchorScalar");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleTargetAnchorScalar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleTargetAnchorWorldLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCaterpillarCapsuleComponent::GetCapsuleTargetAnchorWorldLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleTargetAnchorWorldLocation");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleTargetAnchorWorldLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleTargetAnchorWorldRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat USHCaterpillarCapsuleComponent::GetCapsuleTargetAnchorWorldRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleTargetAnchorWorldRotation");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleTargetAnchorWorldRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetCapsuleUnlyingWorldRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat USHCaterpillarCapsuleComponent::GetCapsuleUnlyingWorldRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetCapsuleUnlyingWorldRotation");

	Params::SHCaterpillarCapsuleComponent_GetCapsuleUnlyingWorldRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetDesiredCapsuleBottomDistanceFromAnchor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetDesiredCapsuleBottomDistanceFromAnchor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetDesiredCapsuleBottomDistanceFromAnchor");

	Params::SHCaterpillarCapsuleComponent_GetDesiredCapsuleBottomDistanceFromAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCaterpillarCapsuleComponent.GetDesiredCapsuleTopDistanceFromAnchor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCaterpillarCapsuleComponent::GetDesiredCapsuleTopDistanceFromAnchor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCaterpillarCapsuleComponent", "GetDesiredCapsuleTopDistanceFromAnchor");

	Params::SHCaterpillarCapsuleComponent_GetDesiredCapsuleTopDistanceFromAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.Die
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ASHAICharacter::Die()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "Die");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.DrawDeathSequenceDebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             DeathPlayerSoftClass                                   (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAICharacter::DrawDeathSequenceDebug(float DeltaSeconds, TSoftClassPtr<class UClass> DeathPlayerSoftClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "DrawDeathSequenceDebug");

	Params::SHAICharacter_DrawDeathSequenceDebug Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.DeathPlayerSoftClass = DeathPlayerSoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.OnPlayerSnap
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   SnapDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          DamageType                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAICharacter::OnPlayerSnap(float SnapDuration, TSubclassOf<class UDamageType> DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "OnPlayerSnap");

	Params::SHAICharacter_OnPlayerSnap Parms{};

	Parms.SnapDuration = SnapDuration;
	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAICharacter.PlayDeathSequenceRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Slayer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             DeathPlayerSoftClass                                   (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::PlayDeathSequenceRequest(class APawn* Slayer, TSoftClassPtr<class UClass> DeathPlayerSoftClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "PlayDeathSequenceRequest");

	Params::SHAICharacter_PlayDeathSequenceRequest Parms{};

	Parms.Slayer = Slayer;
	Parms.DeathPlayerSoftClass = DeathPlayerSoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.ResetPawn
// (Final, Native, Public, BlueprintCallable)

void ASHAICharacter::ResetPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "ResetPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.Revive
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ASHAICharacter::Revive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "Revive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.SetAudioStopWhenDespawned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bStopAudioStopWhenDespawned                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAICharacter::SetAudioStopWhenDespawned(bool bStopAudioStopWhenDespawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "SetAudioStopWhenDespawned");

	Params::SHAICharacter_SetAudioStopWhenDespawned Parms{};

	Parms.bStopAudioStopWhenDespawned = bStopAudioStopWhenDespawned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.SetCustomMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     CustomMesh                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAICharacter::SetCustomMesh(TSoftObjectPtr<class USkeletalMesh> CustomMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "SetCustomMesh");

	Params::SHAICharacter_SetCustomMesh Parms{};

	Parms.CustomMesh = CustomMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.SetDisabledPushedByPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDisable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAICharacter::SetDisabledPushedByPlayer(const bool bInDisable, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "SetDisabledPushedByPlayer");

	Params::SHAICharacter_SetDisabledPushedByPlayer Parms{};

	Parms.bInDisable = bInDisable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAICharacter.AllowDeath
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::AllowDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "AllowDeath");

	Params::SHAICharacter_AllowDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.AllowFinisher
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::AllowFinisher() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "AllowFinisher");

	Params::SHAICharacter_AllowFinisher Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.CanBeSteppedOn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::CanBeSteppedOn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "CanBeSteppedOn");

	Params::SHAICharacter_CanBeSteppedOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.EnforceFinisher
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::EnforceFinisher() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "EnforceFinisher");

	Params::SHAICharacter_EnforceFinisher Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetActorLocationAsMeleeTarget
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHAICharacter::GetActorLocationAsMeleeTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetActorLocationAsMeleeTarget");

	Params::SHAICharacter_GetActorLocationAsMeleeTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetAssetsToHardStore
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UObject>> ASHAICharacter::GetAssetsToHardStore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetAssetsToHardStore");

	Params::SHAICharacter_GetAssetsToHardStore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetAutoAimTargets
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class USceneComponent*>          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class USceneComponent*> ASHAICharacter::GetAutoAimTargets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetAutoAimTargets");

	Params::SHAICharacter_GetAutoAimTargets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetFinisherParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Victim                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            TagFilters                                             (Parm, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle ASHAICharacter::GetFinisherParams(class AActor* Victim, const struct FGameplayTagContainer& TagFilters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetFinisherParams");

	Params::SHAICharacter_GetFinisherParams Parms{};

	Parms.Victim = Victim;
	Parms.TagFilters = std::move(TagFilters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetFinisherTags
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Victim                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer ASHAICharacter::GetFinisherTags(class AActor* Victim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetFinisherTags");

	Params::SHAICharacter_GetFinisherTags Parms{};

	Parms.Victim = Victim;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetFlashlightTarget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* ASHAICharacter::GetFlashlightTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetFlashlightTarget");

	Params::SHAICharacter_GetFlashlightTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.GetOffsetForEnvironmentTrace
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHAICharacter::GetOffsetForEnvironmentTrace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "GetOffsetForEnvironmentTrace");

	Params::SHAICharacter_GetOffsetForEnvironmentTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsKnockedDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsKnockedDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsKnockedDown");

	Params::SHAICharacter_IsKnockedDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsLying
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsLying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsLying");

	Params::SHAICharacter_IsLying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsPrimaryEnemy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsPrimaryEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsPrimaryEnemy");

	Params::SHAICharacter_IsPrimaryEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsPushedByPlayerDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsPushedByPlayerDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsPushedByPlayerDisabled");

	Params::SHAICharacter_IsPushedByPlayerDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsPushedByPlayerDisabledBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsPushedByPlayerDisabledBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsPushedByPlayerDisabledBy");

	Params::SHAICharacter_IsPushedByPlayerDisabledBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsUnderEnemy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsUnderEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsUnderEnemy");

	Params::SHAICharacter_IsUnderEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAICharacter.IsUnderObstacle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAICharacter::IsUnderObstacle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAICharacter", "IsUnderObstacle");

	Params::SHAICharacter_IsUnderObstacle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBlissEndingFactor.SHDebug_Character_Endings_Factors_BlissEnding_SetDebugIsAllowedToAddValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBlissEndingFactor::SHDebug_Character_Endings_Factors_BlissEnding_SetDebugIsAllowedToAddValue(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBlissEndingFactor", "SHDebug_Character_Endings_Factors_BlissEnding_SetDebugIsAllowedToAddValue");

	Params::SHBlissEndingFactor_SHDebug_Character_Endings_Factors_BlissEnding_SetDebugIsAllowedToAddValue Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBlissEndingFactor.SHDebug_Character_Endings_Factors_BlissEnding_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBlissEndingFactor::SHDebug_Character_Endings_Factors_BlissEnding_SetDebugValue(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBlissEndingFactor", "SHDebug_Character_Endings_Factors_BlissEnding_SetDebugValue");

	Params::SHBlissEndingFactor_SHDebug_Character_Endings_Factors_BlissEnding_SetDebugValue Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIController.ChangeLockedState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewLockedState                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAIController::ChangeLockedState(const bool bNewLockedState, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIController", "ChangeLockedState");

	Params::SHAIController_ChangeLockedState Parms{};

	Parms.bNewLockedState = bNewLockedState;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIController.ClearBehaviorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHAIBehaviors                          Behavior                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAIController::ClearBehaviorType(ESHAIBehaviors Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIController", "ClearBehaviorType");

	Params::SHAIController_ClearBehaviorType Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIController.SetBehaviorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHAIBehaviors                          Behavior                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAIController::SetBehaviorType(ESHAIBehaviors Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIController", "SetBehaviorType");

	Params::SHAIController_SetBehaviorType Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIController.GetBehaviorType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHAIBehaviors                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHAIBehaviors ASHAIController::GetBehaviorType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIController", "GetBehaviorType");

	Params::SHAIController_GetBehaviorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIController.IsInLockedState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHAIController::IsInLockedState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIController", "IsInLockedState");

	Params::SHAIController_IsInLockedState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPlaythroughStompedDeadEnemiesEndingFactor.SHDebug_Character_Endings_PlaythroughStompedDeadEnemiesEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlaythroughStompedDeadEnemiesEndingFactor::SHDebug_Character_Endings_PlaythroughStompedDeadEnemiesEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlaythroughStompedDeadEnemiesEndingFactor", "SHDebug_Character_Endings_PlaythroughStompedDeadEnemiesEndingFactor_SetDebugValue");

	Params::SHPlaythroughStompedDeadEnemiesEndingFactor_SHDebug_Character_Endings_PlaythroughStompedDeadEnemiesEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimPhysicalSubcomp.SetPhysicalAnimationWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   PhysicalAnimationWeight                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimPhysicalSubcomp::SetPhysicalAnimationWeight(float PhysicalAnimationWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimPhysicalSubcomp", "SetPhysicalAnimationWeight");

	Params::SHAnimPhysicalSubcomp_SetPhysicalAnimationWeight Parms{};

	Parms.PhysicalAnimationWeight = PhysicalAnimationWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseStagedAnimInstance.ApplyInteractionBlendingOut
// (Final, Native, Protected, BlueprintCallable)

void USHBaseStagedAnimInstance::ApplyInteractionBlendingOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseStagedAnimInstance", "ApplyInteractionBlendingOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseStagedAnimInstance.ApplyInteractionFinished
// (Final, Native, Protected, BlueprintCallable)

void USHBaseStagedAnimInstance::ApplyInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseStagedAnimInstance", "ApplyInteractionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseStagedAnimInstance.ApplyInteractionStarted
// (Final, Native, Protected, BlueprintCallable)

void USHBaseStagedAnimInstance::ApplyInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseStagedAnimInstance", "ApplyInteractionStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseStagedAnimInstance.ApplyStageAdvanced
// (Final, Native, Protected, BlueprintCallable)

void USHBaseStagedAnimInstance::ApplyStageAdvanced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseStagedAnimInstance", "ApplyStageAdvanced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseStagedAnimInstance.CanAdvanceStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBaseStagedAnimInstance::CanAdvanceStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseStagedAnimInstance", "CanAdvanceStage");

	Params::SHBaseStagedAnimInstance_CanAdvanceStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSaveSlotsListWidget.Filter
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// ESavePointFilterId                      FilterId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSaveSlotsListWidget::Filter(ESavePointFilterId FilterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSaveSlotsListWidget", "Filter");

	Params::SHSaveSlotsListWidget_Filter Parms{};

	Parms.FilterId = FilterId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSaveSlotsListWidget.OnSlotHovered
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FGameSaveSlotInfo                SaveSlot                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHSaveSlotsListWidget::OnSlotHovered(const struct FGameSaveSlotInfo& SaveSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSaveSlotsListWidget", "OnSlotHovered");

	Params::SHSaveSlotsListWidget_OnSlotHovered Parms{};

	Parms.SaveSlot = std::move(SaveSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAILitByAFlashlight.isPointLitByAFlashlight
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngleAlpha                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RangeAlpha                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAILitByAFlashlight::IsPointLitByAFlashlight(class AActor* Owner, const struct FVector& Point, float* AngleAlpha, float* RangeAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAILitByAFlashlight", "isPointLitByAFlashlight");

	Params::SHAILitByAFlashlight_IsPointLitByAFlashlight Parms{};

	Parms.Owner = Owner;
	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AngleAlpha != nullptr)
		*AngleAlpha = Parms.AngleAlpha;

	if (RangeAlpha != nullptr)
		*RangeAlpha = Parms.RangeAlpha;

	return Parms.ReturnValue;
}


// Function SHProto.SHAILitByAFlashlight.DebugPrint
// (Final, Native, Public, BlueprintCallable)

void USHAILitByAFlashlight::DebugPrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAILitByAFlashlight", "DebugPrint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAILitByAFlashlight.IsLitByAFlashlight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAILitByAFlashlight::IsLitByAFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAILitByAFlashlight", "IsLitByAFlashlight");

	Params::SHAILitByAFlashlight_IsLitByAFlashlight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAILitByAFlashlight.IsFullyLit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAILitByAFlashlight::IsFullyLit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAILitByAFlashlight", "IsFullyLit");

	Params::SHAILitByAFlashlight_IsFullyLit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimDistruptorComponent.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAimDistruptorComponent::SetEnabled(const bool bInEnabled, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimDistruptorComponent", "SetEnabled");

	Params::SHAimDistruptorComponent_SetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAimDistruptorComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAimDistruptorComponent::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimDistruptorComponent", "IsEnabled");

	Params::SHAimDistruptorComponent_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIMeleeWeapon.HandleMeshComponentBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHAIMeleeWeapon::HandleMeshComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIMeleeWeapon", "HandleMeshComponentBeginOverlap");

	Params::SHAIMeleeWeapon_HandleMeshComponentBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIMeleeWeapon.BlueprintGetEnvCollisionShapes
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// TArray<class UShapeComponent*>          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UShapeComponent*> ASHAIMeleeWeapon::BlueprintGetEnvCollisionShapes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIMeleeWeapon", "BlueprintGetEnvCollisionShapes");

	Params::SHAIMeleeWeapon_BlueprintGetEnvCollisionShapes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHBaseDoorAttachment.EnsureDoorActorClosed
// (Final, Native, Protected, BlueprintCallable)

void ASHBaseDoorAttachment::EnsureDoorActorClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "EnsureDoorActorClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseDoorAttachment.OnParentInteracted
// (Event, Protected, BlueprintEvent)

void ASHBaseDoorAttachment::OnParentInteracted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "OnParentInteracted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBaseDoorAttachment.OnParentModified
// (Event, Protected, BlueprintEvent)

void ASHBaseDoorAttachment::OnParentModified()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "OnParentModified");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBaseDoorAttachment.ProcessOnDoorLockStateChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorLockBaseComponent*         DoorLockComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBaseDoorAttachment::ProcessOnDoorLockStateChanged(class USHDoorLockBaseComponent* DoorLockComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "ProcessOnDoorLockStateChanged");

	Params::SHBaseDoorAttachment_ProcessOnDoorLockStateChanged Parms{};

	Parms.DoorLockComponent = DoorLockComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseDoorAttachment.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHBaseDoorAttachment::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "ProcessProximityBeginOverlap");

	Params::SHBaseDoorAttachment_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseDoorAttachment.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBaseDoorAttachment::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "ProcessProximityEndOverlap");

	Params::SHBaseDoorAttachment_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseDoorAttachment.RefreshVisuals
// (Event, Protected, BlueprintEvent)

void ASHBaseDoorAttachment::RefreshVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "RefreshVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBaseDoorAttachment.RegisterDoorActor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHBaseDoorAttachment::RegisterDoorActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "RegisterDoorActor");

	Params::SHBaseDoorAttachment_RegisterDoorActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBaseDoorAttachment.SetDoorActorFrozen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Inset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBaseDoorAttachment::SetDoorActorFrozen(bool Inset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "SetDoorActorFrozen");

	Params::SHBaseDoorAttachment_SetDoorActorFrozen Parms{};

	Parms.Inset = Inset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBaseDoorAttachment.GetKeyAttachmentData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             KeyAttachmentName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHKeyAttachmentDataStruct       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHKeyAttachmentDataStruct ASHBaseDoorAttachment::GetKeyAttachmentData(class FName KeyAttachmentName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "GetKeyAttachmentData");

	Params::SHBaseDoorAttachment_GetKeyAttachmentData Parms{};

	Parms.KeyAttachmentName = KeyAttachmentName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBaseDoorAttachment.GetProximityCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHCharacterPlay*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHCharacterPlay* ASHBaseDoorAttachment::GetProximityCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseDoorAttachment", "GetProximityCharacter");

	Params::SHBaseDoorAttachment_GetProximityCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAimOffsetAnimInstance.GetHealthState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHealthStateEnum                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHHealthStateEnum USHAimOffsetAnimInstance::GetHealthState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAimOffsetAnimInstance", "GetHealthState");

	Params::SHAimOffsetAnimInstance_GetHealthState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSearchFocusAnimInstance.ApplyFinalStageReached
// (Final, Native, Protected, BlueprintCallable)

void USHSearchFocusAnimInstance::ApplyFinalStageReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "ApplyFinalStageReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocusAnimInstance.ApplyInteractionStarted
// (Final, Native, Protected, BlueprintCallable)

void USHSearchFocusAnimInstance::ApplyInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "ApplyInteractionStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocusAnimInstance.ApplyInteractionStartedAndItsFinalStage
// (Final, Native, Protected, BlueprintCallable)

void USHSearchFocusAnimInstance::ApplyInteractionStartedAndItsFinalStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "ApplyInteractionStartedAndItsFinalStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocusAnimInstance.ApplyStageAdvanced
// (Final, Native, Protected, BlueprintCallable)

void USHSearchFocusAnimInstance::ApplyStageAdvanced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "ApplyStageAdvanced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHSearchFocusAnimInstance.SHSearchFocusAnimInstanceEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHSearchFocusAnimInstance*       AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSearchFocusAnimInstance::SHSearchFocusAnimInstanceEvent__DelegateSignature(class USHSearchFocusAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "SHSearchFocusAnimInstanceEvent__DelegateSignature");

	Params::SHSearchFocusAnimInstance_SHSearchFocusAnimInstanceEvent__DelegateSignature Parms{};

	Parms.AnimInst = AnimInst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSearchFocusAnimInstance.CanReceiveInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSearchFocusAnimInstance::CanReceiveInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocusAnimInstance", "CanReceiveInput");

	Params::SHSearchFocusAnimInstance_CanReceiveInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIUnderObstacleInterface.GetObstaclePrimitivesToIgnore
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UPrimitiveComponent*>      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UPrimitiveComponent*> ISHAIUnderObstacleInterface::GetObstaclePrimitivesToIgnore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacleInterface", "GetObstaclePrimitivesToIgnore");

	Params::SHAIUnderObstacleInterface_GetObstaclePrimitivesToIgnore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAIUnderObstacleInterface.GetObstaclePrimitiveToOverlap
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* ISHAIUnderObstacleInterface::GetObstaclePrimitiveToOverlap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacleInterface", "GetObstaclePrimitiveToOverlap");

	Params::SHAIUnderObstacleInterface_GetObstaclePrimitiveToOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHBreakableActor.AssignRuntimeSecondaryAttackRowName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InRowName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBreakableActor::AssignRuntimeSecondaryAttackRowName(const class FName& InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "AssignRuntimeSecondaryAttackRowName");

	Params::SHBreakableActor_AssignRuntimeSecondaryAttackRowName Parms{};

	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableActor.ManualDamageTaken
// (Final, Native, Public, BlueprintCallable)

void ASHBreakableActor::ManualDamageTaken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "ManualDamageTaken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableActor.ProcessApplyState
// (Event, Protected, BlueprintEvent)

void ASHBreakableActor::ProcessApplyState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "ProcessApplyState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBreakableActor.ProcessDamageTaken
// (Event, Protected, BlueprintEvent)

void ASHBreakableActor::ProcessDamageTaken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "ProcessDamageTaken");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHBreakableActor.SHBreakableActorEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHBreakableActor*                Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBreakableActor::SHBreakableActorEvent__DelegateSignature(class ASHBreakableActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "SHBreakableActorEvent__DelegateSignature");

	Params::SHBreakableActor_SHBreakableActorEvent__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHBreakableActor.IsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHBreakableActor::IsBroken() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableActor", "IsBroken");

	Params::SHBreakableActor_IsBroken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIUnderObstacle.ConditionalExitUnderObstacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Obstacle                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIUnderObstacle::ConditionalExitUnderObstacle(class AActor* Obstacle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "ConditionalExitUnderObstacle");

	Params::SHAIUnderObstacle_ConditionalExitUnderObstacle Parms{};

	Parms.Obstacle = Obstacle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIUnderObstacle.EnterUnderObctacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Obstacle                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIUnderObstacle::EnterUnderObctacle(class AActor* Obstacle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "EnterUnderObctacle");

	Params::SHAIUnderObstacle_EnterUnderObctacle Parms{};

	Parms.Obstacle = Obstacle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIUnderObstacle.ExitAllObstacles
// (Final, Native, Public, BlueprintCallable)

void USHAIUnderObstacle::ExitAllObstacles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "ExitAllObstacles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIUnderObstacle.OnActorEndOvelap
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIUnderObstacle::OnActorEndOvelap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "OnActorEndOvelap");

	Params::SHAIUnderObstacle_OnActorEndOvelap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIUnderObstacle.OnComponentEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIUnderObstacle::OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "OnComponentEndOverlap");

	Params::SHAIUnderObstacle_OnComponentEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAIUnderObstacle.IsUnderAnyObstacle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAIUnderObstacle::IsUnderAnyObstacle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIUnderObstacle", "IsUnderAnyObstacle");

	Params::SHAIUnderObstacle_IsUnderAnyObstacle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAIWeaponManagerComponent.ProcessSpawnerAfterSpawn
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIWeaponManagerComponent::ProcessSpawnerAfterSpawn(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIWeaponManagerComponent", "ProcessSpawnerAfterSpawn");

	Params::SHAIWeaponManagerComponent_ProcessSpawnerAfterSpawn Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHAIWeaponManagerComponent.SHAIWeaponManagerEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHAIWeaponManagerComponent*      Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIWeaponManagerComponent::SHAIWeaponManagerEvent__DelegateSignature(class USHAIWeaponManagerComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIWeaponManagerComponent", "SHAIWeaponManagerEvent__DelegateSignature");

	Params::SHAIWeaponManagerComponent_SHAIWeaponManagerEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHAIWeaponManagerComponent.SHAIWeaponManagerEventWithWeaponContext__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHAIWeaponManagerComponent*      Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHAIWeapon*                      WeaponContext                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAIWeaponManagerComponent::SHAIWeaponManagerEventWithWeaponContext__DelegateSignature(class USHAIWeaponManagerComponent* Component, class ASHAIWeapon* WeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAIWeaponManagerComponent", "SHAIWeaponManagerEventWithWeaponContext__DelegateSignature");

	Params::SHAIWeaponManagerComponent_SHAIWeaponManagerEventWithWeaponContext__DelegateSignature Parms{};

	Parms.Component = Component;
	Parms.WeaponContext = WeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAkAcousticPortalBreakableGlass.ProcessBreakableGlassOnBreakEvent
// (Final, Native, Protected)
// Parameters:
// class USHBreakableGlassComponent*       BreakableGlassComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAkAcousticPortalBreakableGlass::ProcessBreakableGlassOnBreakEvent(class USHBreakableGlassComponent* BreakableGlassComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkAcousticPortalBreakableGlass", "ProcessBreakableGlassOnBreakEvent");

	Params::SHAkAcousticPortalBreakableGlass_ProcessBreakableGlassOnBreakEvent Parms{};

	Parms.BreakableGlassComponent = BreakableGlassComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkAcousticPortalBreakableGlass.ProcessOnObservedActorAvailable
// (Final, Native, Protected)
// Parameters:
// class AActor*                           AvailableActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHAkAcousticPortalBreakableGlass::ProcessOnObservedActorAvailable(class AActor* AvailableActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkAcousticPortalBreakableGlass", "ProcessOnObservedActorAvailable");

	Params::SHAkAcousticPortalBreakableGlass_ProcessOnObservedActorAvailable Parms{};

	Parms.AvailableActor = AvailableActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkPortalDoorComponent.ProcessDoorAlphaChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementBaseComponent*     DummyComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkPortalDoorComponent::ProcessDoorAlphaChangedEvent(class USHDoorMovementBaseComponent* DummyComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkPortalDoorComponent", "ProcessDoorAlphaChangedEvent");

	Params::SHAkPortalDoorComponent_ProcessDoorAlphaChangedEvent Parms{};

	Parms.DummyComponent = DummyComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkPortalDoorComponent.SetInitialState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EAkAcousticPortalState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkPortalDoorComponent::SetInitialState(EAkAcousticPortalState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkPortalDoorComponent", "SetInitialState");

	Params::SHAkPortalDoorComponent_SetInitialState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPlaythroughBadHealthEndingFactor.SHDebug_Character_Endings_PlaythroughBadHealthEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlaythroughBadHealthEndingFactor::SHDebug_Character_Endings_PlaythroughBadHealthEndingFactor_SetDebugValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlaythroughBadHealthEndingFactor", "SHDebug_Character_Endings_PlaythroughBadHealthEndingFactor_SetDebugValue");

	Params::SHPlaythroughBadHealthEndingFactor_SHDebug_Character_Endings_PlaythroughBadHealthEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableWallActor.ProcessBreakableMeshMainComponentBreakEvent
// (Final, Native, Protected)
// Parameters:
// class USHBreakableMeshComponent*        InComponentPtr                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBreakableWallActor::ProcessBreakableMeshMainComponentBreakEvent(class USHBreakableMeshComponent* InComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableWallActor", "ProcessBreakableMeshMainComponentBreakEvent");

	Params::SHBreakableWallActor_ProcessBreakableMeshMainComponentBreakEvent Parms{};

	Parms.InComponentPtr = InComponentPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableWallActor.IsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHBreakableWallActor::IsBroken() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableWallActor", "IsBroken");

	Params::SHBreakableWallActor_IsBroken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkAmbientSoundManagerComponent.SHDebug_Ak_AmbientSoundManager_DrawDebug
// (Final, Exec, Native, Protected)

void USHAkAmbientSoundManagerComponent::SHDebug_Ak_AmbientSoundManager_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkAmbientSoundManagerComponent", "SHDebug_Ak_AmbientSoundManager_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkAmbientSoundManagerComponent.SHDebug_Ak_AmbientSoundManager_ValuesDebug
// (Final, Exec, Native, Protected)

void USHAkAmbientSoundManagerComponent::SHDebug_Ak_AmbientSoundManager_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkAmbientSoundManagerComponent", "SHDebug_Ak_AmbientSoundManager_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.GetGameplayInputMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHGameplayInputModeEnum                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHGameplayInputModeEnum ASHCharacterPlay::GetGameplayInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "GetGameplayInputMode");

	Params::SHCharacterPlay_GetGameplayInputMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlay.SetCharacterPlayVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Hide                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SkipFlashlight                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SetCharacterPlayVisibility(const bool Hide, const bool SkipFlashlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SetCharacterPlayVisibility");

	Params::SHCharacterPlay_SetCharacterPlayVisibility Parms{};

	Parms.Hide = Hide;
	Parms.SkipFlashlight = SkipFlashlight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SetGameplayInputMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHGameplayInputModeEnum                NewGameplayInputMode                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SetGameplayInputMode(const ESHGameplayInputModeEnum NewGameplayInputMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SetGameplayInputMode");

	Params::SHCharacterPlay_SetGameplayInputMode Parms{};

	Parms.NewGameplayInputMode = NewGameplayInputMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Character_Difficulties_SetCombatDifficulty
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SHDebug_Character_Difficulties_SetCombatDifficulty(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Character_Difficulties_SetCombatDifficulty");

	Params::SHCharacterPlay_SHDebug_Character_Difficulties_SetCombatDifficulty Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Character_Difficulties_SetPuzzlesDifficulty
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SHDebug_Character_Difficulties_SetPuzzlesDifficulty(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Character_Difficulties_SetPuzzlesDifficulty");

	Params::SHCharacterPlay_SHDebug_Character_Difficulties_SetPuzzlesDifficulty Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Character_GameplayInputMode_ValuesDebug
// (Final, Exec, Native, Public)

void ASHCharacterPlay::SHDebug_Character_GameplayInputMode_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Character_GameplayInputMode_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Character_ToggleVisibility
// (Final, Exec, Native, Public)

void ASHCharacterPlay::SHDebug_Character_ToggleVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Character_ToggleVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Custom
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           DebugCommand                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SHDebug_Custom(const class FString& DebugCommand, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Custom");

	Params::SHCharacterPlay_SHDebug_Custom Parms{};

	Parms.DebugCommand = std::move(DebugCommand);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.SHDebug_Temporal_SetHasEverFinishedGame
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlay::SHDebug_Temporal_SetHasEverFinishedGame(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "SHDebug_Temporal_SetHasEverFinishedGame");

	Params::SHCharacterPlay_SHDebug_Temporal_SetHasEverFinishedGame Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlay.GetAllAttachedActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ASHCharacterPlay::GetAllAttachedActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "GetAllAttachedActors");

	Params::SHCharacterPlay_GetAllAttachedActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlay.HasInputComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHCharacterPlay::HasInputComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlay", "HasInputComponent");

	Params::SHCharacterPlay_HasInputComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_AVDebug
// (Final, Exec, Native, Public)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_AVDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_AVDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_PortalsDebug
// (Final, Exec, Native, Public)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_PortalsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_PortalsDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_ReverbTestSound
// (Final, Exec, Native, Public)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_ReverbTestSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_ReverbTestSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_SetBossState
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_SetBossState(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_SetBossState");

	Params::SHAkCharacterAudioComponent_SHDebug_Character_Audio_SetBossState Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_SetCutsceneState
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_SetCutsceneState(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_SetCutsceneState");

	Params::SHAkCharacterAudioComponent_SHDebug_Character_Audio_SetCutsceneState Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_SetDangerState
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InDangerMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_SetDangerState(int32 InDangerMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_SetDangerState");

	Params::SHAkCharacterAudioComponent_SHDebug_Character_Audio_SetDangerState Parms{};

	Parms.InDangerMode = InDangerMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_StatesDebug
// (Final, Exec, Native, Public)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_StatesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_StatesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.SHDebug_Character_Audio_ValuesDebug
// (Final, Exec, Native, Public)

void USHAkCharacterAudioComponent::SHDebug_Character_Audio_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "SHDebug_Character_Audio_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkCharacterAudioComponent.FindSubcomponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class USHCharacterAudioSubcomponentBase>SubcomponentClass                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHCharacterAudioSubcomponentBase*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCharacterAudioSubcomponentBase* USHAkCharacterAudioComponent::FindSubcomponentByClass(const TSubclassOf<class USHCharacterAudioSubcomponentBase> SubcomponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkCharacterAudioComponent", "FindSubcomponentByClass");

	Params::SHAkCharacterAudioComponent_FindSubcomponentByClass Parms{};

	Parms.SubcomponentClass = SubcomponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkComponentsPoolManagerComponent.PostPooledAkEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkAudioEvent*                    AudioEvent                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkComponentsPoolManagerComponent::PostPooledAkEvent(class UObject* WorldContextObject, class USceneComponent* InComp, class FName InSocket, class UAkAudioEvent* AudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAkComponentsPoolManagerComponent", "PostPooledAkEvent");

	Params::SHAkComponentsPoolManagerComponent_PostPooledAkEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InComp = InComp;
	Parms.InSocket = InSocket;
	Parms.AudioEvent = AudioEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkComponentsPoolManagerComponent.SHDebug_Ak_ComponentsPoolManager_DrawDebug
// (Final, Exec, Native, Protected)

void USHAkComponentsPoolManagerComponent::SHDebug_Ak_ComponentsPoolManager_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkComponentsPoolManagerComponent", "SHDebug_Ak_ComponentsPoolManager_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkComponentsPoolManagerComponent.SHDebug_Ak_ComponentsPoolManager_ValuesDebug
// (Final, Exec, Native, Protected)

void USHAkComponentsPoolManagerComponent::SHDebug_Ak_ComponentsPoolManager_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkComponentsPoolManagerComponent", "SHDebug_Ak_ComponentsPoolManager_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorBaseComponent.ProcessOnAutoLockedDoorCheckAnimPlayed
// (Final, Native, Protected)
// Parameters:
// class USHDoorAnimationsComponent*       DoorAnimComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorBaseComponent::ProcessOnAutoLockedDoorCheckAnimPlayed(class USHDoorAnimationsComponent* DoorAnimComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorBaseComponent", "ProcessOnAutoLockedDoorCheckAnimPlayed");

	Params::SHAkDoorBaseComponent_ProcessOnAutoLockedDoorCheckAnimPlayed Parms{};

	Parms.DoorAnimComponent = DoorAnimComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorBaseComponent.ProcessOnDoorLockStateChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorLockBaseComponent*         LockComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorBaseComponent::ProcessOnDoorLockStateChanged(class USHDoorLockBaseComponent* LockComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorBaseComponent", "ProcessOnDoorLockStateChanged");

	Params::SHAkDoorBaseComponent_ProcessOnDoorLockStateChanged Parms{};

	Parms.LockComponent = LockComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorBaseComponent.ProcessOnLockAnimPlayed
// (Final, Native, Protected)
// Parameters:
// class USHDoorAnimationsComponent*       DoorAnimComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorBaseComponent::ProcessOnLockAnimPlayed(class USHDoorAnimationsComponent* DoorAnimComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorBaseComponent", "ProcessOnLockAnimPlayed");

	Params::SHAkDoorBaseComponent_ProcessOnLockAnimPlayed Parms{};

	Parms.DoorAnimComponent = DoorAnimComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHPOVDetectorComponent.PointsAligned__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Aligned                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPOVDetectorComponent::PointsAligned__DelegateSignature(bool Aligned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPOVDetectorComponent", "PointsAligned__DelegateSignature");

	Params::SHPOVDetectorComponent_PointsAligned__DelegateSignature Parms{};

	Parms.Aligned = Aligned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPOVDetectorComponent.SetLinePoints
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Point0                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  Point1                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  Point2                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPOVDetectorComponent::SetLinePoints(const class USceneComponent* Point0, const class USceneComponent* Point1, const class USceneComponent* Point2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPOVDetectorComponent", "SetLinePoints");

	Params::SHPOVDetectorComponent_SetLinePoints Parms{};

	Parms.Point0 = Point0;
	Parms.Point1 = Point1;
	Parms.Point2 = Point2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPOVDetectorComponent.SetManyProximityPoints
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USceneComponent*>          NewPoints                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHPOVDetectorComponent::SetManyProximityPoints(const TArray<class USceneComponent*>& NewPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPOVDetectorComponent", "SetManyProximityPoints");

	Params::SHPOVDetectorComponent_SetManyProximityPoints Parms{};

	Parms.NewPoints = std::move(NewPoints);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPOVDetectorComponent.SetProximityPoints
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Point0                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  Point1                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPOVDetectorComponent::SetProximityPoints(const class USceneComponent* Point0, const class USceneComponent* Point1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPOVDetectorComponent", "SetProximityPoints");

	Params::SHPOVDetectorComponent_SetProximityPoints Parms{};

	Parms.Point0 = Point0;
	Parms.Point1 = Point1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPOVDetectorComponent.ArePointsAligned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHPOVDetectorComponent::ArePointsAligned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPOVDetectorComponent", "ArePointsAligned");

	Params::SHPOVDetectorComponent_ArePointsAligned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorFakeMovementComplete
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorFakeMovementComplete(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorFakeMovementComplete");

	Params::SHAkDoorComponent_ProcessDoorFakeMovementComplete Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorFakeMovementInterupted
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorFakeMovementInterupted(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorFakeMovementInterupted");

	Params::SHAkDoorComponent_ProcessDoorFakeMovementInterupted Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorFakeMovementStart
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorFakeMovementStart(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorFakeMovementStart");

	Params::SHAkDoorComponent_ProcessDoorFakeMovementStart Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorPhysicMovementComplete
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorPhysicMovementComplete(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorPhysicMovementComplete");

	Params::SHAkDoorComponent_ProcessDoorPhysicMovementComplete Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorPhysicMovementInterupted
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorPhysicMovementInterupted(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorPhysicMovementInterupted");

	Params::SHAkDoorComponent_ProcessDoorPhysicMovementInterupted Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorPhysicMovementStart
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorPhysicMovementStart(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorPhysicMovementStart");

	Params::SHAkDoorComponent_ProcessDoorPhysicMovementStart Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessDoorSmashOpened
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessDoorSmashOpened(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessDoorSmashOpened");

	Params::SHAkDoorComponent_ProcessDoorSmashOpened Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.ProcessOnDoorAngleChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::ProcessOnDoorAngleChanged(class USHDoorMovementComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "ProcessOnDoorAngleChanged");

	Params::SHAkDoorComponent_ProcessOnDoorAngleChanged Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.RequestBlockAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLock                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkDoorComponent::RequestBlockAudio(const bool bLock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "RequestBlockAudio");

	Params::SHAkDoorComponent_RequestBlockAudio Parms{};

	Parms.bLock = bLock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkDoorComponent.IsAudioBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAkDoorComponent::IsAudioBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkDoorComponent", "IsAudioBlocked");

	Params::SHAkDoorComponent_IsAudioBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.AddOrder
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FloorOrder                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::AddOrder(const int32 FloorOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "AddOrder");

	Params::SHElevatorEngine_AddOrder Parms{};

	Parms.FloorOrder = FloorOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorEngine.AreDoorsBlocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::AreDoorsBlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "AreDoorsBlocked");

	Params::SHElevatorEngine_AreDoorsBlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.ClearOrders
// (Final, Native, Public, BlueprintCallable)

void ASHElevatorEngine::ClearOrders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "ClearOrders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorEngine.IsInteriorReady
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsInteriorReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsInteriorReady");

	Params::SHElevatorEngine_IsInteriorReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.ProcessDoorAlphaChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ALPHA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::ProcessDoorAlphaChanged(float ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "ProcessDoorAlphaChanged");

	Params::SHElevatorEngine_ProcessDoorAlphaChanged Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHElevatorEngine.RequestDoorClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::RequestDoorClose(bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "RequestDoorClose");

	Params::SHElevatorEngine_RequestDoorClose Parms{};

	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.RequestDoorCustom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CustomOpenessAlpha                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::RequestDoorCustom(float CustomOpenessAlpha, bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "RequestDoorCustom");

	Params::SHElevatorEngine_RequestDoorCustom Parms{};

	Parms.CustomOpenessAlpha = CustomOpenessAlpha;
	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.RequestDoorOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInstant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::RequestDoorOpen(bool bInInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "RequestDoorOpen");

	Params::SHElevatorEngine_RequestDoorOpen Parms{};

	Parms.bInInstant = bInInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.SetCloseDoorsBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::SetCloseDoorsBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "SetCloseDoorsBlocked");

	Params::SHElevatorEngine_SetCloseDoorsBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorEngine.SetReceiveOrdersBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::SetReceiveOrdersBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "SetReceiveOrdersBlocked");

	Params::SHElevatorEngine_SetReceiveOrdersBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHElevatorEngine.SHElevatorEngineBaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHElevatorEngine*                ElevatorEngine                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::SHElevatorEngineBaseEvent__DelegateSignature(class ASHElevatorEngine* ElevatorEngine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "SHElevatorEngineBaseEvent__DelegateSignature");

	Params::SHElevatorEngine_SHElevatorEngineBaseEvent__DelegateSignature Parms{};

	Parms.ElevatorEngine = ElevatorEngine;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHElevatorEngine.SHElevatorEngineFloatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHElevatorEngine*                ElevatorEngine                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorEngine::SHElevatorEngineFloatEvent__DelegateSignature(class ASHElevatorEngine* ElevatorEngine, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "SHElevatorEngineFloatEvent__DelegateSignature");

	Params::SHElevatorEngine_SHElevatorEngineFloatEvent__DelegateSignature Parms{};

	Parms.ElevatorEngine = ElevatorEngine;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHElevatorEngine.TryAbortActiveOrder
// (Native, Public, BlueprintCallable)

void ASHElevatorEngine::TryAbortActiveOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "TryAbortActiveOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorEngine.GetActiveOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHElevatorOrderData             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSHElevatorOrderData ASHElevatorEngine::GetActiveOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetActiveOrder");

	Params::SHElevatorEngine_GetActiveOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.GetBackDoorsPivot
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* ASHElevatorEngine::GetBackDoorsPivot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetBackDoorsPivot");

	Params::SHElevatorEngine_GetBackDoorsPivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.GetCurrentDisplayFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHElevatorEngine::GetCurrentDisplayFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetCurrentDisplayFloor");

	Params::SHElevatorEngine_GetCurrentDisplayFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.GetCurrentFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHElevatorEngine::GetCurrentFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetCurrentFloor");

	Params::SHElevatorEngine_GetCurrentFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.GetFrontDoorsPivot
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* ASHElevatorEngine::GetFrontDoorsPivot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetFrontDoorsPivot");

	Params::SHElevatorEngine_GetFrontDoorsPivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.GetOrdersQueue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> ASHElevatorEngine::GetOrdersQueue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "GetOrdersQueue");

	Params::SHElevatorEngine_GetOrdersQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.HasActiveOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::HasActiveOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "HasActiveOrder");

	Params::SHElevatorEngine_HasActiveOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsCloseDoorsBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsCloseDoorsBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsCloseDoorsBlocked");

	Params::SHElevatorEngine_IsCloseDoorsBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsDoorClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsDoorClosed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsDoorClosed");

	Params::SHElevatorEngine_IsDoorClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsDoorOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsDoorOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsDoorOpened");

	Params::SHElevatorEngine_IsDoorOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsKeepingDoorStayOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsKeepingDoorStayOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsKeepingDoorStayOpened");

	Params::SHElevatorEngine_IsKeepingDoorStayOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsPawnInElevator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            InCheckedPawn                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsPawnInElevator(class APawn* InCheckedPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsPawnInElevator");

	Params::SHElevatorEngine_IsPawnInElevator Parms{};

	Parms.InCheckedPawn = InCheckedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.IsReceiveOrdersBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::IsReceiveOrdersBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "IsReceiveOrdersBlocked");

	Params::SHElevatorEngine_IsReceiveOrdersBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHElevatorEngine.TraceForBlockedDoor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InDoorOpenOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceSphereRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPivotWorldOffset                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHElevatorEngine::TraceForBlockedDoor(float InDoorOpenOffset, float InTraceSphereRadius, const struct FVector& InPivotWorldOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorEngine", "TraceForBlockedDoor");

	Params::SHElevatorEngine_TraceForBlockedDoor Parms{};

	Parms.InDoorOpenOffset = InDoorOpenOffset;
	Parms.InTraceSphereRadius = InTraceSphereRadius;
	Parms.InPivotWorldOffset = std::move(InPivotWorldOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkElevatorEngineComponent.PlayMoveFinishAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkElevatorEngineComponent::PlayMoveFinishAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorEngineComponent", "PlayMoveFinishAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkElevatorEngineComponent.PlayMoveStartAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkElevatorEngineComponent::PlayMoveStartAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorEngineComponent", "PlayMoveStartAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleDoorAlphaChanged
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleDoorAlphaChanged(class ASHElevatorEngine* InElevatorEnginePtr, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleDoorAlphaChanged");

	Params::SHElevatorFloorDoor_HandleDoorAlphaChanged Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleDoorCollisionInterupted
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleDoorCollisionInterupted(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleDoorCollisionInterupted");

	Params::SHElevatorFloorDoor_HandleDoorCollisionInterupted Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleDoorNewRequest
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleDoorNewRequest(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleDoorNewRequest");

	Params::SHElevatorFloorDoor_HandleDoorNewRequest Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleEngineDestroy
// (Final, Native, Protected)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleEngineDestroy(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleEngineDestroy");

	Params::SHElevatorFloorDoor_HandleEngineDestroy Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleInteract
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleInteract(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleInteract");

	Params::SHElevatorFloorDoor_HandleInteract Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleOrderCompleted
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleOrderCompleted(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleOrderCompleted");

	Params::SHElevatorFloorDoor_HandleOrderCompleted Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.HandleOrdersQueueChange
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::HandleOrdersQueueChange(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "HandleOrdersQueueChange");

	Params::SHElevatorFloorDoor_HandleOrdersQueueChange Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorFloorDoor.ProcessDoorAlphaChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ALPHA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::ProcessDoorAlphaChanged(float ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "ProcessDoorAlphaChanged");

	Params::SHElevatorFloorDoor_ProcessDoorAlphaChanged Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHElevatorFloorDoor.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorFloorDoor::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorFloorDoor", "ProcessInteractionManagerInitialized");

	Params::SHElevatorFloorDoor_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableGlassComponent.FakeBreak
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHitDir                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBreakableGlassComponent::FakeBreak(class AController* EventInstigator, const struct FVector& InHitDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableGlassComponent", "FakeBreak");

	Params::SHBreakableGlassComponent_FakeBreak Parms{};

	Parms.EventInstigator = EventInstigator;
	Parms.InHitDir = std::move(InHitDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHBreakableGlassComponent.SHBreakableGlassEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHBreakableGlassComponent*       Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBreakableGlassComponent::SHBreakableGlassEvent__DelegateSignature(class USHBreakableGlassComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableGlassComponent", "SHBreakableGlassEvent__DelegateSignature");

	Params::SHBreakableGlassComponent_SHBreakableGlassEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHBreakableGlassComponent.IsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBreakableGlassComponent::IsBroken() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableGlassComponent", "IsBroken");

	Params::SHBreakableGlassComponent_IsBroken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkElevatorFloorDoorComponent.PlayButtonClickAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  ButtonClickedLocationSceneComponent                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkElevatorFloorDoorComponent::PlayButtonClickAudio(class USceneComponent* ButtonClickedLocationSceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorFloorDoorComponent", "PlayButtonClickAudio");

	Params::SHAkElevatorFloorDoorComponent_PlayButtonClickAudio Parms{};

	Parms.ButtonClickedLocationSceneComponent = ButtonClickedLocationSceneComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkElevatorFloorDoorComponent.PlayDoorMovementFinishAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDoorOpened                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkElevatorFloorDoorComponent::PlayDoorMovementFinishAudio(bool IsDoorOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorFloorDoorComponent", "PlayDoorMovementFinishAudio");

	Params::SHAkElevatorFloorDoorComponent_PlayDoorMovementFinishAudio Parms{};

	Parms.IsDoorOpened = IsDoorOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkElevatorFloorDoorComponent.PlayDoorMovementInteruptedAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkElevatorFloorDoorComponent::PlayDoorMovementInteruptedAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorFloorDoorComponent", "PlayDoorMovementInteruptedAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkElevatorFloorDoorComponent.PlayDoorMovementStartAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkElevatorFloorDoorComponent::PlayDoorMovementStartAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorFloorDoorComponent", "PlayDoorMovementStartAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorInsidePanel.ProcessFocusableShown
// (Final, Native, Protected)

void ASHElevatorInsidePanel::ProcessFocusableShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorInsidePanel", "ProcessFocusableShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorInsidePanel.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorInsidePanel::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorInsidePanel", "ProcessInteractionManagerInitialized");

	Params::SHElevatorInsidePanel_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorInsidePanel.ProcessOrderCompleted
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorInsidePanel::ProcessOrderCompleted(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorInsidePanel", "ProcessOrderCompleted");

	Params::SHElevatorInsidePanel_ProcessOrderCompleted Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHElevatorInsidePanel.ProcessOrdersQueueChange
// (Final, Native, Protected)
// Parameters:
// class ASHElevatorEngine*                InElevatorEnginePtr                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHElevatorInsidePanel::ProcessOrdersQueueChange(class ASHElevatorEngine* InElevatorEnginePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHElevatorInsidePanel", "ProcessOrdersQueueChange");

	Params::SHElevatorInsidePanel_ProcessOrdersQueueChange Parms{};

	Parms.InElevatorEnginePtr = InElevatorEnginePtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCameraActor.GetSHCameraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHCameraComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCameraComponent* ASHCameraActor::GetSHCameraComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraActor", "GetSHCameraComponent");

	Params::SHCameraActor_GetSHCameraComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkElevatorInsidePanelComponent.PlayButtonClickAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkElevatorInsidePanelComponent::PlayButtonClickAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkElevatorInsidePanelComponent", "PlayButtonClickAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMathHelperStatics.AngleAndLengthToVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHMathHelperStatics::AngleAndLengthToVector2D(float Angle, float Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "AngleAndLengthToVector2D");

	Params::SHMathHelperStatics_AngleAndLengthToVector2D Parms{};

	Parms.Angle = Angle;
	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.AngleToVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHMathHelperStatics::AngleToVector2D(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "AngleToVector2D");

	Params::SHMathHelperStatics_AngleToVector2D Parms{};

	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.AverageOfFloatArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<float>                           FloatArray                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   AverageValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMathHelperStatics::AverageOfFloatArray(const TArray<float>& FloatArray, float* AverageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "AverageOfFloatArray");

	Params::SHMathHelperStatics_AverageOfFloatArray Parms{};

	Parms.FloatArray = std::move(FloatArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AverageValue != nullptr)
		*AverageValue = Parms.AverageValue;
}


// Function SHProto.SHMathHelperStatics.FindAngleBetweenNormals
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SignedAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::FindAngleBetweenNormals(const struct FVector& A, const struct FVector& B, bool SignedAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "FindAngleBetweenNormals");

	Params::SHMathHelperStatics_FindAngleBetweenNormals Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);
	Parms.SignedAngle = SignedAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.FindAngleBetweenVectors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          A                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          B                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SignedAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::FindAngleBetweenVectors(const struct FVector& A, const struct FVector& B, bool SignedAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "FindAngleBetweenVectors");

	Params::SHMathHelperStatics_FindAngleBetweenVectors Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);
	Parms.SignedAngle = SignedAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.HalfTimeInterp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Precision                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::HalfTimeInterp(float Current, float Target, float HalfTime, float DeltaTime, float Precision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "HalfTimeInterp");

	Params::SHMathHelperStatics_HalfTimeInterp Parms{};

	Parms.Current = Current;
	Parms.Target = Target;
	Parms.HalfTime = HalfTime;
	Parms.DeltaTime = DeltaTime;
	Parms.Precision = Precision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.HalfTimeInterpVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Current                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Target                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Precision                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHMathHelperStatics::HalfTimeInterpVector(const struct FVector& Current, const struct FVector& Target, float HalfTime, float DeltaTime, float Precision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "HalfTimeInterpVector");

	Params::SHMathHelperStatics_HalfTimeInterpVector Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.HalfTime = HalfTime;
	Parms.DeltaTime = DeltaTime;
	Parms.Precision = Precision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.HalfTimeInterpVector2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        Current                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Target                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Precision                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHMathHelperStatics::HalfTimeInterpVector2D(const struct FVector2D& Current, const struct FVector2D& Target, float HalfTime, float DeltaTime, float Precision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "HalfTimeInterpVector2D");

	Params::SHMathHelperStatics_HalfTimeInterpVector2D Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.HalfTime = HalfTime;
	Parms.DeltaTime = DeltaTime;
	Parms.Precision = Precision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.IfZero
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZeroValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::IfZero(float Value, float ZeroValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "IfZero");

	Params::SHMathHelperStatics_IfZero Parms{};

	Parms.Value = Value;
	Parms.ZeroValue = ZeroValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.MaxWithoutSign
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ValueA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::MaxWithoutSign(float ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "MaxWithoutSign");

	Params::SHMathHelperStatics_MaxWithoutSign Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.MinWithoutSign
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ValueA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::MinWithoutSign(float ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "MinWithoutSign");

	Params::SHMathHelperStatics_MinWithoutSign Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.PlaneDot
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlane                           Plane                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::PlaneDot(const struct FPlane& Plane, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "PlaneDot");

	Params::SHMathHelperStatics_PlaneDot Parms{};

	Parms.Plane = std::move(Plane);
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.SignNonZero
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZeroValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::SignNonZero(float Value, float ZeroValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "SignNonZero");

	Params::SHMathHelperStatics_SignNonZero Parms{};

	Parms.Value = Value;
	Parms.ZeroValue = ZeroValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.Vector2DToAngle
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        Vector                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZeroVectorAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMathHelperStatics::Vector2DToAngle(const struct FVector2D& Vector, float ZeroVectorAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "Vector2DToAngle");

	Params::SHMathHelperStatics_Vector2DToAngle Parms{};

	Parms.Vector = std::move(Vector);
	Parms.ZeroVectorAngle = ZeroVectorAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMathHelperStatics.Vector2DToAngleAndLength
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutLength                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Vector                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZeroVectorAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMathHelperStatics::Vector2DToAngleAndLength(float* OutAngle, float* OutLength, const struct FVector2D& Vector, float ZeroVectorAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHMathHelperStatics", "Vector2DToAngleAndLength");

	Params::SHMathHelperStatics_Vector2DToAngleAndLength Parms{};

	Parms.Vector = std::move(Vector);
	Parms.ZeroVectorAngle = ZeroVectorAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;

	if (OutLength != nullptr)
		*OutLength = Parms.OutLength;
}


// Function SHProto.SHBlenderBase.GetBlendAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHBlenderBase::GetBlendAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBlenderBase", "GetBlendAlpha");

	Params::SHBlenderBase_GetBlendAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBlenderBase.IsBlendingInEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBlenderBase::IsBlendingInEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBlenderBase", "IsBlendingInEnabled");

	Params::SHBlenderBase_IsBlendingInEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemEquipable.BlueprintAfterEquip
// (Event, Protected, BlueprintEvent)

void ASHItemEquipable::BlueprintAfterEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipable", "BlueprintAfterEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemEquipable.BlueprintBeforeUnequip
// (Event, Protected, BlueprintEvent)

void ASHItemEquipable::BlueprintBeforeUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipable", "BlueprintBeforeUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemEquipable.GetItemDataRowName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ASHItemEquipable::GetItemDataRowName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipable", "GetItemDataRowName");

	Params::SHItemEquipable_GetItemDataRowName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemEquipable.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* ASHItemEquipable::GetOwnerCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipable", "GetOwnerCharacter");

	Params::SHItemEquipable_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemEquipment.ToggleRequest
// (Final, Native, Public, BlueprintCallable)

void ASHItemEquipment::ToggleRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipment", "ToggleRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEquipment.TurnOffRequest
// (Final, Native, Public, BlueprintCallable)

void ASHItemEquipment::TurnOffRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipment", "TurnOffRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEquipment.TurnOnRequest
// (Final, Native, Public, BlueprintCallable)

void ASHItemEquipment::TurnOnRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipment", "TurnOnRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEquipment.IsTurnOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemEquipment::IsTurnOn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEquipment", "IsTurnOn");

	Params::SHItemEquipment_IsTurnOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlashlight.BeginsLightAtMonster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Monster                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::BeginsLightAtMonster(class AActor* Monster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "BeginsLightAtMonster");

	Params::SHFlashlight_BeginsLightAtMonster Parms{};

	Parms.Monster = Monster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.ClearMainLightOffsetSource
// (Final, Native, Public, BlueprintCallable)

void ASHFlashlight::ClearMainLightOffsetSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "ClearMainLightOffsetSource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.DisableLookAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InstantViewRotation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AwaitTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::DisableLookAt(bool InstantViewRotation, float AwaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "DisableLookAt");

	Params::SHFlashlight_DisableLookAt Parms{};

	Parms.InstantViewRotation = InstantViewRotation;
	Parms.AwaitTime = AwaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.EnableLookAtComponent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  NewLookAtRef                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHFlashlightLookAtSettings      InLookAtSettings                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ASHFlashlight::EnableLookAtComponent(class USceneComponent* NewLookAtRef, const struct FSHFlashlightLookAtSettings& InLookAtSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "EnableLookAtComponent");

	Params::SHFlashlight_EnableLookAtComponent Parms{};

	Parms.NewLookAtRef = NewLookAtRef;
	Parms.InLookAtSettings = std::move(InLookAtSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.EndLightAtMonster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Monster                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::EndLightAtMonster(class AActor* Monster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "EndLightAtMonster");

	Params::SHFlashlight_EndLightAtMonster Parms{};

	Parms.Monster = Monster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.OnTurnedOff
// (Event, Public, BlueprintEvent)

void ASHFlashlight::OnTurnedOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "OnTurnedOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFlashlight.OnTurnedOn
// (Event, Public, BlueprintEvent)

void ASHFlashlight::OnTurnedOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "OnTurnedOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFlashlight.PlayLightIntensityModAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      IntensityModCurve                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFlashlight::PlayLightIntensityModAnimation(class UCurveFloat* IntensityModCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "PlayLightIntensityModAnimation");

	Params::SHFlashlight_PlayLightIntensityModAnimation Parms{};

	Parms.IntensityModCurve = IntensityModCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlashlight.ProcessLightOff
// (Final, Native, Protected)

void ASHFlashlight::ProcessLightOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "ProcessLightOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.ProcessLightOn
// (Final, Native, Protected)

void ASHFlashlight::ProcessLightOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "ProcessLightOn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.SetLightIntensityModProgress
// (Final, Native, Protected)
// Parameters:
// float                                   ModValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::SetLightIntensityModProgress(float ModValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "SetLightIntensityModProgress");

	Params::SHFlashlight_SetLightIntensityModProgress Parms{};

	Parms.ModValue = ModValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.SetLightIntensityProgress
// (Final, Native, Protected)
// Parameters:
// float                                   ProgressValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::SetLightIntensityProgress(float ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "SetLightIntensityProgress");

	Params::SHFlashlight_SetLightIntensityProgress Parms{};

	Parms.ProgressValue = ProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.SetMainLightOffsetSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  NewMainLightOffsetSource                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::SetMainLightOffsetSource(class USceneComponent* NewMainLightOffsetSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "SetMainLightOffsetSource");

	Params::SHFlashlight_SetMainLightOffsetSource Parms{};

	Parms.NewMainLightOffsetSource = NewMainLightOffsetSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.UpdateDustMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         InDustMaterial                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::UpdateDustMaterial(class UMaterialInstanceDynamic* InDustMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "UpdateDustMaterial");

	Params::SHFlashlight_UpdateDustMaterial Parms{};

	Parms.InDustMaterial = InDustMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.UpdateDustNiagara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                InDustNiagara                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::UpdateDustNiagara(class UNiagaraComponent* InDustNiagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "UpdateDustNiagara");

	Params::SHFlashlight_UpdateDustNiagara Parms{};

	Parms.InDustNiagara = InDustNiagara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.UpdateLightAtMonster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Monster                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLightingAlpha                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlashlight::UpdateLightAtMonster(class AActor* Monster, float InLightingAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "UpdateLightAtMonster");

	Params::SHFlashlight_UpdateLightAtMonster Parms{};

	Parms.Monster = Monster;
	Parms.InLightingAlpha = InLightingAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlight.GetIntensityAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHFlashlight::GetIntensityAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlight", "GetIntensityAlpha");

	Params::SHFlashlight_GetIntensityAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBuoyancyMimicComponent.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InManagedComp                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBuoyancyMimicComponent::Initialize(class USceneComponent* InManagedComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBuoyancyMimicComponent", "Initialize");

	Params::SHBuoyancyMimicComponent_Initialize Parms{};

	Parms.InManagedComp = InManagedComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHookedMeatBase.ApplyDamageToBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InBoneName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitFromDirection                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          InDamageTypeClass                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHHookedMeatBase::ApplyDamageToBone(const class FName& InBoneName, const struct FVector& HitFromDirection, const TSubclassOf<class UDamageType>& InDamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "ApplyDamageToBone");

	Params::SHHookedMeatBase_ApplyDamageToBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.HitFromDirection = std::move(HitFromDirection);
	Parms.InDamageTypeClass = InDamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.BreakAllBones
// (Final, Native, Public, BlueprintCallable)

void ASHHookedMeatBase::BreakAllBones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "BreakAllBones");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHookedMeatBase.GetBoneDefaultHealth
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             InBoneName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHHookedMeatBase::GetBoneDefaultHealth(const class FName& InBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetBoneDefaultHealth");

	Params::SHHookedMeatBase_GetBoneDefaultHealth Parms{};

	Parms.InBoneName = InBoneName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.GetDamageValueFromTypeClass
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UDamageType>          InDamageTypeClass                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHHookedMeatBase::GetDamageValueFromTypeClass(TSubclassOf<class UDamageType> InDamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetDamageValueFromTypeClass");

	Params::SHHookedMeatBase_GetDamageValueFromTypeClass Parms{};

	Parms.InDamageTypeClass = InDamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.GetForceValueFromTypeClass
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UDamageType>          InDamageTypeClass                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHHookedMeatBase::GetForceValueFromTypeClass(TSubclassOf<class UDamageType> InDamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetForceValueFromTypeClass");

	Params::SHHookedMeatBase_GetForceValueFromTypeClass Parms{};

	Parms.InDamageTypeClass = InDamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.OnMeatPush
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGoingForward                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHHookedMeatBase::OnMeatPush(bool IsGoingForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "OnMeatPush");

	Params::SHHookedMeatBase_OnMeatPush Parms{};

	Parms.IsGoingForward = IsGoingForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHHookedMeatBase.GetDesiredEddieMeatPushPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           EddieActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHHookedMeatBase::GetDesiredEddieMeatPushPosition(const class AActor* EddieActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetDesiredEddieMeatPushPosition");

	Params::SHHookedMeatBase_GetDesiredEddieMeatPushPosition Parms{};

	Parms.EddieActor = EddieActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.GetEddieCoverPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHHookedMeatBase::GetEddieCoverPosition(const class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetEddieCoverPosition");

	Params::SHHookedMeatBase_GetEddieCoverPosition Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.GetExistingChildBones
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InParentBoneName                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> ASHHookedMeatBase::GetExistingChildBones(const class FName& InParentBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "GetExistingChildBones");

	Params::SHHookedMeatBase_GetExistingChildBones Parms{};

	Parms.InParentBoneName = InParentBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.IsFullyDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHHookedMeatBase::IsFullyDestroyed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "IsFullyDestroyed");

	Params::SHHookedMeatBase_IsFullyDestroyed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHookedMeatBase.ShouldPushLeft
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          AttackPosition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHHookedMeatBase::ShouldPushLeft(const class AActor* Target, const struct FVector& AttackPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHookedMeatBase", "ShouldPushLeft");

	Params::SHHookedMeatBase_ShouldPushLeft Parms{};

	Parms.Target = Target;
	Parms.AttackPosition = std::move(AttackPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkHookedMeatComponent.OnSkeletalComponentHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHAkHookedMeatComponent::OnSkeletalComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkHookedMeatComponent", "OnSkeletalComponentHit");

	Params::SHAkHookedMeatComponent_OnSkeletalComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkHookedMeatComponent.PlayBurstAudioEvent
// (Final, Native, Public, BlueprintCallable)

void USHAkHookedMeatComponent::PlayBurstAudioEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkHookedMeatComponent", "PlayBurstAudioEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkHookedMeatComponent.PlaySwingAudio
// (Final, Native, Public, BlueprintCallable)

void USHAkHookedMeatComponent::PlaySwingAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkHookedMeatComponent", "PlaySwingAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkItemWeaponBaseAudioComponent.BlueprintAfterEquip
// (Event, Protected, BlueprintEvent)

void USHAkItemWeaponBaseAudioComponent::BlueprintAfterEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkItemWeaponBaseAudioComponent", "BlueprintAfterEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHAkItemWeaponBaseAudioComponent.BlueprintBeforeUnequip
// (Event, Protected, BlueprintEvent)

void USHAkItemWeaponBaseAudioComponent::BlueprintBeforeUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkItemWeaponBaseAudioComponent", "BlueprintBeforeUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHCharacterImpactInteraction.TryStartInteraction
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitEvent                        HitData                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ISHCharacterImpactInteraction::TryStartInteraction(const struct FHitEvent& HitData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterImpactInteraction", "TryStartInteraction");

	Params::SHCharacterImpactInteraction_TryStartInteraction Parms{};

	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAkItemWeaponRangedAudioComponent.ProcessOwnerCharacterCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkItemWeaponRangedAudioComponent::ProcessOwnerCharacterCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkItemWeaponRangedAudioComponent", "ProcessOwnerCharacterCombatInputModeChanged");

	Params::SHAkItemWeaponRangedAudioComponent_ProcessOwnerCharacterCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCameraFOVBlender.GetAssignedValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCameraFOVBlender::GetAssignedValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraFOVBlender", "GetAssignedValue");

	Params::SHCameraFOVBlender_GetAssignedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkMusicComponent.ReleaseRequestedMusicSwitch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkMusicComponent::ReleaseRequestedMusicSwitch(class UObject* InContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkMusicComponent", "ReleaseRequestedMusicSwitch");

	Params::SHAkMusicComponent_ReleaseRequestedMusicSwitch Parms{};

	Parms.InContext = InContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkMusicComponent.RequestMusicSwitch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InContext                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAkSwitchValue*                   InSwitch                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkMusicComponent::RequestMusicSwitch(class UObject* InContext, class UAkSwitchValue* InSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkMusicComponent", "RequestMusicSwitch");

	Params::SHAkMusicComponent_RequestMusicSwitch Parms{};

	Parms.InContext = InContext;
	Parms.InSwitch = InSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkMusicComponent.SHDebug_Character_Music_DrawDebug
// (Final, Exec, Native, Public)

void USHAkMusicComponent::SHDebug_Character_Music_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkMusicComponent", "SHDebug_Character_Music_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkMusicComponent.SHDebug_Character_Music_StopMusic
// (Final, Exec, Native, Public)

void USHAkMusicComponent::SHDebug_Character_Music_StopMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkMusicComponent", "SHDebug_Character_Music_StopMusic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkMusicComponent.SHDebug_Character_Music_ValuesDebug
// (Final, Exec, Native, Public)

void USHAkMusicComponent::SHDebug_Character_Music_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkMusicComponent", "SHDebug_Character_Music_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBloodPuddleSubcomp.BloodPuddleSpawned
// (Event, Protected, BlueprintEvent)

void USHFXBloodPuddleSubcomp::BloodPuddleSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "BloodPuddleSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFXBloodPuddleSubcomp.ProcessOwnerDamage
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ShotFromDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXBloodPuddleSubcomp::ProcessOwnerDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "ProcessOwnerDamage");

	Params::SHFXBloodPuddleSubcomp_ProcessOwnerDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.DamageType = DamageType;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBloodPuddleSubcomp.ProcessOwnerDead
// (Final, Native, Protected)

void USHFXBloodPuddleSubcomp::ProcessOwnerDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "ProcessOwnerDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBloodPuddleSubcomp.ProcessOwnerRevive
// (Final, Native, Protected)

void USHFXBloodPuddleSubcomp::ProcessOwnerRevive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "ProcessOwnerRevive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBloodPuddleSubcomp.SetBloodPuddleBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXBloodPuddleSubcomp::SetBloodPuddleBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "SetBloodPuddleBlocked");

	Params::SHFXBloodPuddleSubcomp_SetBloodPuddleBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBloodPuddleSubcomp.GetCurrentBloodPuddle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHBloodPuddle*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHBloodPuddle* USHFXBloodPuddleSubcomp::GetCurrentBloodPuddle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "GetCurrentBloodPuddle");

	Params::SHFXBloodPuddleSubcomp_GetCurrentBloodPuddle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXBloodPuddleSubcomp.IsBloodPuddleBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXBloodPuddleSubcomp::IsBloodPuddleBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "IsBloodPuddleBlocked");

	Params::SHFXBloodPuddleSubcomp_IsBloodPuddleBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXBloodPuddleSubcomp.IsBloodPuddleBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXBloodPuddleSubcomp::IsBloodPuddleBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBloodPuddleSubcomp", "IsBloodPuddleBlockedBy");

	Params::SHFXBloodPuddleSubcomp_IsBloodPuddleBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.SetRainingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRainManagerComponent::SetRainingBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "SetRainingBlocked");

	Params::SHRainManagerComponent_SetRainingBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRainManagerComponent.SetRainSplashesBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRainManagerComponent::SetRainSplashesBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "SetRainSplashesBlocked");

	Params::SHRainManagerComponent_SetRainSplashesBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRainManagerComponent.GetEncompassedRainVolume
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHGameplayRainVolume*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHGameplayRainVolume* USHRainManagerComponent::GetEncompassedRainVolume(const struct FVector& InLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "GetEncompassedRainVolume");

	Params::SHRainManagerComponent_GetEncompassedRainVolume Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.GetRegisteredRainVolumeCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHRainManagerComponent::GetRegisteredRainVolumeCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "GetRegisteredRainVolumeCount");

	Params::SHRainManagerComponent_GetRegisteredRainVolumeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.IsRainingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRainManagerComponent::IsRainingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "IsRainingBlocked");

	Params::SHRainManagerComponent_IsRainingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.IsRainingBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRainManagerComponent::IsRainingBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "IsRainingBlockedBy");

	Params::SHRainManagerComponent_IsRainingBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.IsRainSplashesBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRainManagerComponent::IsRainSplashesBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "IsRainSplashesBlocked");

	Params::SHRainManagerComponent_IsRainSplashesBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRainManagerComponent.IsRainSplashesBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRainManagerComponent::IsRainSplashesBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRainManagerComponent", "IsRainSplashesBlockedBy");

	Params::SHRainManagerComponent_IsRainSplashesBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAdaptiveTriggersManager.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAdaptiveTriggersManager::SetEnabled(bool InEnable, class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAdaptiveTriggersManager", "SetEnabled");

	Params::SHCharacterPlayAdaptiveTriggersManager_SetEnabled Parms{};

	Parms.InEnable = InEnable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAdaptiveTriggersManager.SHDebug_Character_Controller_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayAdaptiveTriggersManager::SHDebug_Character_Controller_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAdaptiveTriggersManager", "SHDebug_Character_Controller_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAdaptiveTriggersManager.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayAdaptiveTriggersManager::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAdaptiveTriggersManager", "IsEnabled");

	Params::SHCharacterPlayAdaptiveTriggersManager_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAkSlidingDoorComponent.ProcessOnLockedAnimPlayedNative
// (Final, Native, Protected)
// Parameters:
// class USHSlidingDoorAnimationsComponent*SlidingDoorAnimComponent                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkSlidingDoorComponent::ProcessOnLockedAnimPlayedNative(class USHSlidingDoorAnimationsComponent* SlidingDoorAnimComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkSlidingDoorComponent", "ProcessOnLockedAnimPlayedNative");

	Params::SHAkSlidingDoorComponent_ProcessOnLockedAnimPlayedNative Parms{};

	Parms.SlidingDoorAnimComponent = SlidingDoorAnimComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAkSlidingDoorComponent.ProcessOnOpenAnimPlayedNative
// (Final, Native, Protected)
// Parameters:
// class USHSlidingDoorAnimationsComponent*SlidingDoorAnimComponent                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAkSlidingDoorComponent::ProcessOnOpenAnimPlayedNative(class USHSlidingDoorAnimationsComponent* SlidingDoorAnimComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAkSlidingDoorComponent", "ProcessOnOpenAnimPlayedNative");

	Params::SHAkSlidingDoorComponent_ProcessOnOpenAnimPlayedNative Parms{};

	Parms.SlidingDoorAnimComponent = SlidingDoorAnimComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTutorialsComponent.ProcessTutorialWidgetHideEvent
// (Final, Native, Protected)

void USHCharacterPlayTutorialsComponent::ProcessTutorialWidgetHideEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTutorialsComponent", "ProcessTutorialWidgetHideEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTutorialsComponent.SHDebug_Character_Tutorials_RequestShowTutorial
// (Final, Exec, Native, Protected)
// Parameters:
// int32                                   TutorialEnumAsInt                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayTutorialsComponent::SHDebug_Character_Tutorials_RequestShowTutorial(int32 TutorialEnumAsInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTutorialsComponent", "SHDebug_Character_Tutorials_RequestShowTutorial");

	Params::SHCharacterPlayTutorialsComponent_SHDebug_Character_Tutorials_RequestShowTutorial Parms{};

	Parms.TutorialEnumAsInt = TutorialEnumAsInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTutorialsComponent.SHDebug_Character_Tutorials_ResetRegisterActions
// (Final, Exec, Native, Protected)

void USHCharacterPlayTutorialsComponent::SHDebug_Character_Tutorials_ResetRegisterActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTutorialsComponent", "SHDebug_Character_Tutorials_ResetRegisterActions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTutorialsComponent.SHDebug_Character_Tutorials_ValuesDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayTutorialsComponent::SHDebug_Character_Tutorials_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTutorialsComponent", "SHDebug_Character_Tutorials_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTutorialsComponent.IsTutorialActionRegistered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHGameplayTutorialEnum                 InTutorialEnum                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayTutorialsComponent::IsTutorialActionRegistered(const ESHGameplayTutorialEnum InTutorialEnum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTutorialsComponent", "IsTutorialActionRegistered");

	Params::SHCharacterPlayTutorialsComponent_IsTutorialActionRegistered Parms{};

	Parms.InTutorialEnum = InTutorialEnum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.ClearCustomCameraData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Instant                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlaySpringArmComponent::ClearCustomCameraData(const class UObject* Object, const bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "ClearCustomCameraData");

	Params::SHCharacterPlaySpringArmComponent_ClearCustomCameraData Parms{};

	Parms.Object = Object;
	Parms.Instant = Instant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.ReneableCustomCameraData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InCustomCameraName                                     (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlaySpringArmComponent::ReneableCustomCameraData(const class UObject* Object, const class FString& InCustomCameraName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "ReneableCustomCameraData");

	Params::SHCharacterPlaySpringArmComponent_ReneableCustomCameraData Parms{};

	Parms.Object = Object;
	Parms.InCustomCameraName = std::move(InCustomCameraName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.RequestRefreshState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlaySpringArmComponent::RequestRefreshState(const class UObject* Requester)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "RequestRefreshState");

	Params::SHCharacterPlaySpringArmComponent_RequestRefreshState Parms{};

	Parms.Requester = Requester;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.SetCustomCameraData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InCustomCameraName                                     (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHCameraDataStruct              InCustomCameraData                                     (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSHCameraDataStruct              InCustomCollisionData                                  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void USHCharacterPlaySpringArmComponent::SetCustomCameraData(const class UObject* Object, const class FString& InCustomCameraName, const struct FSHCameraDataStruct& InCustomCameraData, const struct FSHCameraDataStruct& InCustomCollisionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "SetCustomCameraData");

	Params::SHCharacterPlaySpringArmComponent_SetCustomCameraData Parms{};

	Parms.Object = Object;
	Parms.InCustomCameraName = std::move(InCustomCameraName);
	Parms.InCustomCameraData = std::move(InCustomCameraData);
	Parms.InCustomCollisionData = std::move(InCustomCollisionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.SHDebug_Character_Camera_BlendsDebug
// (Final, Exec, Native, Public)

void USHCharacterPlaySpringArmComponent::SHDebug_Character_Camera_BlendsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "SHDebug_Character_Camera_BlendsDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.SHDebug_Character_Camera_ContinousReadData
// (Final, Exec, Native, Public)

void USHCharacterPlaySpringArmComponent::SHDebug_Character_Camera_ContinousReadData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "SHDebug_Character_Camera_ContinousReadData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.SHDebug_Character_Camera_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlaySpringArmComponent::SHDebug_Character_Camera_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "SHDebug_Character_Camera_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.SHDebug_Character_Camera_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlaySpringArmComponent::SHDebug_Character_Camera_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "SHDebug_Character_Camera_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlaySpringArmComponent.GetCustomCameraBlendAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlaySpringArmComponent::GetCustomCameraBlendAlpha(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlaySpringArmComponent", "GetCustomCameraBlendAlpha");

	Params::SHCharacterPlaySpringArmComponent_GetCustomCameraBlendAlpha Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValve.ProcessAnimInstBeginFinishInteraction
// (Final, Native, Protected)
// Parameters:
// class USHValveAnimInstance*             AnimInstPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessAnimInstBeginFinishInteraction(class USHValveAnimInstance* AnimInstPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessAnimInstBeginFinishInteraction");

	Params::SHValve_ProcessAnimInstBeginFinishInteraction Parms{};

	Parms.AnimInstPtr = AnimInstPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessAnimInstChangedProgressPhase
// (Final, Native, Protected)
// Parameters:
// class USHValveAnimInstance*             AnimInstPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPhaseNumber                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasStarted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessAnimInstChangedProgressPhase(class USHValveAnimInstance* AnimInstPtr, int32 InPhaseNumber, bool bHasStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessAnimInstChangedProgressPhase");

	Params::SHValve_ProcessAnimInstChangedProgressPhase Parms{};

	Parms.AnimInstPtr = AnimInstPtr;
	Parms.InPhaseNumber = InPhaseNumber;
	Parms.bHasStarted = bHasStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessAnimInstFinishedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHValveAnimInstance*             AnimInstPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessAnimInstFinishedInteraction(class USHValveAnimInstance* AnimInstPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessAnimInstFinishedInteraction");

	Params::SHValve_ProcessAnimInstFinishedInteraction Parms{};

	Parms.AnimInstPtr = AnimInstPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessAnimInstStartedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHValveAnimInstance*             AnimInstPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessAnimInstStartedInteraction(class USHValveAnimInstance* AnimInstPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessAnimInstStartedInteraction");

	Params::SHValve_ProcessAnimInstStartedInteraction Parms{};

	Parms.AnimInstPtr = AnimInstPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessFocusableInputActionEvent
// (Final, Native, Protected)
// Parameters:
// ESHFocusableInputActionTypeEnum         InputActionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KeyValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessFocusableInputActionEvent(ESHFocusableInputActionTypeEnum InputActionType, float KeyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessFocusableInputActionEvent");

	Params::SHValve_ProcessFocusableInputActionEvent Parms{};

	Parms.InputActionType = InputActionType;
	Parms.KeyValue = KeyValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessInteractingCharacterCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessInteractingCharacterCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessInteractingCharacterCombatInputModeChanged");

	Params::SHValve_ProcessInteractingCharacterCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessInteractingCharacterReceiveDamage
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessInteractingCharacterReceiveDamage(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessInteractingCharacterReceiveDamage");

	Params::SHValve_ProcessInteractingCharacterReceiveDamage Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessInteractionGenericGrabbed
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessInteractionGenericGrabbed(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessInteractionGenericGrabbed");

	Params::SHValve_ProcessInteractionGenericGrabbed Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessInteractionManagerInitialized");

	Params::SHValve_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessMoveCharacterToSpotFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessMoveCharacterToSpotFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessMoveCharacterToSpotFinished");

	Params::SHValve_ProcessMoveCharacterToSpotFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHValve::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessProximityBeginOverlap");

	Params::SHValve_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValve::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "ProcessProximityEndOverlap");

	Params::SHValve_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.RequestAbortInteraction
// (Final, Native, Public, BlueprintCallable)

void ASHValve::RequestAbortInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "RequestAbortInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValve.GetCurrentPhaseNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHValve::GetCurrentPhaseNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "GetCurrentPhaseNumber");

	Params::SHValve_GetCurrentPhaseNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValve.GetTotalRotatedAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHValve::GetTotalRotatedAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "GetTotalRotatedAngle");

	Params::SHValve_GetTotalRotatedAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValve.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHValve::IsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "IsCompleted");

	Params::SHValve_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValve.IsInInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHValve::IsInInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValve", "IsInInteraction");

	Params::SHValve_IsInInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAlreadySeenEndingsEndingFactor.SHDebug_Character_Endings_Factors_AlreadySeenEndings_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAlreadySeenEndingsEndingFactor::SHDebug_Character_Endings_Factors_AlreadySeenEndings_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAlreadySeenEndingsEndingFactor", "SHDebug_Character_Endings_Factors_AlreadySeenEndings_SetDebugValue");

	Params::SHAlreadySeenEndingsEndingFactor_SHDebug_Character_Endings_Factors_AlreadySeenEndings_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.MapRangeClampedWithZeroInTheMidle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRangeA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRangeB                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutRangeA                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutRangeB                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFirearmAimOffsetAnimInstance::MapRangeClampedWithZeroInTheMidle(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHFirearmAimOffsetAnimInstance", "MapRangeClampedWithZeroInTheMidle");

	Params::SHFirearmAimOffsetAnimInstance_MapRangeClampedWithZeroInTheMidle Parms{};

	Parms.Value = Value;
	Parms.InRangeA = InRangeA;
	Parms.InRangeB = InRangeB;
	Parms.OutRangeA = OutRangeA;
	Parms.OutRangeB = OutRangeB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.InterruptEquipToAim
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFirearmAimOffsetAnimInstance::InterruptEquipToAim(float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFirearmAimOffsetAnimInstance", "InterruptEquipToAim");

	Params::SHFirearmAimOffsetAnimInstance_InterruptEquipToAim Parms{};

	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.GetWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemWeapon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemWeapon* USHFirearmAimOffsetAnimInstance::GetWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFirearmAimOffsetAnimInstance", "GetWeapon");

	Params::SHFirearmAimOffsetAnimInstance_GetWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.IsAimOffsetEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFirearmAimOffsetAnimInstance::IsAimOffsetEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFirearmAimOffsetAnimInstance", "IsAimOffsetEnabled");

	Params::SHFirearmAimOffsetAnimInstance_IsAimOffsetEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.LongWeaponAimObstacleRangeCheck
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLongWeaponAimObstacleCheckPayloadPayload                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFirearmAimOffsetAnimInstance::LongWeaponAimObstacleRangeCheck(const struct FLongWeaponAimObstacleCheckPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFirearmAimOffsetAnimInstance", "LongWeaponAimObstacleRangeCheck");

	Params::SHFirearmAimOffsetAnimInstance_LongWeaponAimObstacleRangeCheck Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFirearmAimOffsetAnimInstance.LongWeaponAimObstacleSingleCheck
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLongWeaponAimObstacleCheckPayloadPayload                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFirearmAimOffsetAnimInstance::LongWeaponAimObstacleSingleCheck(const struct FLongWeaponAimObstacleCheckPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFirearmAimOffsetAnimInstance", "LongWeaponAimObstacleSingleCheck");

	Params::SHFirearmAimOffsetAnimInstance_LongWeaponAimObstacleSingleCheck Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.DrawMuzzleAimTrace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAimOffsetMatchingTool::DrawMuzzleAimTrace(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "DrawMuzzleAimTrace");

	Params::SHCharacterPlayAimOffsetMatchingTool_DrawMuzzleAimTrace Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.FakeAimInput
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Pressed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAimOffsetMatchingTool::FakeAimInput(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "FakeAimInput");

	Params::SHCharacterPlayAimOffsetMatchingTool_FakeAimInput Parms{};

	Parms.Pressed = Pressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.FakeRotationInput
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAimOffsetMatchingTool::FakeRotationInput(float X, float Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "FakeRotationInput");

	Params::SHCharacterPlayAimOffsetMatchingTool_FakeRotationInput Parms{};

	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.GetCameraPitch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayAimOffsetMatchingTool::GetCameraPitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "GetCameraPitch");

	Params::SHCharacterPlayAimOffsetMatchingTool_GetCameraPitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.GetCrosshairAimLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayAimOffsetMatchingTool::GetCrosshairAimLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "GetCrosshairAimLocation");

	Params::SHCharacterPlayAimOffsetMatchingTool_GetCrosshairAimLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAimOffsetMatchingTool.GetMuzzleAimLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayAimOffsetMatchingTool::GetMuzzleAimLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAimOffsetMatchingTool", "GetMuzzleAimLocation");

	Params::SHCharacterPlayAimOffsetMatchingTool_GetMuzzleAimLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXNiagaraDecalComponent.SetInitialErode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InitialErode                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXNiagaraDecalComponent::SetInitialErode(const float InitialErode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXNiagaraDecalComponent", "SetInitialErode");

	Params::SHFXNiagaraDecalComponent_SetInitialErode Parms{};

	Parms.InitialErode = InitialErode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadderAnimInstance.BroadcastEndOfTraversalFinish
// (Final, Native, Protected, BlueprintCallable)

void USHTraversalLadderAnimInstance::BroadcastEndOfTraversalFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadderAnimInstance", "BroadcastEndOfTraversalFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalLadderAnimInstance.BroadcastEndOfTraversalStart
// (Final, Native, Protected, BlueprintCallable)

void USHTraversalLadderAnimInstance::BroadcastEndOfTraversalStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalLadderAnimInstance", "BroadcastEndOfTraversalStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAngelasKnifeInvestigationEndingFactor.SHDebug_Character_Endings_AngelasKnifeInvestigationEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAngelasKnifeInvestigationEndingFactor::SHDebug_Character_Endings_AngelasKnifeInvestigationEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAngelasKnifeInvestigationEndingFactor", "SHDebug_Character_Endings_AngelasKnifeInvestigationEndingFactor_SetDebugValue");

	Params::SHAngelasKnifeInvestigationEndingFactor_SHDebug_Character_Endings_AngelasKnifeInvestigationEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDeathPlayer.HandleCameraAnimBlendOut
// (Final, Native, Protected)

void ASHDeathPlayer::HandleCameraAnimBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDeathPlayer", "HandleCameraAnimBlendOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDeathPlayer.HandleCameraAnimStopped
// (Final, Native, Protected)

void ASHDeathPlayer::HandleCameraAnimStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDeathPlayer", "HandleCameraAnimStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimActionExecutiveBase.Abort
// (Final, Native, Public, BlueprintCallable)

void USHAnimActionExecutiveBase::Abort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "Abort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHAnimActionExecutiveBase.AnimActionExeBaseBlueprintEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHAnimActionExecutiveBase*       AnimActionExePtr                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimActionExecutiveBase::AnimActionExeBaseBlueprintEvent__DelegateSignature(class USHAnimActionExecutiveBase* AnimActionExePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "AnimActionExeBaseBlueprintEvent__DelegateSignature");

	Params::SHAnimActionExecutiveBase_AnimActionExeBaseBlueprintEvent__DelegateSignature Parms{};

	Parms.AnimActionExePtr = AnimActionExePtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAnimActionExecutiveBase.Finish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimActionExecutiveBase::Finish(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "Finish");

	Params::SHAnimActionExecutiveBase_Finish Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimActionExecutiveBase.OnBreak
// (Event, Protected, BlueprintEvent)

void USHAnimActionExecutiveBase::OnBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "OnBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHAnimActionExecutiveBase.OnFinish
// (Event, Protected, BlueprintEvent)

void USHAnimActionExecutiveBase::OnFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "OnFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHAnimActionExecutiveBase.OnStart
// (Event, Protected, BlueprintEvent)

void USHAnimActionExecutiveBase::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHAnimActionExecutiveBase.OnTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimActionExecutiveBase::OnTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "OnTick");

	Params::SHAnimActionExecutiveBase_OnTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAnimActionExecutiveBase.Start
// (Final, Native, Public, BlueprintCallable)

void USHAnimActionExecutiveBase::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimActionExecutiveBase.GetContextObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* USHAnimActionExecutiveBase::GetContextObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "GetContextObject");

	Params::SHAnimActionExecutiveBase_GetContextObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimActionExecutiveBase.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHAnimActionExecutiveBase::GetOwnerCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "GetOwnerCharacter");

	Params::SHAnimActionExecutiveBase_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimActionExecutiveBase.GetSoftAssets
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UObject>> USHAnimActionExecutiveBase::GetSoftAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutiveBase", "GetSoftAssets");

	Params::SHAnimActionExecutiveBase_GetSoftAssets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimActionExecutive.GetAnimPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHAnimMontagePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHAnimMontagePlayer* USHAnimActionExecutive::GetAnimPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimActionExecutive", "GetAnimPlayer");

	Params::SHAnimActionExecutive_GetAnimPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayBrainComponent.ClearControlRotationInterpSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayBrainComponent::ClearControlRotationInterpSpeed(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "ClearControlRotationInterpSpeed");

	Params::SHCharacterPlayBrainComponent_ClearControlRotationInterpSpeed Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SetControlRotationInterpSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayBrainComponent::SetControlRotationInterpSpeed(const float Speed, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SetControlRotationInterpSpeed");

	Params::SHCharacterPlayBrainComponent_SetControlRotationInterpSpeed Parms{};

	Parms.Speed = Speed;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SetGameplayMenuBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayBrainComponent::SetGameplayMenuBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SetGameplayMenuBlocked");

	Params::SHCharacterPlayBrainComponent_SetGameplayMenuBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SetUpdateControlRotationBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayBrainComponent::SetUpdateControlRotationBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SetUpdateControlRotationBlocked");

	Params::SHCharacterPlayBrainComponent_SetUpdateControlRotationBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SetUpdateControlRotationWhenIsNotMoving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Update                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayBrainComponent::SetUpdateControlRotationWhenIsNotMoving(const bool Update, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SetUpdateControlRotationWhenIsNotMoving");

	Params::SHCharacterPlayBrainComponent_SetUpdateControlRotationWhenIsNotMoving Parms{};

	Parms.Update = Update;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SHDebug_Character_Input_FreezeControlRotation
// (Final, Exec, Native, Protected)

void USHCharacterPlayBrainComponent::SHDebug_Character_Input_FreezeControlRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SHDebug_Character_Input_FreezeControlRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.SHDebug_Character_Input_ValuesDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayBrainComponent::SHDebug_Character_Input_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "SHDebug_Character_Input_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBrainComponent.GetUpdateControlRotationWhenIsNotMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayBrainComponent::GetUpdateControlRotationWhenIsNotMoving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "GetUpdateControlRotationWhenIsNotMoving");

	Params::SHCharacterPlayBrainComponent_GetUpdateControlRotationWhenIsNotMoving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayBrainComponent.IsGameplayMenuBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayBrainComponent::IsGameplayMenuBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "IsGameplayMenuBlocked");

	Params::SHCharacterPlayBrainComponent_IsGameplayMenuBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayBrainComponent.IsUpdateControlRotationBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayBrainComponent::IsUpdateControlRotationBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBrainComponent", "IsUpdateControlRotationBlocked");

	Params::SHCharacterPlayBrainComponent_IsUpdateControlRotationBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemUseExecutive.ApplyItem
// (Event, Protected, BlueprintEvent)

void USHItemUseExecutive::ApplyItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "ApplyItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemUseExecutive.Finish
// (Native, Protected, BlueprintCallable)
// Parameters:
// ESHUseFinishType                        FinishType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemUseExecutive::Finish(ESHUseFinishType FinishType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "Finish");

	Params::SHItemUseExecutive_Finish Parms{};

	Parms.FinishType = FinishType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemUseExecutive.OnItemSpawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemBase*                      ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemUseExecutive::OnItemSpawn(class ASHItemBase* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "OnItemSpawn");

	Params::SHItemUseExecutive_OnItemSpawn Parms{};

	Parms.ItemPtr = ItemPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemUseExecutive.OnUse
// (Event, Protected, BlueprintEvent)

void USHItemUseExecutive::OnUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "OnUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemUseExecutive.PreItemDespawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASHItemBase*                      ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemUseExecutive::PreItemDespawn(class ASHItemBase* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "PreItemDespawn");

	Params::SHItemUseExecutive_PreItemDespawn Parms{};

	Parms.ItemPtr = ItemPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemUseExecutive.UseBreak
// (Event, Protected, BlueprintEvent)

void USHItemUseExecutive::UseBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "UseBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemUseExecutive.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ForIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemBase* USHItemUseExecutive::GetItem(int32 ForIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "GetItem");

	Params::SHItemUseExecutive_GetItem Parms{};

	Parms.ForIndex = ForIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemUseExecutive.GetItemContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName USHItemUseExecutive::GetItemContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "GetItemContext");

	Params::SHItemUseExecutive_GetItemContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemUseExecutive.GetItemData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSHItemDataStruct          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FSHItemDataStruct USHItemUseExecutive::GetItemData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "GetItemData");

	Params::SHItemUseExecutive_GetItemData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemUseExecutive.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHItemUseExecutive::GetOwnerCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "GetOwnerCharacter");

	Params::SHItemUseExecutive_GetOwnerCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemUseExecutive.WasBreakRequested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemUseExecutive::WasBreakRequested() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemUseExecutive", "WasBreakRequested");

	Params::SHItemUseExecutive_WasBreakRequested Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimatedItemUseExecutive.ProcessAnimationEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimatedItemUseExecutive::ProcessAnimationEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimatedItemUseExecutive", "ProcessAnimationEnd");

	Params::SHAnimatedItemUseExecutive_ProcessAnimationEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAnimActionExe.ProcessCharacterCombatInputModeChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAnimActionExe::ProcessCharacterCombatInputModeChangedEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimActionExe", "ProcessCharacterCombatInputModeChangedEvent");

	Params::SHCharacterPlayAnimActionExe_ProcessCharacterCombatInputModeChangedEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAnimActionExe.ProcessCharacterReceivedHitEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAnimActionExe::ProcessCharacterReceivedHitEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimActionExe", "ProcessCharacterReceivedHitEvent");

	Params::SHCharacterPlayAnimActionExe_ProcessCharacterReceivedHitEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXPukeExplosionSubcomp.OnPukeExplosion
// (Event, Public, BlueprintEvent)

void USHFXPukeExplosionSubcomp::OnPukeExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukeExplosionSubcomp", "OnPukeExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFXPukeExplosionSubcomp.StartPukeExplosion
// (Final, Native, Public, BlueprintCallable)

void USHFXPukeExplosionSubcomp::StartPukeExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukeExplosionSubcomp", "StartPukeExplosion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimationStatics.FindAveragePlayTimeOfBlendSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimationStatics::FindAveragePlayTimeOfBlendSpace(class UBlendSpace* InBlendSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "FindAveragePlayTimeOfBlendSpace");

	Params::SHAnimationStatics_FindAveragePlayTimeOfBlendSpace Parms{};

	Parms.InBlendSpace = InBlendSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.FindMaximumPlayTimeOfBlendSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimationStatics::FindMaximumPlayTimeOfBlendSpace(class UBlendSpace* InBlendSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "FindMaximumPlayTimeOfBlendSpace");

	Params::SHAnimationStatics_FindMaximumPlayTimeOfBlendSpace Parms{};

	Parms.InBlendSpace = InBlendSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.FindMinimumPlayTimeOfBlendSpace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimationStatics::FindMinimumPlayTimeOfBlendSpace(class UBlendSpace* InBlendSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "FindMinimumPlayTimeOfBlendSpace");

	Params::SHAnimationStatics_FindMinimumPlayTimeOfBlendSpace Parms{};

	Parms.InBlendSpace = InBlendSpace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.FindPlayTimeOfBlendSpaceForInput
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InInput                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimationStatics::FindPlayTimeOfBlendSpaceForInput(class UBlendSpace* InBlendSpace, const struct FVector& InInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "FindPlayTimeOfBlendSpaceForInput");

	Params::SHAnimationStatics_FindPlayTimeOfBlendSpaceForInput Parms{};

	Parms.InBlendSpace = InBlendSpace;
	Parms.InInput = std::move(InInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.HasActiveRotateInPlaceCurve
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*                    InAnimInstance                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimationStatics::HasActiveRotateInPlaceCurve(class UAnimInstance* InAnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "HasActiveRotateInPlaceCurve");

	Params::SHAnimationStatics_HasActiveRotateInPlaceCurve Parms{};

	Parms.InAnimInstance = InAnimInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.VerifyBlendSpaceSamplesDifference
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumAllowedDifference                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDebugWarningMessage                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimationStatics::VerifyBlendSpaceSamplesDifference(class UBlendSpace* InBlendSpace, float InMaximumAllowedDifference, const class FString& InDebugWarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "VerifyBlendSpaceSamplesDifference");

	Params::SHAnimationStatics_VerifyBlendSpaceSamplesDifference Parms{};

	Parms.InBlendSpace = InBlendSpace;
	Parms.InMaximumAllowedDifference = InMaximumAllowedDifference;
	Parms.InDebugWarningMessage = std::move(InDebugWarningMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.VerifyBlendSpaceSamplesMaximumDuration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumAllowedDuration                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDebugWarningMessage                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimationStatics::VerifyBlendSpaceSamplesMaximumDuration(class UBlendSpace* InBlendSpace, float InMaximumAllowedDuration, const class FString& InDebugWarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "VerifyBlendSpaceSamplesMaximumDuration");

	Params::SHAnimationStatics_VerifyBlendSpaceSamplesMaximumDuration Parms{};

	Parms.InBlendSpace = InBlendSpace;
	Parms.InMaximumAllowedDuration = InMaximumAllowedDuration;
	Parms.InDebugWarningMessage = std::move(InDebugWarningMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimationStatics.VerifyBlendSpaceSamplesMinimumDuration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace*                      InBlendSpace                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMinimumAllowedDuration                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDebugWarningMessage                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimationStatics::VerifyBlendSpaceSamplesMinimumDuration(class UBlendSpace* InBlendSpace, float InMinimumAllowedDuration, const class FString& InDebugWarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHAnimationStatics", "VerifyBlendSpaceSamplesMinimumDuration");

	Params::SHAnimationStatics_VerifyBlendSpaceSamplesMinimumDuration Parms{};

	Parms.InBlendSpace = InBlendSpace;
	Parms.InMinimumAllowedDuration = InMinimumAllowedDuration;
	Parms.InDebugWarningMessage = std::move(InDebugWarningMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraOverlapHandleComponent.SHDebug_Character_CameraOverlapHandler_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCameraOverlapHandleComponent::SHDebug_Character_CameraOverlapHandler_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraOverlapHandleComponent", "SHDebug_Character_CameraOverlapHandler_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimDoorSubcomp.OnActionBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimDoorSubcomp::OnActionBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimDoorSubcomp", "OnActionBlendingOut");

	Params::SHAnimDoorSubcomp_OnActionBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimDoorSubcomp.OnActionEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimDoorSubcomp::OnActionEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimDoorSubcomp", "OnActionEnd");

	Params::SHAnimDoorSubcomp_OnActionEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimEnviroHitReactionsSubcomp.BlockAnimEnviroHitReactions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimEnviroHitReactionsSubcomp::BlockAnimEnviroHitReactions(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimEnviroHitReactionsSubcomp", "BlockAnimEnviroHitReactions");

	Params::SHAnimEnviroHitReactionsSubcomp_BlockAnimEnviroHitReactions Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimEnviroHitReactionsSubcomp.BlockAnimEnviroHitSlideSnap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimEnviroHitReactionsSubcomp::BlockAnimEnviroHitSlideSnap(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimEnviroHitReactionsSubcomp", "BlockAnimEnviroHitSlideSnap");

	Params::SHAnimEnviroHitReactionsSubcomp_BlockAnimEnviroHitSlideSnap Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimEnviroHitReactionsSubcomp.SHDebug_Character_AnimEnviroHitReactions_DrawDebug
// (Final, Exec, Native, Protected)

void USHAnimEnviroHitReactionsSubcomp::SHDebug_Character_AnimEnviroHitReactions_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimEnviroHitReactionsSubcomp", "SHDebug_Character_AnimEnviroHitReactions_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimEnviroHitReactionsSubcomp.SHDebug_Character_AnimEnviroHitReactions_ValuesDebug
// (Final, Exec, Native, Protected)

void USHAnimEnviroHitReactionsSubcomp::SHDebug_Character_AnimEnviroHitReactions_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimEnviroHitReactionsSubcomp", "SHDebug_Character_AnimEnviroHitReactions_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.ResetIK
// (Final, Native, Public, BlueprintCallable)

void USHAnimFootIKSubcomp::ResetIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "ResetIK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SetFeetAllIKEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SetFeetAllIKEnabled(bool bEnable, float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SetFeetAllIKEnabled");

	Params::SHAnimFootIKSubcomp_SetFeetAllIKEnabled Parms{};

	Parms.bEnable = bEnable;
	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SetFeetRotationOffsetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewIsEnable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SetFeetRotationOffsetEnabled(bool NewIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SetFeetRotationOffsetEnabled");

	Params::SHAnimFootIKSubcomp_SetFeetRotationOffsetEnabled Parms{};

	Parms.NewIsEnable = NewIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SetFootIKEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SetFootIKEnabled(bool bEnable, int32 Index_0, float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SetFootIKEnabled");

	Params::SHAnimFootIKSubcomp_SetFootIKEnabled Parms{};

	Parms.bEnable = bEnable;
	Parms.Index_0 = Index_0;
	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SetIKEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewIsEnabled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SetIKEnabled(bool NewIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SetIKEnabled");

	Params::SHAnimFootIKSubcomp_SetIKEnabled Parms{};

	Parms.NewIsEnabled = NewIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SetPelvisIKEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewIsEnable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PelvisInterpSpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SetPelvisIKEnabled(bool NewIsEnable, float PelvisInterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SetPelvisIKEnabled");

	Params::SHAnimFootIKSubcomp_SetPelvisIKEnabled Parms{};

	Parms.NewIsEnable = NewIsEnable;
	Parms.PelvisInterpSpeed = PelvisInterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SHDebug_Shared_Anim_FootIK_Enabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SHDebug_Shared_Anim_FootIK_Enabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SHDebug_Shared_Anim_FootIK_Enabled");

	Params::SHAnimFootIKSubcomp_SHDebug_Shared_Anim_FootIK_Enabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.SHDebug_Shared_Anim_FootIK_PelvisOffsetInterpSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimFootIKSubcomp::SHDebug_Shared_Anim_FootIK_PelvisOffsetInterpSpeed(float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "SHDebug_Shared_Anim_FootIK_PelvisOffsetInterpSpeed");

	Params::SHAnimFootIKSubcomp_SHDebug_Shared_Anim_FootIK_PelvisOffsetInterpSpeed Parms{};

	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimFootIKSubcomp.GetFootIK
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFootIKData                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFootIKData USHAnimFootIKSubcomp::GetFootIK(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "GetFootIK");

	Params::SHAnimFootIKSubcomp_GetFootIK Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimFootIKSubcomp.GetIsIKEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimFootIKSubcomp::GetIsIKEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimFootIKSubcomp", "GetIsIKEnabled");

	Params::SHAnimFootIKSubcomp_GetIsIKEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.SetLeftHandLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLoc                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SetFullAlpha                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHandIKSubcomp::SetLeftHandLocation(const struct FVector& InLoc, float InterpSpeed, bool SetFullAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "SetLeftHandLocation");

	Params::SHAnimHandIKSubcomp_SetLeftHandLocation Parms{};

	Parms.InLoc = std::move(InLoc);
	Parms.InterpSpeed = InterpSpeed;
	Parms.SetFullAlpha = SetFullAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHandIKSubcomp.SetRightHandLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLoc                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SetFullAlpha                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHandIKSubcomp::SetRightHandLocation(const struct FVector& InLoc, float InterpSpeed, bool SetFullAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "SetRightHandLocation");

	Params::SHAnimHandIKSubcomp_SetRightHandLocation Parms{};

	Parms.InLoc = std::move(InLoc);
	Parms.InterpSpeed = InterpSpeed;
	Parms.SetFullAlpha = SetFullAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHandIKSubcomp.StopBothIK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHandIKSubcomp::StopBothIK(float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "StopBothIK");

	Params::SHAnimHandIKSubcomp_StopBothIK Parms{};

	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHandIKSubcomp.StopLeftHandIK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHandIKSubcomp::StopLeftHandIK(float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "StopLeftHandIK");

	Params::SHAnimHandIKSubcomp_StopLeftHandIK Parms{};

	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHandIKSubcomp.StopRightHandIK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InterpSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHandIKSubcomp::StopRightHandIK(float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "StopRightHandIK");

	Params::SHAnimHandIKSubcomp_StopRightHandIK Parms{};

	Parms.InterpSpeed = InterpSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHandIKSubcomp.GetLeftHandAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimHandIKSubcomp::GetLeftHandAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "GetLeftHandAlpha");

	Params::SHAnimHandIKSubcomp_GetLeftHandAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.GetLeftHandLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimHandIKSubcomp::GetLeftHandLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "GetLeftHandLocation");

	Params::SHAnimHandIKSubcomp_GetLeftHandLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.GetRightHandAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimHandIKSubcomp::GetRightHandAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "GetRightHandAlpha");

	Params::SHAnimHandIKSubcomp_GetRightHandAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.GetRightHandLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimHandIKSubcomp::GetRightHandLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "GetRightHandLocation");

	Params::SHAnimHandIKSubcomp_GetRightHandLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.IsLeftHandIKEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimHandIKSubcomp::IsLeftHandIKEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "IsLeftHandIKEnabled");

	Params::SHAnimHandIKSubcomp_IsLeftHandIKEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHandIKSubcomp.IsRightHandIKEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimHandIKSubcomp::IsRightHandIKEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHandIKSubcomp", "IsRightHandIKEnabled");

	Params::SHAnimHandIKSubcomp_IsRightHandIKEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.ManualLookAtTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InTargetComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendInSpeed                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendOutSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHeadRotationBaseSubcomp::ManualLookAtTarget(class USceneComponent* InTargetComponent, float InBlendInSpeed, float InBlendOutSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "ManualLookAtTarget");

	Params::SHAnimHeadRotationBaseSubcomp_ManualLookAtTarget Parms{};

	Parms.InTargetComponent = InTargetComponent;
	Parms.InBlendInSpeed = InBlendInSpeed;
	Parms.InBlendOutSpeed = InBlendOutSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.SetHeadRotationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHeadRotationBaseSubcomp::SetHeadRotationEnabled(const bool bInEnabled, float InBlendSpeed, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "SetHeadRotationEnabled");

	Params::SHAnimHeadRotationBaseSubcomp_SetHeadRotationEnabled Parms{};

	Parms.bInEnabled = bInEnabled;
	Parms.InBlendSpeed = InBlendSpeed;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.SetNewAimOffsetAnimInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHAimOffsetAnimInstance>NewAimOffset                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHeadRotationBaseSubcomp::SetNewAimOffsetAnimInstance(TSubclassOf<class USHAimOffsetAnimInstance> NewAimOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "SetNewAimOffsetAnimInstance");

	Params::SHAnimHeadRotationBaseSubcomp_SetNewAimOffsetAnimInstance Parms{};

	Parms.NewAimOffset = NewAimOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.SHDebug_Shared_Anim_HeadRotation_SetLookAtEnabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimHeadRotationBaseSubcomp::SHDebug_Shared_Anim_HeadRotation_SetLookAtEnabled(bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "SHDebug_Shared_Anim_HeadRotation_SetLookAtEnabled");

	Params::SHAnimHeadRotationBaseSubcomp_SHDebug_Shared_Anim_HeadRotation_SetLookAtEnabled Parms{};

	Parms.bInEnabled = bInEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.GetCurrentLookAtTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* USHAnimHeadRotationBaseSubcomp::GetCurrentLookAtTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "GetCurrentLookAtTarget");

	Params::SHAnimHeadRotationBaseSubcomp_GetCurrentLookAtTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimHeadRotationBaseSubcomp.IsHeadRotationEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimHeadRotationBaseSubcomp::IsHeadRotationEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationBaseSubcomp", "IsHeadRotationEnabled");

	Params::SHAnimHeadRotationBaseSubcomp_IsHeadRotationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.AddFOVBlend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BlendName                                              (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHBlendData                     BlendConfig                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   FOVValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USHCameraFOVBlender*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USHCameraFOVBlender* USHCharacterPlayCameraComponent::AddFOVBlend(const class UObject* Object, const class FString& BlendName, const struct FSHBlendData& BlendConfig, const float FOVValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "AddFOVBlend");

	Params::SHCharacterPlayCameraComponent_AddFOVBlend Parms{};

	Parms.Object = Object;
	Parms.BlendName = std::move(BlendName);
	Parms.BlendConfig = std::move(BlendConfig);
	Parms.FOVValue = FOVValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.CalcLookingAtDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InWorldLoc                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHCharacterPlayCameraComponent::CalcLookingAtDelta(const struct FVector& InWorldLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "CalcLookingAtDelta");

	Params::SHCharacterPlayCameraComponent_CalcLookingAtDelta Parms{};

	Parms.InWorldLoc = std::move(InWorldLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.IsLookingAt
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InWorldLoc                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchAngleTolerance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YawAngleTolerance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCameraComponent::IsLookingAt(const struct FVector& InWorldLoc, float PitchAngleTolerance, float YawAngleTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "IsLookingAt");

	Params::SHCharacterPlayCameraComponent_IsLookingAt Parms{};

	Parms.InWorldLoc = std::move(InWorldLoc);
	Parms.PitchAngleTolerance = PitchAngleTolerance;
	Parms.YawAngleTolerance = YawAngleTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.PlaySimpleBlendableEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InPostprocessMaterial                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectMaterialParamName                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEffectTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* USHCharacterPlayCameraComponent::PlaySimpleBlendableEffect(const class UObject* Object, class UMaterialInterface* InPostprocessMaterial, class FName InEffectMaterialParamName, float InEffectTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "PlaySimpleBlendableEffect");

	Params::SHCharacterPlayCameraComponent_PlaySimpleBlendableEffect Parms{};

	Parms.Object = Object;
	Parms.InPostprocessMaterial = InPostprocessMaterial;
	Parms.InEffectMaterialParamName = InEffectMaterialParamName;
	Parms.InEffectTime = InEffectTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.RemoveFOVBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Instant                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCameraComponent::RemoveFOVBlend(const class UObject* Object, const bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "RemoveFOVBlend");

	Params::SHCharacterPlayCameraComponent_RemoveFOVBlend Parms{};

	Parms.Object = Object;
	Parms.Instant = Instant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.SHDebug_Character_CameraComponent_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCameraComponent::SHDebug_Character_CameraComponent_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "SHDebug_Character_CameraComponent_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCameraComponent.FindFOVBlender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class USHCameraFOVBlender*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class USHCameraFOVBlender* USHCharacterPlayCameraComponent::FindFOVBlender(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "FindFOVBlender");

	Params::SHCharacterPlayCameraComponent_FindFOVBlender Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCameraComponent.HasFOVBlend
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCameraComponent::HasFOVBlend(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCameraComponent", "HasFOVBlend");

	Params::SHCharacterPlayCameraComponent_HasFOVBlend Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXSplashPuddleSubcomp.ProcessOwnerDamage
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ShotFromDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXSplashPuddleSubcomp::ProcessOwnerDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXSplashPuddleSubcomp", "ProcessOwnerDamage");

	Params::SHFXSplashPuddleSubcomp_ProcessOwnerDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.DamageType = DamageType;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimHeadRotationSubcomp.SHDebug_Character_Anim_HeadRotation_ValuesDebug
// (Final, Exec, Native, Protected)

void USHAnimHeadRotationSubcomp::SHDebug_Character_Anim_HeadRotation_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimHeadRotationSubcomp", "SHDebug_Character_Anim_HeadRotation_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.HandleInvestigationFinishAnimEndEvent
// (Final, Native, Protected, BlueprintCallable)

void USHAnimItemInteractionSubcomp::HandleInvestigationFinishAnimEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "HandleInvestigationFinishAnimEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.HandleInvestigationFlipAnimEndNotify
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   AnimationTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FlipSide                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimItemInteractionSubcomp::HandleInvestigationFlipAnimEndNotify(float AnimationTime, int32 FlipSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "HandleInvestigationFlipAnimEndNotify");

	Params::SHAnimItemInteractionSubcomp_HandleInvestigationFlipAnimEndNotify Parms{};

	Parms.AnimationTime = AnimationTime;
	Parms.FlipSide = FlipSide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.HandleInvestigationSetupAnimEndEvent
// (Final, Native, Protected, BlueprintCallable)

void USHAnimItemInteractionSubcomp::HandleInvestigationSetupAnimEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "HandleInvestigationSetupAnimEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.HandlePostInvestigationAnimEndEvent
// (Final, Native, Protected, BlueprintCallable)

void USHAnimItemInteractionSubcomp::HandlePostInvestigationAnimEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "HandlePostInvestigationAnimEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.HandlePreInvestigationAnimEndEvent
// (Final, Native, Protected, BlueprintCallable)

void USHAnimItemInteractionSubcomp::HandlePreInvestigationAnimEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "HandlePreInvestigationAnimEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.InvestigationSetHandLocationFAB
// (Final, Native, Protected, BlueprintCallable)

void USHAnimItemInteractionSubcomp::InvestigationSetHandLocationFAB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "InvestigationSetHandLocationFAB");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.PlayPreInvestigationAnimation
// (Final, Native, Public, BlueprintCallable)

void USHAnimItemInteractionSubcomp::PlayPreInvestigationAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "PlayPreInvestigationAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.TakeItemAnimationEnd
// (Final, Native, Public, BlueprintCallable)

void USHAnimItemInteractionSubcomp::TakeItemAnimationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "TakeItemAnimationEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimItemInteractionSubcomp.TakeItemSetDirection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSetProperHand                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimItemInteractionSubcomp::TakeItemSetDirection(bool bSetProperHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimItemInteractionSubcomp", "TakeItemSetDirection");

	Params::SHAnimItemInteractionSubcomp_TakeItemSetDirection Parms{};

	Parms.bSetProperHand = bSetProperHand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimKnockDownSubcomp.GetKnockDownState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EKnockDownState                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EKnockDownState USHAnimKnockDownSubcomp::GetKnockDownState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimKnockDownSubcomp", "GetKnockDownState");

	Params::SHAnimKnockDownSubcomp_GetKnockDownState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimKnockDownSubcomp.SetKnockDownState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKnockDownState                         NewKnockDownState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimKnockDownSubcomp::SetKnockDownState(EKnockDownState NewKnockDownState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimKnockDownSubcomp", "SetKnockDownState");

	Params::SHAnimKnockDownSubcomp_SetKnockDownState Parms{};

	Parms.NewKnockDownState = NewKnockDownState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNPCMovementSubcomp.IsPhysicRotationDuringAnimRootMotionAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimNPCMovementSubcomp::IsPhysicRotationDuringAnimRootMotionAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCMovementSubcomp", "IsPhysicRotationDuringAnimRootMotionAllowed");

	Params::SHAnimNPCMovementSubcomp_IsPhysicRotationDuringAnimRootMotionAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNPCMovementSubcomp.OnMoveStartExit
// (Final, Native, Public, BlueprintCallable)

void USHAnimNPCMovementSubcomp::OnMoveStartExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCMovementSubcomp", "OnMoveStartExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNPCMovementSubcomp.OnTurnOnSpotAnimationEnter
// (Final, Native, Public, BlueprintCallable)

void USHAnimNPCMovementSubcomp::OnTurnOnSpotAnimationEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCMovementSubcomp", "OnTurnOnSpotAnimationEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimLyingFigureMovementSubcomp.RegisterPrerequisites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHEnemyLyingComponent*           InLyingComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InCrawlRearComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  InCrawlFrontComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimLyingFigureMovementSubcomp::RegisterPrerequisites(class USHEnemyLyingComponent* InLyingComponent, class USceneComponent* InCrawlRearComponent, class USceneComponent* InCrawlFrontComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimLyingFigureMovementSubcomp", "RegisterPrerequisites");

	Params::SHAnimLyingFigureMovementSubcomp_RegisterPrerequisites Parms{};

	Parms.InLyingComponent = InLyingComponent;
	Parms.InCrawlRearComponent = InCrawlRearComponent;
	Parms.InCrawlFrontComponent = InCrawlFrontComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimLyingFigureMovementSubcomp.SetAllowInaccurateLocomotionAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InAllow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimLyingFigureMovementSubcomp::SetAllowInaccurateLocomotionAnimations(bool InAllow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimLyingFigureMovementSubcomp", "SetAllowInaccurateLocomotionAnimations");

	Params::SHAnimLyingFigureMovementSubcomp_SetAllowInaccurateLocomotionAnimations Parms{};

	Parms.InAllow = InAllow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimLyingFigureMovementSubcomp.SetCrawlBendAngles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InYawAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPitchAngle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimLyingFigureMovementSubcomp::SetCrawlBendAngles(float InYawAngle, float InPitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimLyingFigureMovementSubcomp", "SetCrawlBendAngles");

	Params::SHAnimLyingFigureMovementSubcomp_SetCrawlBendAngles Parms{};

	Parms.InYawAngle = InYawAngle;
	Parms.InPitchAngle = InPitchAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimLyingFigureMovementSubcomp.SetRequiredLocomotionDistanceAccuracy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDistanceAccuracy                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimLyingFigureMovementSubcomp::SetRequiredLocomotionDistanceAccuracy(float InDistanceAccuracy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimLyingFigureMovementSubcomp", "SetRequiredLocomotionDistanceAccuracy");

	Params::SHAnimLyingFigureMovementSubcomp_SetRequiredLocomotionDistanceAccuracy Parms{};

	Parms.InDistanceAccuracy = InDistanceAccuracy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMQSpiderAnimInstance.OnChangeSurfaceAnimationBegin
// (Event, Public, BlueprintEvent)

void USHMQSpiderAnimInstance::OnChangeSurfaceAnimationBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMQSpiderAnimInstance", "OnChangeSurfaceAnimationBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMQSpiderAnimInstance.OnChangeSurfaceAnimationEnd
// (Event, Public, BlueprintEvent)

void USHMQSpiderAnimInstance::OnChangeSurfaceAnimationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMQSpiderAnimInstance", "OnChangeSurfaceAnimationEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMQSpiderAnimInstance.GetMQSpiderAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMQSpiderAnimInstanceStateData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMQSpiderAnimInstanceStateData* USHMQSpiderAnimInstance::GetMQSpiderAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMQSpiderAnimInstance", "GetMQSpiderAnimInstanceStateData");

	Params::SHMQSpiderAnimInstance_GetMQSpiderAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.ActivatePhysicsForBone
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InActivatePhysicsForParentBodyLevelsAbove              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHBonePhysicsPhysicsBlendInput  InPhysicsBlendInput                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    InAllowRootPhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::ActivatePhysicsForBone(class FName InBoneName, int32 InActivatePhysicsForParentBodyLevelsAbove, const struct FSHBonePhysicsPhysicsBlendInput& InPhysicsBlendInput, bool InAllowRootPhysics, class FName InPhysicsIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "ActivatePhysicsForBone");

	Params::SHBonePhysicsControllerSubcomponent_ActivatePhysicsForBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InActivatePhysicsForParentBodyLevelsAbove = InActivatePhysicsForParentBodyLevelsAbove;
	Parms.InPhysicsBlendInput = std::move(InPhysicsBlendInput);
	Parms.InAllowRootPhysics = InAllowRootPhysics;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.ApplyPhysicsForceToBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForceLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForce                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InActivatePhysicsForParentBodyLevelsAbove              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHBonePhysicsPhysicsBlendInput  InPhysicsBlendInput                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    InAllowRootPhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::ApplyPhysicsForceToBone(class FName InBoneName, const struct FVector& InForceLocation, const struct FVector& InForce, int32 InActivatePhysicsForParentBodyLevelsAbove, const struct FSHBonePhysicsPhysicsBlendInput& InPhysicsBlendInput, bool InAllowRootPhysics, class FName InPhysicsIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "ApplyPhysicsForceToBone");

	Params::SHBonePhysicsControllerSubcomponent_ApplyPhysicsForceToBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InForceLocation = std::move(InForceLocation);
	Parms.InForce = std::move(InForce);
	Parms.InActivatePhysicsForParentBodyLevelsAbove = InActivatePhysicsForParentBodyLevelsAbove;
	Parms.InPhysicsBlendInput = std::move(InPhysicsBlendInput);
	Parms.InAllowRootPhysics = InAllowRootPhysics;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.ApplyPhysicsForceToBoneAndItsChildren
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForceLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForce                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InChildrenBoneForceMultiplier                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InOnlyApplyForceToDirectChildren                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InApplyForceAtChildLocation                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InActivatePhysicsForParentBodyLevelsAbove              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHBonePhysicsPhysicsBlendInput  InPhysicsBlendInput                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    InAllowRootPhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::ApplyPhysicsForceToBoneAndItsChildren(class FName InBoneName, const struct FVector& InForceLocation, const struct FVector& InForce, float InChildrenBoneForceMultiplier, bool InOnlyApplyForceToDirectChildren, bool InApplyForceAtChildLocation, int32 InActivatePhysicsForParentBodyLevelsAbove, const struct FSHBonePhysicsPhysicsBlendInput& InPhysicsBlendInput, bool InAllowRootPhysics, class FName InPhysicsIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "ApplyPhysicsForceToBoneAndItsChildren");

	Params::SHBonePhysicsControllerSubcomponent_ApplyPhysicsForceToBoneAndItsChildren Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InForceLocation = std::move(InForceLocation);
	Parms.InForce = std::move(InForce);
	Parms.InChildrenBoneForceMultiplier = InChildrenBoneForceMultiplier;
	Parms.InOnlyApplyForceToDirectChildren = InOnlyApplyForceToDirectChildren;
	Parms.InApplyForceAtChildLocation = InApplyForceAtChildLocation;
	Parms.InActivatePhysicsForParentBodyLevelsAbove = InActivatePhysicsForParentBodyLevelsAbove;
	Parms.InPhysicsBlendInput = std::move(InPhysicsBlendInput);
	Parms.InAllowRootPhysics = InAllowRootPhysics;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.ApplyPhysicsForceToChildBodiesOfBone
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForceLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForce                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InOnlyDirectChildren                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InApplyForceAtChildLocation                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHBonePhysicsPhysicsBlendInput  InPhysicsBlendInput                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    InAllowRootPhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::ApplyPhysicsForceToChildBodiesOfBone(class FName InBoneName, const struct FVector& InForceLocation, const struct FVector& InForce, bool InOnlyDirectChildren, bool InApplyForceAtChildLocation, const struct FSHBonePhysicsPhysicsBlendInput& InPhysicsBlendInput, bool InAllowRootPhysics, class FName InPhysicsIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "ApplyPhysicsForceToChildBodiesOfBone");

	Params::SHBonePhysicsControllerSubcomponent_ApplyPhysicsForceToChildBodiesOfBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InForceLocation = std::move(InForceLocation);
	Parms.InForce = std::move(InForce);
	Parms.InOnlyDirectChildren = InOnlyDirectChildren;
	Parms.InApplyForceAtChildLocation = InApplyForceAtChildLocation;
	Parms.InPhysicsBlendInput = std::move(InPhysicsBlendInput);
	Parms.InAllowRootPhysics = InAllowRootPhysics;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.AssignBonePhysicsSettingsProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHBonePhysicsControllerSettingsProfileInSettingsProfile                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::AssignBonePhysicsSettingsProfile(const struct FSHBonePhysicsControllerSettingsProfile& InSettingsProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "AssignBonePhysicsSettingsProfile");

	Params::SHBonePhysicsControllerSubcomponent_AssignBonePhysicsSettingsProfile Parms{};

	Parms.InSettingsProfile = std::move(InSettingsProfile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FadeOutAllPhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InBlendOutTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendOutCurveBend                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::FadeOutAllPhysics(float InBlendOutTime, float InBlendOutCurveBend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FadeOutAllPhysics");

	Params::SHBonePhysicsControllerSubcomponent_FadeOutAllPhysics Parms{};

	Parms.InBlendOutTime = InBlendOutTime;
	Parms.InBlendOutCurveBend = InBlendOutCurveBend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FadeOutBonePhysicsByIdentifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InBlendOutTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendOutCurveBend                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::FadeOutBonePhysicsByIdentifier(float InBlendOutTime, float InBlendOutCurveBend, class FName InPhysicsIdentifier, class FName InBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FadeOutBonePhysicsByIdentifier");

	Params::SHBonePhysicsControllerSubcomponent_FadeOutBonePhysicsByIdentifier Parms{};

	Parms.InBlendOutTime = InBlendOutTime;
	Parms.InBlendOutCurveBend = InBlendOutCurveBend;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;
	Parms.InBoneName = InBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FadeOutPhysicsByIdentifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InBlendOutTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendOutCurveBend                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPhysicsIdentifier                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::FadeOutPhysicsByIdentifier(float InBlendOutTime, float InBlendOutCurveBend, class FName InPhysicsIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FadeOutPhysicsByIdentifier");

	Params::SHBonePhysicsControllerSubcomponent_FadeOutPhysicsByIdentifier Parms{};

	Parms.InBlendOutTime = InBlendOutTime;
	Parms.InBlendOutCurveBend = InBlendOutCurveBend;
	Parms.InPhysicsIdentifier = InPhysicsIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FreezeBodiesPose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InOnlyIfNotFrozen                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::FreezeBodiesPose(bool InOnlyIfNotFrozen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FreezeBodiesPose");

	Params::SHBonePhysicsControllerSubcomponent_FreezeBodiesPose Parms{};

	Parms.InOnlyIfNotFrozen = InOnlyIfNotFrozen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetDebugPoseDrawing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDrawPose                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetDebugPoseDrawing(bool InDrawPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetDebugPoseDrawing");

	Params::SHBonePhysicsControllerSubcomponent_SetDebugPoseDrawing Parms{};

	Parms.InDrawPose = InDrawPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetDebugSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InPrintPhysicsStates                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrawAppliedForcesDebug                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDrawAppliedForcesScale                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrawBodyActiveForcesDebug                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBodyActiveForcesScale                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrawPoseDebug                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDrawStreamedPoseDuration                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetDebugSettings(bool InPrintPhysicsStates, bool InDrawAppliedForcesDebug, float InDrawAppliedForcesScale, bool InDrawBodyActiveForcesDebug, float InBodyActiveForcesScale, bool InDrawPoseDebug, float InDrawStreamedPoseDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetDebugSettings");

	Params::SHBonePhysicsControllerSubcomponent_SetDebugSettings Parms{};

	Parms.InPrintPhysicsStates = InPrintPhysicsStates;
	Parms.InDrawAppliedForcesDebug = InDrawAppliedForcesDebug;
	Parms.InDrawAppliedForcesScale = InDrawAppliedForcesScale;
	Parms.InDrawBodyActiveForcesDebug = InDrawBodyActiveForcesDebug;
	Parms.InBodyActiveForcesScale = InBodyActiveForcesScale;
	Parms.InDrawPoseDebug = InDrawPoseDebug;
	Parms.InDrawStreamedPoseDuration = InDrawStreamedPoseDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetDrawAppliedForcesDebugArrows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDrawAppliedForcesDebug                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDrawAppliedForcesScale                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetDrawAppliedForcesDebugArrows(bool InDrawAppliedForcesDebug, float InDrawAppliedForcesScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetDrawAppliedForcesDebugArrows");

	Params::SHBonePhysicsControllerSubcomponent_SetDrawAppliedForcesDebugArrows Parms{};

	Parms.InDrawAppliedForcesDebug = InDrawAppliedForcesDebug;
	Parms.InDrawAppliedForcesScale = InDrawAppliedForcesScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetDrawBodyActiveForcesDebugArrows
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDrawBodyActiveForcesDebug                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBodyActiveForcesScale                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetDrawBodyActiveForcesDebugArrows(bool InDrawBodyActiveForcesDebug, float InBodyActiveForcesScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetDrawBodyActiveForcesDebugArrows");

	Params::SHBonePhysicsControllerSubcomponent_SetDrawBodyActiveForcesDebugArrows Parms{};

	Parms.InDrawBodyActiveForcesDebug = InDrawBodyActiveForcesDebug;
	Parms.InBodyActiveForcesScale = InBodyActiveForcesScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetPhysicsStatesDebugPrinting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnableDebugPrint                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetPhysicsStatesDebugPrinting(bool InEnableDebugPrint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetPhysicsStatesDebugPrinting");

	Params::SHBonePhysicsControllerSubcomponent_SetPhysicsStatesDebugPrinting Parms{};

	Parms.InEnableDebugPrint = InEnableDebugPrint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.SetStreamedPoseDrawingDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::SetStreamedPoseDrawingDuration(float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "SetStreamedPoseDrawingDuration");

	Params::SHBonePhysicsControllerSubcomponent_SetStreamedPoseDrawingDuration Parms{};

	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.UnfreezeBodiesPose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InUnfreezeDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBonePhysicsControllerSubcomponent::UnfreezeBodiesPose(float InUnfreezeDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "UnfreezeBodiesPose");

	Params::SHBonePhysicsControllerSubcomponent_UnfreezeBodiesPose Parms{};

	Parms.InUnfreezeDelay = InUnfreezeDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FindIfBoneHasActivePhysics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::FindIfBoneHasActivePhysics(class FName InBoneName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FindIfBoneHasActivePhysics");

	Params::SHBonePhysicsControllerSubcomponent_FindIfBoneHasActivePhysics Parms{};

	Parms.InBoneName = InBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.FindIfRootPhysicsSimulationIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::FindIfRootPhysicsSimulationIsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "FindIfRootPhysicsSimulationIsActive");

	Params::SHBonePhysicsControllerSubcomponent_FindIfRootPhysicsSimulationIsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBonePhysicsControllerSubcomponent.IsBodiesPoseFrozen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeUnfreezing                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBonePhysicsControllerSubcomponent::IsBodiesPoseFrozen(bool InIncludeUnfreezing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBonePhysicsControllerSubcomponent", "IsBodiesPoseFrozen");

	Params::SHBonePhysicsControllerSubcomponent_IsBodiesPoseFrozen Parms{};

	Parms.InIncludeUnfreezing = InIncludeUnfreezing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMariaMovementSubcomp.PrepareChaseMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimMariaMovementSubcomp::PrepareChaseMovement(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMariaMovementSubcomp", "PrepareChaseMovement");

	Params::SHAnimMariaMovementSubcomp_PrepareChaseMovement Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimMontagePlayer.ChangeSectionRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewSectionName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewSectionBlendInTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldSectionBlendOutTime                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::ChangeSectionRequest(const class FName NewSectionName, const float NewSectionBlendInTime, const float OldSectionBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "ChangeSectionRequest");

	Params::SHAnimMontagePlayer_ChangeSectionRequest Parms{};

	Parms.NewSectionName = NewSectionName;
	Parms.NewSectionBlendInTime = NewSectionBlendInTime;
	Parms.OldSectionBlendOutTime = OldSectionBlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.OnAnyMontageBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimMontagePlayer::OnAnyMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "OnAnyMontageBlendingOut");

	Params::SHAnimMontagePlayer_OnAnyMontageBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimMontagePlayer.OnAnyMontageEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAnimMontagePlayer::OnAnyMontageEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "OnAnyMontageEnd");

	Params::SHAnimMontagePlayer_OnAnyMontageEnd Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimMontagePlayer.OverwriteRequest
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   StopBlendoutTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayAnimationData               AnimData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          BlendSpaceInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::OverwriteRequest(const float StopBlendoutTime, const struct FPlayAnimationData& AnimData, const struct FVector& BlendSpaceInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "OverwriteRequest");

	Params::SHAnimMontagePlayer_OverwriteRequest Parms{};

	Parms.StopBlendoutTime = StopBlendoutTime;
	Parms.AnimData = std::move(AnimData);
	Parms.BlendSpaceInput = std::move(BlendSpaceInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.PauseRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::PauseRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "PauseRequest");

	Params::SHAnimMontagePlayer_PauseRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.PlayOrOverwriteRequest
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   StopBlendoutTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayAnimationData               AnimData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          BlendSpaceInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::PlayOrOverwriteRequest(const float StopBlendoutTime, const struct FPlayAnimationData& AnimData, const struct FVector& BlendSpaceInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "PlayOrOverwriteRequest");

	Params::SHAnimMontagePlayer_PlayOrOverwriteRequest Parms{};

	Parms.StopBlendoutTime = StopBlendoutTime;
	Parms.AnimData = std::move(AnimData);
	Parms.BlendSpaceInput = std::move(BlendSpaceInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.PlayRequest
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               AnimData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          BlendSpaceInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::PlayRequest(const struct FPlayAnimationData& AnimData, const struct FVector& BlendSpaceInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "PlayRequest");

	Params::SHAnimMontagePlayer_PlayRequest Parms{};

	Parms.AnimData = std::move(AnimData);
	Parms.BlendSpaceInput = std::move(BlendSpaceInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.ResumeRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::ResumeRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "ResumeRequest");

	Params::SHAnimMontagePlayer_ResumeRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.StopRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StopBlendoutTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::StopRequest(const float StopBlendoutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "StopRequest");

	Params::SHAnimMontagePlayer_StopRequest Parms{};

	Parms.StopBlendoutTime = StopBlendoutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.GetCurrentMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* USHAnimMontagePlayer::GetCurrentMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "GetCurrentMontage");

	Params::SHAnimMontagePlayer_GetCurrentMontage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.GetInputData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* USHAnimMontagePlayer::GetInputData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "GetInputData");

	Params::SHAnimMontagePlayer_GetInputData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.GetPlayAnimationData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayAnimationData         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPlayAnimationData USHAnimMontagePlayer::GetPlayAnimationData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "GetPlayAnimationData");

	Params::SHAnimMontagePlayer_GetPlayAnimationData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.GetPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimMontagePlayer::GetPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "GetPosition");

	Params::SHAnimMontagePlayer_GetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMontagePlayer.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMontagePlayer::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMontagePlayer", "IsPlaying");

	Params::SHAnimMontagePlayer_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.CanPlayInvestigationAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMovementSubcomp::CanPlayInvestigationAnim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "CanPlayInvestigationAnim");

	Params::SHAnimMovementSubcomp_CanPlayInvestigationAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.GetLocomotionAnimationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELocomotionState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELocomotionState USHAnimMovementSubcomp::GetLocomotionAnimationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "GetLocomotionAnimationState");

	Params::SHAnimMovementSubcomp_GetLocomotionAnimationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.GetLocomotionAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLocomotionAnimInstance*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLocomotionAnimInstance* USHAnimMovementSubcomp::GetLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "GetLocomotionAnimInstance");

	Params::SHAnimMovementSubcomp_GetLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.HasMovementInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMovementSubcomp::HasMovementInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "HasMovementInput");

	Params::SHAnimMovementSubcomp_HasMovementInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.IsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMovementSubcomp::IsMoving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "IsMoving");

	Params::SHAnimMovementSubcomp_IsMoving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.ShouldLookOnAimWalk
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMovementSubcomp::ShouldLookOnAimWalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "ShouldLookOnAimWalk");

	Params::SHAnimMovementSubcomp_ShouldLookOnAimWalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimMovementSubcomp.ShouldMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimMovementSubcomp::ShouldMove() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimMovementSubcomp", "ShouldMove");

	Params::SHAnimMovementSubcomp_ShouldMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStagedAnimActionExecutive.AdvanceStageRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHStagedAnimActionExecutive::AdvanceStageRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "AdvanceStageRequest");

	Params::SHStagedAnimActionExecutive_AdvanceStageRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStagedAnimActionExecutive.GetLinkedStagedAnimInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USHBaseStagedAnimInstance*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHBaseStagedAnimInstance* USHStagedAnimActionExecutive::GetLinkedStagedAnimInst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "GetLinkedStagedAnimInst");

	Params::SHStagedAnimActionExecutive_GetLinkedStagedAnimInst Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStagedAnimActionExecutive.OnAnimInstInteractionBlendingOut
// (Event, Protected, BlueprintEvent)

void USHStagedAnimActionExecutive::OnAnimInstInteractionBlendingOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "OnAnimInstInteractionBlendingOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHStagedAnimActionExecutive.OnAnimInstInteractionFinished
// (Event, Protected, BlueprintEvent)

void USHStagedAnimActionExecutive::OnAnimInstInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "OnAnimInstInteractionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHStagedAnimActionExecutive.OnAnimInstInteractionFinishStart
// (Event, Protected, BlueprintEvent)

void USHStagedAnimActionExecutive::OnAnimInstInteractionFinishStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "OnAnimInstInteractionFinishStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHStagedAnimActionExecutive.OnAnimInstInteractionStarted
// (Event, Protected, BlueprintEvent)

void USHStagedAnimActionExecutive::OnAnimInstInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "OnAnimInstInteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHStagedAnimActionExecutive.OnAnimInstStageAdvanced
// (Event, Protected, BlueprintEvent)

void USHStagedAnimActionExecutive::OnAnimInstStageAdvanced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStagedAnimActionExecutive", "OnAnimInstStageAdvanced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHCharacterPlayImpactDetectionComponent.CreateHitEvent
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHCharacterPlayImpactDetectionComponent::CreateHitEvent(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayImpactDetectionComponent", "CreateHitEvent");

	Params::SHCharacterPlayImpactDetectionComponent_CreateHitEvent Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayImpactDetectionComponent.SHDebug_Character_ImpactDetection_DrawDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayImpactDetectionComponent::SHDebug_Character_ImpactDetection_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayImpactDetectionComponent", "SHDebug_Character_ImpactDetection_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayImpactDetectionComponent.SHDebug_Character_ImpactDetection_ValuesDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayImpactDetectionComponent::SHDebug_Character_ImpactDetection_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayImpactDetectionComponent", "SHDebug_Character_ImpactDetection_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLighting.SetFlashlightOffSupportLightProgress
// (Final, Native, Protected)
// Parameters:
// float                                   ProgressValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLighting::SetFlashlightOffSupportLightProgress(float ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLighting", "SetFlashlightOffSupportLightProgress");

	Params::SHCharacterPlayLighting_SetFlashlightOffSupportLightProgress Parms{};

	Parms.ProgressValue = ProgressValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSystemFXBase.OnImpactDecalApplied
// (Event, Protected, BlueprintEvent)

void ASHSystemFXBase::OnImpactDecalApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "OnImpactDecalApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSystemFXBase.OnInit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USHSystemFXData*                  InSystemFXData                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHit                                                  (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHSystemFXBase::OnInit(const class USHSystemFXData* InSystemFXData, const struct FHitResult& InHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "OnInit");

	Params::SHSystemFXBase_OnInit Parms{};

	Parms.InSystemFXData = InSystemFXData;
	Parms.InHit = std::move(InHit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSystemFXBase.PostAkEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*                    InAudioAsset                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShouldStopPooledAkComponentOnEndPlay                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSystemFXBase::PostAkEvent(class UAkAudioEvent* InAudioAsset, bool InShouldStopPooledAkComponentOnEndPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "PostAkEvent");

	Params::SHSystemFXBase_PostAkEvent Parms{};

	Parms.InAudioAsset = InAudioAsset;
	Parms.InShouldStopPooledAkComponentOnEndPlay = InShouldStopPooledAkComponentOnEndPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSystemFXBase.ProcessImpactFXFinished
// (Final, Native, Protected)
// Parameters:
// class UNiagaraComponent*                InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSystemFXBase::ProcessImpactFXFinished(class UNiagaraComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "ProcessImpactFXFinished");

	Params::SHSystemFXBase_ProcessImpactFXFinished Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSystemFXBase.SetSelfDestroyTimeValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSystemFXBase::SetSelfDestroyTimeValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "SetSelfDestroyTimeValue");

	Params::SHSystemFXBase_SetSelfDestroyTimeValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSystemFXBase.GetDecalMaterialDynamic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* ASHSystemFXBase::GetDecalMaterialDynamic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "GetDecalMaterialDynamic");

	Params::SHSystemFXBase_GetDecalMaterialDynamic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSystemFXBase.GetSpawnedNiagaraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* ASHSystemFXBase::GetSpawnedNiagaraComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSystemFXBase", "GetSpawnedNiagaraComponent");

	Params::SHSystemFXBase_GetSpawnedNiagaraComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPukePuddleBase.OnPuddleActivated
// (Event, Protected, BlueprintEvent)

void ASHPukePuddleBase::OnPuddleActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPukePuddleBase", "OnPuddleActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHPukePuddleBase.OnPuddleDeactivated
// (Event, Protected, BlueprintEvent)

void ASHPukePuddleBase::OnPuddleDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPukePuddleBase", "OnPuddleDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHPukePuddleBase.GetPuddleRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHPukePuddleBase::GetPuddleRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPukePuddleBase", "GetPuddleRadius");

	Params::SHPukePuddleBase_GetPuddleRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.ClearMovementScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::ClearMovementScale(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "ClearMovementScale");

	Params::SHCharacterPlayMovementComponent_ClearMovementScale Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.HandleReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::HandleReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "HandleReceiveDamageEvent");

	Params::SHCharacterPlayMovementComponent_HandleReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.MovementSnapAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHMovementSnapConfig            Config                                                 (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayMovementComponent::MovementSnapAbsolute(const struct FVector& Location, const float Timeout, const struct FSHMovementSnapConfig& Config, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "MovementSnapAbsolute");

	Params::SHCharacterPlayMovementComponent_MovementSnapAbsolute Parms{};

	Parms.Location = std::move(Location);
	Parms.Timeout = Timeout;
	Parms.Config = std::move(Config);
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.RotationSnapAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayMovementComponent::RotationSnapAbsolute(const struct FVector& Location, const float Duration, const class UObject* Object, class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "RotationSnapAbsolute");

	Params::SHCharacterPlayMovementComponent_RotationSnapAbsolute Parms{};

	Parms.Location = std::move(Location);
	Parms.Duration = Duration;
	Parms.Object = Object;
	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.RotationSnapAbsoluteStatic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         WorldRotation                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayMovementComponent::RotationSnapAbsoluteStatic(const struct FRotator& WorldRotation, const float Duration, const class UObject* Object, class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "RotationSnapAbsoluteStatic");

	Params::SHCharacterPlayMovementComponent_RotationSnapAbsoluteStatic Parms{};

	Parms.WorldRotation = std::move(WorldRotation);
	Parms.Duration = Duration;
	Parms.Object = Object;
	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetControllerYawRotationMatchingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetControllerYawRotationMatchingBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetControllerYawRotationMatchingBlocked");

	Params::SHCharacterPlayMovementComponent_SetControllerYawRotationMatchingBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetDisableToggleSprintAutoEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetDisableToggleSprintAutoEnd(const bool InValue, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetDisableToggleSprintAutoEnd");

	Params::SHCharacterPlayMovementComponent_SetDisableToggleSprintAutoEnd Parms{};

	Parms.InValue = InValue;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetIsOnStairs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    OnStairs                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetIsOnStairs(bool OnStairs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetIsOnStairs");

	Params::SHCharacterPlayMovementComponent_SetIsOnStairs Parms{};

	Parms.OnStairs = OnStairs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetMovementBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetMovementBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetMovementBlocked");

	Params::SHCharacterPlayMovementComponent_SetMovementBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetMovementScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetMovementScale(const float Scale, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetMovementScale");

	Params::SHCharacterPlayMovementComponent_SetMovementScale Parms{};

	Parms.Scale = Scale;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetPhysWalkingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetPhysWalkingBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetPhysWalkingBlocked");

	Params::SHCharacterPlayMovementComponent_SetPhysWalkingBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetRotateInPlaceBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetRotateInPlaceBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetRotateInPlaceBlocked");

	Params::SHCharacterPlayMovementComponent_SetRotateInPlaceBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetRotateInPlaceCustomAllowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAllowed                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetRotateInPlaceCustomAllowed(const bool bInAllowed, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetRotateInPlaceCustomAllowed");

	Params::SHCharacterPlayMovementComponent_SetRotateInPlaceCustomAllowed Parms{};

	Parms.bInAllowed = bInAllowed;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SetSprintBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SetSprintBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SetSprintBlocked");

	Params::SHCharacterPlayMovementComponent_SetSprintBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHCharacterPlayMovementComponent.SHCharacterPlayMovementEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayMovementComponent*ComponentRef                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::SHCharacterPlayMovementEvent__DelegateSignature(class USHCharacterPlayMovementComponent* ComponentRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHCharacterPlayMovementEvent__DelegateSignature");

	Params::SHCharacterPlayMovementComponent_SHCharacterPlayMovementEvent__DelegateSignature Parms{};

	Parms.ComponentRef = ComponentRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_ForceSprint
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_ForceSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_ForceSprint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_MovementSnapDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_MovementSnapDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_MovementSnapDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_PushableDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_PushableDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_PushableDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_RotationSnapDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_RotationSnapDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_RotationSnapDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_SlideSnapDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_SlideSnapDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_SlideSnapDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_SpamMovementImpacts
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_SpamMovementImpacts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_SpamMovementImpacts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_SpamMovementInputDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_SpamMovementInputDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_SpamMovementInputDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SHDebug_Character_Movement_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayMovementComponent::SHDebug_Character_Movement_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SHDebug_Character_Movement_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.SlideSnapAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InCollisionIgnoredActors                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayMovementComponent::SlideSnapAbsolute(const struct FVector& Location, const float Duration, const class UObject* Object, const TArray<class AActor*>& InCollisionIgnoredActors, class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "SlideSnapAbsolute");

	Params::SHCharacterPlayMovementComponent_SlideSnapAbsolute Parms{};

	Parms.Location = std::move(Location);
	Parms.Duration = Duration;
	Parms.Object = Object;
	Parms.InCollisionIgnoredActors = std::move(InCollisionIgnoredActors);
	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.StopRotateInPlaceImmediately
// (Final, Native, Public, BlueprintCallable)

void USHCharacterPlayMovementComponent::StopRotateInPlaceImmediately()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "StopRotateInPlaceImmediately");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TeleportAbsolute
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TeleportAbsolute(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TeleportAbsolute");

	Params::SHCharacterPlayMovementComponent_TeleportAbsolute Parms{};

	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TeleportAbsoluteWithView
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InViewRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TeleportAbsoluteWithView(const struct FTransform& InTransform, const struct FRotator& InViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TeleportAbsoluteWithView");

	Params::SHCharacterPlayMovementComponent_TeleportAbsoluteWithView Parms{};

	Parms.InTransform = std::move(InTransform);
	Parms.InViewRotation = std::move(InViewRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TeleportRelatively
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       FirstAnchor                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       SecondAnchor                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TeleportRelatively(const struct FTransform& FirstAnchor, const struct FTransform& SecondAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TeleportRelatively");

	Params::SHCharacterPlayMovementComponent_TeleportRelatively Parms{};

	Parms.FirstAnchor = std::move(FirstAnchor);
	Parms.SecondAnchor = std::move(SecondAnchor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TeleportRelativelyToActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           FirstAnchor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SecondAnchor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TeleportRelativelyToActors(class AActor* FirstAnchor, class AActor* SecondAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TeleportRelativelyToActors");

	Params::SHCharacterPlayMovementComponent_TeleportRelativelyToActors Parms{};

	Parms.FirstAnchor = FirstAnchor;
	Parms.SecondAnchor = SecondAnchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TeleportRelativelyToComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  FirstAnchor                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  SecondAnchor                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TeleportRelativelyToComponents(class USceneComponent* FirstAnchor, class USceneComponent* SecondAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TeleportRelativelyToComponents");

	Params::SHCharacterPlayMovementComponent_TeleportRelativelyToComponents Parms{};

	Parms.FirstAnchor = FirstAnchor;
	Parms.SecondAnchor = SecondAnchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.TelportAbsoluteWithDefaultView
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMovementComponent::TelportAbsoluteWithDefaultView(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "TelportAbsoluteWithDefaultView");

	Params::SHCharacterPlayMovementComponent_TelportAbsoluteWithDefaultView Parms{};

	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMovementComponent.GetFakedVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayMovementComponent::GetFakedVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "GetFakedVelocity");

	Params::SHCharacterPlayMovementComponent_GetFakedVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.GetInteriorExteriorState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHInteriorExteriorStateEnum            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHInteriorExteriorStateEnum USHCharacterPlayMovementComponent::GetInteriorExteriorState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "GetInteriorExteriorState");

	Params::SHCharacterPlayMovementComponent_GetInteriorExteriorState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.GetLastInputValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayMovementComponent::GetLastInputValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "GetLastInputValue");

	Params::SHCharacterPlayMovementComponent_GetLastInputValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.GetLastSlopeAngleDeg
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayMovementComponent::GetLastSlopeAngleDeg() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "GetLastSlopeAngleDeg");

	Params::SHCharacterPlayMovementComponent_GetLastSlopeAngleDeg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsControllerYawRotationMatchingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsControllerYawRotationMatchingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsControllerYawRotationMatchingBlocked");

	Params::SHCharacterPlayMovementComponent_IsControllerYawRotationMatchingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsInWater() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsInWater");

	Params::SHCharacterPlayMovementComponent_IsInWater Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsMovementBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsMovementBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsMovementBlocked");

	Params::SHCharacterPlayMovementComponent_IsMovementBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsMovementBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsMovementBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsMovementBlockedBy");

	Params::SHCharacterPlayMovementComponent_IsMovementBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsMovingOnSlope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsMovingOnSlope() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsMovingOnSlope");

	Params::SHCharacterPlayMovementComponent_IsMovingOnSlope Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsOnStairs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsOnStairs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsOnStairs");

	Params::SHCharacterPlayMovementComponent_IsOnStairs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsPhysWalkingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsPhysWalkingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsPhysWalkingBlocked");

	Params::SHCharacterPlayMovementComponent_IsPhysWalkingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsRotateInPlaceBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsRotateInPlaceBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsRotateInPlaceBlocked");

	Params::SHCharacterPlayMovementComponent_IsRotateInPlaceBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsSprintBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsSprintBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsSprintBlocked");

	Params::SHCharacterPlayMovementComponent_IsSprintBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsSprintBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsSprintBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsSprintBlockedBy");

	Params::SHCharacterPlayMovementComponent_IsSprintBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayMovementComponent.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayMovementComponent::IsSprinting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMovementComponent", "IsSprinting");

	Params::SHCharacterPlayMovementComponent_IsSprinting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayLookAtLogicComponent.SHDebug_Character_LookAt_DrawDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayLookAtLogicComponent::SHDebug_Character_LookAt_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLookAtLogicComponent", "SHDebug_Character_LookAt_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLookAtLogicComponent.SHDebug_Character_LookAt_ValuesDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayLookAtLogicComponent::SHDebug_Character_LookAt_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLookAtLogicComponent", "SHDebug_Character_LookAt_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.CollectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ItemDataRowName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AddNewItemFlag                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::CollectItem(const class FName ItemDataRowName, int32 ItemQuantity, const bool AddNewItemFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "CollectItem");

	Params::SHCharacterPlayItemsComponent_CollectItem Parms{};

	Parms.ItemDataRowName = ItemDataRowName;
	Parms.ItemQuantity = ItemQuantity;
	Parms.AddNewItemFlag = AddNewItemFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.GetItemExecutive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASHItemExecutiveBase*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemExecutiveBase* USHCharacterPlayItemsComponent::GetItemExecutive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "GetItemExecutive");

	Params::SHCharacterPlayItemsComponent_GetItemExecutive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayItemsComponent.InvestigateCollectedItemRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InItemDataRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayItemsComponent::InvestigateCollectedItemRequest(const class FName& InItemDataRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "InvestigateCollectedItemRequest");

	Params::SHCharacterPlayItemsComponent_InvestigateCollectedItemRequest Parms{};

	Parms.InItemDataRowName = InItemDataRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayItemsComponent.OverrideFlashlightPocketState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShouldBeOpened                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::OverrideFlashlightPocketState(bool InShouldBeOpened, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "OverrideFlashlightPocketState");

	Params::SHCharacterPlayItemsComponent_OverrideFlashlightPocketState Parms{};

	Parms.InShouldBeOpened = InShouldBeOpened;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.ProcessOwnerCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::ProcessOwnerCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "ProcessOwnerCombatInputModeChanged");

	Params::SHCharacterPlayItemsComponent_ProcessOwnerCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.ProcessOwnerReceivedDamage
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::ProcessOwnerReceivedDamage(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "ProcessOwnerReceivedDamage");

	Params::SHCharacterPlayItemsComponent_ProcessOwnerReceivedDamage Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.RemoveItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ItemDataRowName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RemoveNewItemFlag                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::RemoveItem(const class FName ItemDataRowName, const int32 ItemQuantity, const bool RemoveNewItemFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "RemoveItem");

	Params::SHCharacterPlayItemsComponent_RemoveItem Parms{};

	Parms.ItemDataRowName = ItemDataRowName;
	Parms.ItemQuantity = ItemQuantity;
	Parms.RemoveNewItemFlag = RemoveNewItemFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SetInvestigateItemBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::SetInvestigateItemBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SetInvestigateItemBlocked");

	Params::SHCharacterPlayItemsComponent_SetInvestigateItemBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SetUseItemBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::SetUseItemBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SetUseItemBlocked");

	Params::SHCharacterPlayItemsComponent_SetUseItemBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_Give
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemRowName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_Give(const class FString& ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_Give");

	Params::SHCharacterPlayItemsComponent_SHDebug_Character_Items_Give Parms{};

	Parms.ItemRowName = std::move(ItemRowName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllCombineables
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllCombineables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllCombineables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllConsumables
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllConsumables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllConsumables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllEquipment
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllEquipment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllItems
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllMaps
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllMaps");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllReflections
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllReflections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllReflections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_GiveAllWeapons
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_GiveAllWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_GiveAllWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_PerformNotesScribble
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_PerformNotesScribble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_PerformNotesScribble");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_RemoveAllItems
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_RemoveAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_RemoveAllItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_UnlimitedAmmo
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_UnlimitedAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_UnlimitedAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayItemsComponent.SHDebug_Character_Items_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayItemsComponent::SHDebug_Character_Items_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHDebug_Character_Items_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHCharacterPlayItemsComponent.SHItemsComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::SHItemsComponentEvent__DelegateSignature(class USHCharacterPlayItemsComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHItemsComponentEvent__DelegateSignature");

	Params::SHCharacterPlayItemsComponent_SHItemsComponentEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHCharacterPlayItemsComponent.SHItemsComponentWithContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayItemsComponent::SHItemsComponentWithContextEvent__DelegateSignature(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "SHItemsComponentWithContextEvent__DelegateSignature");

	Params::SHCharacterPlayItemsComponent_SHItemsComponentWithContextEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayItemsComponent.GetItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ItemDataRowName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHCharacterPlayItemsComponent::GetItemCount(const class FName ItemDataRowName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "GetItemCount");

	Params::SHCharacterPlayItemsComponent_GetItemCount Parms{};

	Parms.ItemDataRowName = ItemDataRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayItemsComponent.HasItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ItemDataRowName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayItemsComponent::HasItem(const class FName ItemDataRowName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "HasItem");

	Params::SHCharacterPlayItemsComponent_HasItem Parms{};

	Parms.ItemDataRowName = ItemDataRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayItemsComponent.IsInvestigateItemBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayItemsComponent::IsInvestigateItemBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "IsInvestigateItemBlocked");

	Params::SHCharacterPlayItemsComponent_IsInvestigateItemBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayItemsComponent.IsUseItemBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayItemsComponent::IsUseItemBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayItemsComponent", "IsUseItemBlocked");

	Params::SHCharacterPlayItemsComponent_IsUseItemBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayLookAtInteractionTargetProvider.SHDebug_Character_LookAtInteraction_DrawDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayLookAtInteractionTargetProvider::SHDebug_Character_LookAtInteraction_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLookAtInteractionTargetProvider", "SHDebug_Character_LookAtInteraction_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushNClimbDesiredSpot.RelayAppliedManagedActorState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInDesiredSpotState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstantApply                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPushNClimbDesiredSpot::RelayAppliedManagedActorState(bool bIsInDesiredSpotState, bool bInstantApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushNClimbDesiredSpot", "RelayAppliedManagedActorState");

	Params::SHPushNClimbDesiredSpot_RelayAppliedManagedActorState Parms{};

	Parms.bIsInDesiredSpotState = bIsInDesiredSpotState;
	Parms.bInstantApply = bInstantApply;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHPushNClimbDesiredSpot.SHPushNClimbDesiredSpotEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHPushNClimbDesiredSpot*         DesiredSpot                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPushNClimbDesiredSpot::SHPushNClimbDesiredSpotEvent__DelegateSignature(class ASHPushNClimbDesiredSpot* DesiredSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushNClimbDesiredSpot", "SHPushNClimbDesiredSpotEvent__DelegateSignature");

	Params::SHPushNClimbDesiredSpot_SHPushNClimbDesiredSpotEvent__DelegateSignature Parms{};

	Parms.DesiredSpot = DesiredSpot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPushNClimbDesiredSpot.IsManagedActorInDesiredSpot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHPushNClimbDesiredSpot::IsManagedActorInDesiredSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushNClimbDesiredSpot", "IsManagedActorInDesiredSpot");

	Params::SHPushNClimbDesiredSpot_IsManagedActorInDesiredSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNPCIdleSubcomp.OnCustomIdleEnter
// (Final, Native, Public, BlueprintCallable)

void USHAnimNPCIdleSubcomp::OnCustomIdleEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCIdleSubcomp", "OnCustomIdleEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNPCIdleSubcomp.OnIdleLoopEnter
// (Final, Native, Public, BlueprintCallable)

void USHAnimNPCIdleSubcomp::OnIdleLoopEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCIdleSubcomp", "OnIdleLoopEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNPCIdleSubcomp.GetShouldPlayCustomIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAnimNPCIdleSubcomp::GetShouldPlayCustomIdle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCIdleSubcomp", "GetShouldPlayCustomIdle");

	Params::SHAnimNPCIdleSubcomp_GetShouldPlayCustomIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayStatisticsComponent.SHDebug_Character_Statistics_SetPlaytime
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InHours                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayStatisticsComponent::SHDebug_Character_Statistics_SetPlaytime(float InHours)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayStatisticsComponent", "SHDebug_Character_Statistics_SetPlaytime");

	Params::SHCharacterPlayStatisticsComponent_SHDebug_Character_Statistics_SetPlaytime Parms{};

	Parms.InHours = InHours;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayStatisticsComponent.SHDebug_Character_Statistics_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayStatisticsComponent::SHDebug_Character_Statistics_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayStatisticsComponent", "SHDebug_Character_Statistics_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayStatisticsComponent.StartWatchingEverEnabledRadio
// (Final, Native, Public, BlueprintCallable)

void USHCharacterPlayStatisticsComponent::StartWatchingEverEnabledRadio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayStatisticsComponent", "StartWatchingEverEnabledRadio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNPCObstaclesDetectSubcomp.GetSocketAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimNPCObstaclesDetectSubcomp::GetSocketAlpha(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCObstaclesDetectSubcomp", "GetSocketAlpha");

	Params::SHAnimNPCObstaclesDetectSubcomp_GetSocketAlpha Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNPCObstaclesDetectSubcomp.GetSocketCheckVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimNPCObstaclesDetectSubcomp::GetSocketCheckVector(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCObstaclesDetectSubcomp", "GetSocketCheckVector");

	Params::SHAnimNPCObstaclesDetectSubcomp_GetSocketCheckVector Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNPCObstaclesDetectSubcomp.GetSocketCheckVectorLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHAnimNPCObstaclesDetectSubcomp::GetSocketCheckVectorLength(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCObstaclesDetectSubcomp", "GetSocketCheckVectorLength");

	Params::SHAnimNPCObstaclesDetectSubcomp_GetSocketCheckVectorLength Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNPCObstaclesDetectSubcomp.GetSocketLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHAnimNPCObstaclesDetectSubcomp::GetSocketLocation(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNPCObstaclesDetectSubcomp", "GetSocketLocation");

	Params::SHAnimNPCObstaclesDetectSubcomp_GetSocketLocation Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimNurseHeadShakeSubcomp.OnHeadShakeFinish
// (Final, Native, Public, BlueprintCallable)

void USHAnimNurseHeadShakeSubcomp::OnHeadShakeFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNurseHeadShakeSubcomp", "OnHeadShakeFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimNurseHeadShakeSubcomp.OnHeadShakeStart
// (Final, Native, Public, BlueprintCallable)

void USHAnimNurseHeadShakeSubcomp::OnHeadShakeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimNurseHeadShakeSubcomp", "OnHeadShakeStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayRaycastDetectorComponent.SetHoverBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayRaycastDetectorComponent::SetHoverBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayRaycastDetectorComponent", "SetHoverBlocked");

	Params::SHCharacterPlayRaycastDetectorComponent_SetHoverBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayRaycastDetectorComponent.SetInteractBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayRaycastDetectorComponent::SetInteractBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayRaycastDetectorComponent", "SetInteractBlocked");

	Params::SHCharacterPlayRaycastDetectorComponent_SetInteractBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayRaycastDetectorComponent.IsHoverBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayRaycastDetectorComponent::IsHoverBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayRaycastDetectorComponent", "IsHoverBlocked");

	Params::SHCharacterPlayRaycastDetectorComponent_IsHoverBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayRaycastDetectorComponent.IsInteractBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayRaycastDetectorComponent::IsInteractBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayRaycastDetectorComponent", "IsInteractBlocked");

	Params::SHCharacterPlayRaycastDetectorComponent_IsInteractBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayLookAtEnemyTargetProvider.SHDebug_Character_LookAtEnemy_DrawDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayLookAtEnemyTargetProvider::SHDebug_Character_LookAtEnemy_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLookAtEnemyTargetProvider", "SHDebug_Character_LookAtEnemy_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimReviveSubcomp.SetActorOnBodyPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FReviveAnimationData             ReviveData                                             (Parm, NativeAccessSpecifierPublic)

void USHAnimReviveSubcomp::SetActorOnBodyPosition(const struct FReviveAnimationData& ReviveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimReviveSubcomp", "SetActorOnBodyPosition");

	Params::SHAnimReviveSubcomp_SetActorOnBodyPosition Parms{};

	Parms.ReviveData = std::move(ReviveData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAnimReviveSubcomp.GetReviveAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* USHAnimReviveSubcomp::GetReviveAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimReviveSubcomp", "GetReviveAnimation");

	Params::SHAnimReviveSubcomp_GetReviveAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimReviveSubcomp.GetReviveAnimationFromBodyPose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* USHAnimReviveSubcomp::GetReviveAnimationFromBodyPose() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimReviveSubcomp", "GetReviveAnimationFromBodyPose");

	Params::SHAnimReviveSubcomp_GetReviveAnimationFromBodyPose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAnimReviveSubcomp.GetReviveData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FReviveAnimationData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FReviveAnimationData USHAnimReviveSubcomp::GetReviveData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAnimReviveSubcomp", "GetReviveData");

	Params::SHAnimReviveSubcomp_GetReviveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemInvestigatedEndingValueProcessor.ProcessCollectedItemInvestigatedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemInvestigatedEndingValueProcessor::ProcessCollectedItemInvestigatedEvent(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigatedEndingValueProcessor", "ProcessCollectedItemInvestigatedEvent");

	Params::SHItemInvestigatedEndingValueProcessor_ProcessCollectedItemInvestigatedEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.GetObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObject                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldFallbackToSyncLoad                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* USHAsyncLoadRequestingComponent::GetObject(TSoftObjectPtr<class UObject> SoftObject, bool bShouldFallbackToSyncLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "GetObject");

	Params::SHAsyncLoadRequestingComponent_GetObject Parms{};

	Parms.SoftObject = SoftObject;
	Parms.bShouldFallbackToSyncLoad = bShouldFallbackToSyncLoad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHAsyncLoadRequestingComponent.PreloadAnimActionExecutive
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHAnimActionExecutiveBase>InAnimActionExeClass                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::PreloadAnimActionExecutive(const TSubclassOf<class USHAnimActionExecutiveBase>& InAnimActionExeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "PreloadAnimActionExecutive");

	Params::SHAsyncLoadRequestingComponent_PreloadAnimActionExecutive Parms{};

	Parms.InAnimActionExeClass = InAnimActionExeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.PreloadAnimationData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               InAnimationData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::PreloadAnimationData(const struct FPlayAnimationData& InAnimationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "PreloadAnimationData");

	Params::SHAsyncLoadRequestingComponent_PreloadAnimationData Parms{};

	Parms.InAnimationData = std::move(InAnimationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.PreloadCameraData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHCameraAnimationData           InCameraData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::PreloadCameraData(const struct FSHCameraAnimationData& InCameraData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "PreloadCameraData");

	Params::SHAsyncLoadRequestingComponent_PreloadCameraData Parms{};

	Parms.InCameraData = std::move(InCameraData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.PreloadDialog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDialogTalkID                    InDialogTalkID                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::PreloadDialog(const struct FDialogTalkID& InDialogTalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "PreloadDialog");

	Params::SHAsyncLoadRequestingComponent_PreloadDialog Parms{};

	Parms.InDialogTalkID = std::move(InDialogTalkID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.PreloadItemCollect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InItemName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::PreloadItemCollect(const class FName InItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "PreloadItemCollect");

	Params::SHAsyncLoadRequestingComponent_PreloadItemCollect Parms{};

	Parms.InItemName = InItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.ReleaseAllAssets
// (Final, Native, Public, BlueprintCallable)

void USHAsyncLoadRequestingComponent::ReleaseAllAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "ReleaseAllAssets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.ReleaseAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObject                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::ReleaseAsset(TSoftObjectPtr<class UObject> SoftObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "ReleaseAsset");

	Params::SHAsyncLoadRequestingComponent_ReleaseAsset Parms{};

	Parms.SoftObject = SoftObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.RequestAsyncLoad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObject                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKeepLoaded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::RequestAsyncLoad(TSoftObjectPtr<class UObject> SoftObject, bool bKeepLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "RequestAsyncLoad");

	Params::SHAsyncLoadRequestingComponent_RequestAsyncLoad Parms{};

	Parms.SoftObject = SoftObject;
	Parms.bKeepLoaded = bKeepLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.RequestAsyncLoadAnimActionExe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class USHAnimActionExecutiveBase>InAnimActionExeClass                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bKeepLoaded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::RequestAsyncLoadAnimActionExe(const TSubclassOf<class USHAnimActionExecutiveBase>& InAnimActionExeClass, bool bKeepLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "RequestAsyncLoadAnimActionExe");

	Params::SHAsyncLoadRequestingComponent_RequestAsyncLoadAnimActionExe Parms{};

	Parms.InAnimActionExeClass = InAnimActionExeClass;
	Parms.bKeepLoaded = bKeepLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHAsyncLoadRequestingComponent.RequestAsyncLoadSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSet<TSoftObjectPtr<class UObject>>     SoftObjects                                            (Parm, UObjectWrapper, NativeAccessSpecifierPublic)
// bool                                    bKeepLoaded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::RequestAsyncLoadSet(const TSet<TSoftObjectPtr<class UObject>>& SoftObjects, bool bKeepLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "RequestAsyncLoadSet");

	Params::SHAsyncLoadRequestingComponent_RequestAsyncLoadSet Parms{};

	Parms.SoftObjects = std::move(SoftObjects);
	Parms.bKeepLoaded = bKeepLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHAsyncLoadRequestingComponent.SHAsyncLoadReqEventWithObjectContext__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHAsyncLoadRequestingComponent*  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UObject>           SoftObjectContext                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHAsyncLoadRequestingComponent::SHAsyncLoadReqEventWithObjectContext__DelegateSignature(class USHAsyncLoadRequestingComponent* Component, TSoftObjectPtr<class UObject> SoftObjectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "SHAsyncLoadReqEventWithObjectContext__DelegateSignature");

	Params::SHAsyncLoadRequestingComponent_SHAsyncLoadReqEventWithObjectContext__DelegateSignature Parms{};

	Parms.Component = Component;
	Parms.SoftObjectContext = SoftObjectContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHAsyncLoadRequestingComponent.IsLoaded
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class USHAnimActionExecutiveBase>InAnimActionExeClass                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHAsyncLoadRequestingComponent::IsLoaded(const TSubclassOf<class USHAnimActionExecutiveBase>& InAnimActionExeClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHAsyncLoadRequestingComponent", "IsLoaded");

	Params::SHAsyncLoadRequestingComponent_IsLoaded Parms{};

	Parms.InAnimActionExeClass = InAnimActionExeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBaseMainMenuWidget.OnDlcDataUpdated
// (Event, Protected, BlueprintEvent)

void USHBaseMainMenuWidget::OnDlcDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBaseMainMenuWidget", "OnDlcDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemsStatics.DebugGiveItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FDataTableRowHandle>      InItemsHandles                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStatics::DebugGiveItems(const class UObject* WorldContextObject, const TArray<struct FDataTableRowHandle>& InItemsHandles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "DebugGiveItems");

	Params::SHItemsStatics_DebugGiveItems Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InItemsHandles = std::move(InItemsHandles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStatics.GetFlashlight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHFlashlight*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHFlashlight* USHItemsStatics::GetFlashlight(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "GetFlashlight");

	Params::SHItemsStatics_GetFlashlight Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.GetRadio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHRadio*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHRadio* USHItemsStatics::GetRadio(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "GetRadio");

	Params::SHItemsStatics_GetRadio Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.IsFlashlightInUse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::IsFlashlightInUse(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "IsFlashlightInUse");

	Params::SHItemsStatics_IsFlashlightInUse Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.IsPlayerInventoryEmpty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ItemsToIgnore                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::IsPlayerInventoryEmpty(class UObject* WorldContextObject, const TArray<class FName>& ItemsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "IsPlayerInventoryEmpty");

	Params::SHItemsStatics_IsPlayerInventoryEmpty Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemsToIgnore = std::move(ItemsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.PerformNotesScribble
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::PerformNotesScribble(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "PerformNotesScribble");

	Params::SHItemsStatics_PerformNotesScribble Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.PerformNotesScribbleMapContexted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHMapsEnum                             InMapContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::PerformNotesScribbleMapContexted(const class UObject* WorldContextObject, ESHMapsEnum InMapContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "PerformNotesScribbleMapContexted");

	Params::SHItemsStatics_PerformNotesScribbleMapContexted Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMapContext = InMapContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.PreloadAssetsForItemWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InItemWeaponName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsStatics::PreloadAssetsForItemWeapon(class UObject* Requester, class FName InItemWeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "PreloadAssetsForItemWeapon");

	Params::SHItemsStatics_PreloadAssetsForItemWeapon Parms{};

	Parms.Requester = Requester;
	Parms.InItemWeaponName = InItemWeaponName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStatics.ReleaseAssetsForItemWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InItemWeaponName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsStatics::ReleaseAssetsForItemWeapon(class UObject* Requester, class FName InItemWeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "ReleaseAssetsForItemWeapon");

	Params::SHItemsStatics_ReleaseAssetsForItemWeapon Parms{};

	Parms.Requester = Requester;
	Parms.InItemWeaponName = InItemWeaponName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStatics.ReleasePreloadedItemInvestigationAssets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsStatics::ReleasePreloadedItemInvestigationAssets(class UObject* Requester, class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "ReleasePreloadedItemInvestigationAssets");

	Params::SHItemsStatics_ReleasePreloadedItemInvestigationAssets Parms{};

	Parms.Requester = Requester;
	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStatics.RequestCollectAndInvestigateItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemDataRowName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::RequestCollectAndInvestigateItem(class UObject* WorldContextObject, class FName ItemDataRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "RequestCollectAndInvestigateItem");

	Params::SHItemsStatics_RequestCollectAndInvestigateItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDataRowName = ItemDataRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.RequestCollectItemWithNotify
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemDataRowName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::RequestCollectItemWithNotify(class UObject* WorldContextObject, class FName ItemDataRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "RequestCollectItemWithNotify");

	Params::SHItemsStatics_RequestCollectItemWithNotify Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDataRowName = ItemDataRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.RequestItemsSwap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemNameToRemove                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemNameToAdd                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAddOnlyIfRemovedWithSuccess                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStatics::RequestItemsSwap(class UObject* WorldContextObject, class FName ItemNameToRemove, class FName ItemNameToAdd, bool bAddOnlyIfRemovedWithSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "RequestItemsSwap");

	Params::SHItemsStatics_RequestItemsSwap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemNameToRemove = ItemNameToRemove;
	Parms.ItemNameToAdd = ItemNameToAdd;
	Parms.bAddOnlyIfRemovedWithSuccess = bAddOnlyIfRemovedWithSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStatics.RequestPreloadItemInvestigationAssets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsStatics::RequestPreloadItemInvestigationAssets(class UObject* Requester, class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStatics", "RequestPreloadItemInvestigationAssets");

	Params::SHItemsStatics_RequestPreloadItemInvestigationAssets Parms{};

	Parms.Requester = Requester;
	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBloodPuddle.EnableFadeAway
// (Final, Native, Public, BlueprintCallable)

void ASHBloodPuddle::EnableFadeAway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBloodPuddle", "EnableFadeAway");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBloodPuddle.OnFadeInCompleted
// (Event, Protected, BlueprintEvent)

void ASHBloodPuddle::OnFadeInCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBloodPuddle", "OnFadeInCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBloodPuddle.OnFadeOutCompleted
// (Event, Protected, BlueprintEvent)

void ASHBloodPuddle::OnFadeOutCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBloodPuddle", "OnFadeOutCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBloodPuddle.OnInitialized
// (Event, Protected, BlueprintEvent)

void ASHBloodPuddle::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBloodPuddle", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHBloodPuddle.IsFullyDeveloped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHBloodPuddle::IsFullyDeveloped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBloodPuddle", "IsFullyDeveloped");

	Params::SHBloodPuddle_IsFullyDeveloped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.ApplyArtificialHitReaction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHHitReactionResult             OutHitReactionResult                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSHHitReactionArtificialHitConfigurationInArtificialHitReactionConfiguration                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::ApplyArtificialHitReaction(struct FSHHitReactionResult* OutHitReactionResult, const struct FSHHitReactionArtificialHitConfiguration& InArtificialHitReactionConfiguration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "ApplyArtificialHitReaction");

	Params::SHHitReactionSubcomponent_ApplyArtificialHitReaction Parms{};

	Parms.InArtificialHitReactionConfiguration = std::move(InArtificialHitReactionConfiguration);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionResult != nullptr)
		*OutHitReactionResult = std::move(Parms.OutHitReactionResult);

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.ApplyHitReaction
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSHHitReactionResult             OutHitReactionResult                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationLimit                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionHitType                   InHitType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSourceLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSHHitReactionConfiguration      InHitReactionConfiguration                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::ApplyHitReaction(struct FSHHitReactionResult* OutHitReactionResult, const class UDamageType* InDamageType, ESHHitReactionResponseType InResponseType, class FName InResponseVariant, float InDurationLimit, float InForce, ESHHitReactionHitType InHitType, const struct FVector& InSourceLocation, class AActor* InDamageCauser, const struct FHitResult& HitInfo, const struct FSHHitReactionConfiguration& InHitReactionConfiguration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "ApplyHitReaction");

	Params::SHHitReactionSubcomponent_ApplyHitReaction Parms{};

	Parms.InDamageType = InDamageType;
	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;
	Parms.InDurationLimit = InDurationLimit;
	Parms.InForce = InForce;
	Parms.InHitType = InHitType;
	Parms.InSourceLocation = std::move(InSourceLocation);
	Parms.InDamageCauser = InDamageCauser;
	Parms.HitInfo = std::move(HitInfo);
	Parms.InHitReactionConfiguration = std::move(InHitReactionConfiguration);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionResult != nullptr)
		*OutHitReactionResult = std::move(Parms.OutHitReactionResult);

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.AreHitReactionsOfTypeDelayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::AreHitReactionsOfTypeDelayed(ESHHitReactionResponseType InResponseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "AreHitReactionsOfTypeDelayed");

	Params::SHHitReactionSubcomponent_AreHitReactionsOfTypeDelayed Parms{};

	Parms.InResponseType = InResponseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.CancelAllHitReactions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InInstant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::CancelAllHitReactions(bool InInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "CancelAllHitReactions");

	Params::SHHitReactionSubcomponent_CancelAllHitReactions Parms{};

	Parms.InInstant = InInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.CancelHitReactionsOfType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InInstant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::CancelHitReactionsOfType(ESHHitReactionResponseType InResponseType, bool InInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "CancelHitReactionsOfType");

	Params::SHHitReactionSubcomponent_CancelHitReactionsOfType Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InInstant = InInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.CancelHitReactionsOfTypeAndVariant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InInstant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::CancelHitReactionsOfTypeAndVariant(ESHHitReactionResponseType InResponseType, class FName InResponseVariant, bool InInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "CancelHitReactionsOfTypeAndVariant");

	Params::SHHitReactionSubcomponent_CancelHitReactionsOfTypeAndVariant Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;
	Parms.InInstant = InInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.CancelHitReactionsOfTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDeath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InKnockdown                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFalter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InStagger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTwitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InInstant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::CancelHitReactionsOfTypes(bool InDeath, bool InKnockdown, bool InFalter, bool InStagger, bool InNormal, bool InTwitch, bool InInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "CancelHitReactionsOfTypes");

	Params::SHHitReactionSubcomponent_CancelHitReactionsOfTypes Parms{};

	Parms.InDeath = InDeath;
	Parms.InKnockdown = InKnockdown;
	Parms.InFalter = InFalter;
	Parms.InStagger = InStagger;
	Parms.InNormal = InNormal;
	Parms.InTwitch = InTwitch;
	Parms.InInstant = InInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.ChooseAndApplyHitReaction
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSHHitReactionResult             OutHitReactionResult                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationLimit                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionHitType                   InHitType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSourceLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::ChooseAndApplyHitReaction(struct FSHHitReactionResult* OutHitReactionResult, const class UDamageType* InDamageType, ESHHitReactionResponseType InResponseType, class FName InResponseVariant, float InDurationLimit, float InForce, ESHHitReactionHitType InHitType, const struct FVector& InSourceLocation, class AActor* InDamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "ChooseAndApplyHitReaction");

	Params::SHHitReactionSubcomponent_ChooseAndApplyHitReaction Parms{};

	Parms.InDamageType = InDamageType;
	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;
	Parms.InDurationLimit = InDurationLimit;
	Parms.InForce = InForce;
	Parms.InHitType = InHitType;
	Parms.InSourceLocation = std::move(InSourceLocation);
	Parms.InDamageCauser = InDamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionResult != nullptr)
		*OutHitReactionResult = std::move(Parms.OutHitReactionResult);

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.DisableHitReactionTypeDelay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InApplyDelayedHitReactions                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     InDontApplyVariants                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::DisableHitReactionTypeDelay(ESHHitReactionResponseType InResponseType, bool InApplyDelayedHitReactions, const TArray<class FName>& InDontApplyVariants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "DisableHitReactionTypeDelay");

	Params::SHHitReactionSubcomponent_DisableHitReactionTypeDelay Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InApplyDelayedHitReactions = InApplyDelayedHitReactions;
	Parms.InDontApplyVariants = std::move(InDontApplyVariants);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.EnableHitReactionTypeDelay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     InDontDelayVariants                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::EnableHitReactionTypeDelay(ESHHitReactionResponseType InResponseType, const TArray<class FName>& InDontDelayVariants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "EnableHitReactionTypeDelay");

	Params::SHHitReactionSubcomponent_EnableHitReactionTypeDelay Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InDontDelayVariants = std::move(InDontDelayVariants);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.FinishAllHitReactions
// (Final, Native, Public, BlueprintCallable)

void USHHitReactionSubcomponent::FinishAllHitReactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FinishAllHitReactions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.FinishHitReactionsOfType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::FinishHitReactionsOfType(ESHHitReactionResponseType InResponseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FinishHitReactionsOfType");

	Params::SHHitReactionSubcomponent_FinishHitReactionsOfType Parms{};

	Parms.InResponseType = InResponseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.FinishHitReactionsOfTypeAndVariant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::FinishHitReactionsOfTypeAndVariant(ESHHitReactionResponseType InResponseType, class FName InResponseVariant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FinishHitReactionsOfTypeAndVariant");

	Params::SHHitReactionSubcomponent_FinishHitReactionsOfTypeAndVariant Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.FinishHitReactionsOfTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDeath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InKnockdown                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFalter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InStagger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTwitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::FinishHitReactionsOfTypes(bool InDeath, bool InKnockdown, bool InFalter, bool InStagger, bool InNormal, bool InTwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FinishHitReactionsOfTypes");

	Params::SHHitReactionSubcomponent_FinishHitReactionsOfTypes Parms{};

	Parms.InDeath = InDeath;
	Parms.InKnockdown = InKnockdown;
	Parms.InFalter = InFalter;
	Parms.InStagger = InStagger;
	Parms.InNormal = InNormal;
	Parms.InTwitch = InTwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.HitReactionStateEnded
// (Final, Native, Protected)
// Parameters:
// class USHHitReactionState*              InHitReactionState                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::HitReactionStateEnded(class USHHitReactionState* InHitReactionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "HitReactionStateEnded");

	Params::SHHitReactionSubcomponent_HitReactionStateEnded Parms{};

	Parms.InHitReactionState = InHitReactionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.HitReactionStateFinishing
// (Final, Native, Protected)
// Parameters:
// class USHHitReactionState*              InHitReactionState                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::HitReactionStateFinishing(class USHHitReactionState* InHitReactionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "HitReactionStateFinishing");

	Params::SHHitReactionSubcomponent_HitReactionStateFinishing Parms{};

	Parms.InHitReactionState = InHitReactionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.SetChangeHitReactionsSetDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInChangeHitReactionsSetDelayed                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::SetChangeHitReactionsSetDelayed(bool bInChangeHitReactionsSetDelayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "SetChangeHitReactionsSetDelayed");

	Params::SHHitReactionSubcomponent_SetChangeHitReactionsSetDelayed Parms{};

	Parms.bInChangeHitReactionsSetDelayed = bInChangeHitReactionsSetDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.SetHitReactionsDrawDebugEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDrawDebug                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::SetHitReactionsDrawDebugEnabled(bool InDrawDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "SetHitReactionsDrawDebugEnabled");

	Params::SHHitReactionSubcomponent_SetHitReactionsDrawDebugEnabled Parms{};

	Parms.InDrawDebug = InDrawDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.SetHitReactionsSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USHHitReactionsSet>InHitReactionsSet                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::SetHitReactionsSet(TSoftObjectPtr<class USHHitReactionsSet> InHitReactionsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "SetHitReactionsSet");

	Params::SHHitReactionSubcomponent_SetHitReactionsSet Parms{};

	Parms.InHitReactionsSet = InHitReactionsSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionSubcomponent.AreHitReactionsPreventingControllerRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::AreHitReactionsPreventingControllerRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "AreHitReactionsPreventingControllerRotation");

	Params::SHHitReactionSubcomponent_AreHitReactionsPreventingControllerRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.AreHitReactionsWantingDisabledAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::AreHitReactionsWantingDisabledAI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "AreHitReactionsWantingDisabledAI");

	Params::SHHitReactionSubcomponent_AreHitReactionsWantingDisabledAI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.ChooseHitReaction
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHHitReactionConfiguration      OutHitReactionConfiguration                            (Parm, OutParm, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionHitType                   InHitType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InSourceLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::ChooseHitReaction(struct FSHHitReactionConfiguration* OutHitReactionConfiguration, const class UDamageType* InDamageType, ESHHitReactionResponseType InResponseType, class FName InResponseVariant, float InForce, ESHHitReactionHitType InHitType, const struct FVector& InSourceLocation, class AActor* InDamageCauser, const struct FHitResult& HitInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "ChooseHitReaction");

	Params::SHHitReactionSubcomponent_ChooseHitReaction Parms{};

	Parms.InDamageType = InDamageType;
	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;
	Parms.InForce = InForce;
	Parms.InHitType = InHitType;
	Parms.InSourceLocation = std::move(InSourceLocation);
	Parms.InDamageCauser = InDamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionConfiguration != nullptr)
		*OutHitReactionConfiguration = std::move(Parms.OutHitReactionConfiguration);

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.FindActiveHitReactionVariants
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutHitReactionVariants                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeDelayed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::FindActiveHitReactionVariants(ESHHitReactionResponseType InResponseType, TArray<class FName>* OutHitReactionVariants, bool InIncludeFinishing, bool InIncludeDelayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FindActiveHitReactionVariants");

	Params::SHHitReactionSubcomponent_FindActiveHitReactionVariants Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InIncludeFinishing = InIncludeFinishing;
	Parms.InIncludeDelayed = InIncludeDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionVariants != nullptr)
		*OutHitReactionVariants = std::move(Parms.OutHitReactionVariants);
}


// Function SHProto.SHHitReactionSubcomponent.FindAllHitReactionStateIdentifiers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSHHitReactionIdentifier> OutHitReactionIdentifiers                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeDelayed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionSubcomponent::FindAllHitReactionStateIdentifiers(TArray<struct FSHHitReactionIdentifier>* OutHitReactionIdentifiers, bool InIncludeFinishing, bool InIncludeDelayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "FindAllHitReactionStateIdentifiers");

	Params::SHHitReactionSubcomponent_FindAllHitReactionStateIdentifiers Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;
	Parms.InIncludeDelayed = InIncludeDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitReactionIdentifiers != nullptr)
		*OutHitReactionIdentifiers = std::move(Parms.OutHitReactionIdentifiers);
}


// Function SHProto.SHHitReactionSubcomponent.HasAnyOfHitReactionStatesOfTypeInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InDeath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InKnockdown                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFalter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InStagger                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTwitch                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeDelayed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::HasAnyOfHitReactionStatesOfTypeInProgress(bool InDeath, bool InKnockdown, bool InFalter, bool InStagger, bool InNormal, bool InTwitch, bool InIncludeFinishing, bool InIncludeDelayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "HasAnyOfHitReactionStatesOfTypeInProgress");

	Params::SHHitReactionSubcomponent_HasAnyOfHitReactionStatesOfTypeInProgress Parms{};

	Parms.InDeath = InDeath;
	Parms.InKnockdown = InKnockdown;
	Parms.InFalter = InFalter;
	Parms.InStagger = InStagger;
	Parms.InNormal = InNormal;
	Parms.InTwitch = InTwitch;
	Parms.InIncludeFinishing = InIncludeFinishing;
	Parms.InIncludeDelayed = InIncludeDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.HasHitReactionStatesOfTypeAndVariantInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResponseVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeDelayed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::HasHitReactionStatesOfTypeAndVariantInProgress(ESHHitReactionResponseType InResponseType, class FName InResponseVariant, bool InIncludeFinishing, bool InIncludeDelayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "HasHitReactionStatesOfTypeAndVariantInProgress");

	Params::SHHitReactionSubcomponent_HasHitReactionStatesOfTypeAndVariantInProgress Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InResponseVariant = InResponseVariant;
	Parms.InIncludeFinishing = InIncludeFinishing;
	Parms.InIncludeDelayed = InIncludeDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.HasHitReactionStatesOfTypeInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionResponseType              InResponseType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeDelayed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::HasHitReactionStatesOfTypeInProgress(ESHHitReactionResponseType InResponseType, bool InIncludeFinishing, bool InIncludeDelayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "HasHitReactionStatesOfTypeInProgress");

	Params::SHHitReactionSubcomponent_HasHitReactionStatesOfTypeInProgress Parms{};

	Parms.InResponseType = InResponseType;
	Parms.InIncludeFinishing = InIncludeFinishing;
	Parms.InIncludeDelayed = InIncludeDelayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSubcomponent.IsUsingHitReactionsSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class USHHitReactionsSet>InHitReactionsSet                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCheckDelayedSet                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionSubcomponent::IsUsingHitReactionsSet(TSoftObjectPtr<class USHHitReactionsSet> InHitReactionsSet, bool InCheckDelayedSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSubcomponent", "IsUsingHitReactionsSet");

	Params::SHHitReactionSubcomponent_IsUsingHitReactionsSet Parms{};

	Parms.InHitReactionsSet = InHitReactionsSet;
	Parms.InCheckDelayedSet = InCheckDelayedSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaCombatComponent.GrabAborted
// (Final, Native, Public, BlueprintCallable)

void USHMariaCombatComponent::GrabAborted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "GrabAborted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaCombatComponent.GrabFinished
// (Final, Native, Public, BlueprintCallable)

void USHMariaCombatComponent::GrabFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "GrabFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaCombatComponent.GrabStarted
// (Final, Native, Public, BlueprintCallable)

void USHMariaCombatComponent::GrabStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "GrabStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaCombatComponent.InitBehaviors
// (Final, Native, Public, BlueprintCallable)

void USHMariaCombatComponent::InitBehaviors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "InitBehaviors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHMariaCombatComponent.SHMariaCombatBlueprintEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHMariaCombatComponent*          Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaCombatComponent::SHMariaCombatBlueprintEvent__DelegateSignature(class USHMariaCombatComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "SHMariaCombatBlueprintEvent__DelegateSignature");

	Params::SHMariaCombatComponent_SHMariaCombatBlueprintEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMariaCombatComponent.IsInDanger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaCombatComponent::IsInDanger() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "IsInDanger");

	Params::SHMariaCombatComponent_IsInDanger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaCombatComponent.IsInjured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaCombatComponent::IsInjured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "IsInjured");

	Params::SHMariaCombatComponent_IsInjured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaCombatComponent.WasAttacked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaCombatComponent::WasAttacked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "WasAttacked");

	Params::SHMariaCombatComponent_WasAttacked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaCombatComponent.WasSaved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaCombatComponent::WasSaved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaCombatComponent", "WasSaved");

	Params::SHMariaCombatComponent_WasSaved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHotelFWKilledAllDefenselessEnemiesEndingFactor.SHDebug_Character_Endings_HotelFWKilledAllDefenselessEnemiesEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHotelFWKilledAllDefenselessEnemiesEndingFactor::SHDebug_Character_Endings_HotelFWKilledAllDefenselessEnemiesEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHotelFWKilledAllDefenselessEnemiesEndingFactor", "SHDebug_Character_Endings_HotelFWKilledAllDefenselessEnemiesEndingFactor_SetDebugValue");

	Params::SHHotelFWKilledAllDefenselessEnemiesEndingFactor_SHDebug_Character_Endings_HotelFWKilledAllDefenselessEnemiesEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBossfightItemsManager.PerformManagementForPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPhaseIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHBossfightItemsManager::PerformManagementForPhase(int32 InPhaseIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBossfightItemsManager", "PerformManagementForPhase");

	Params::SHBossfightItemsManager_PerformManagementForPhase Parms{};

	Parms.InPhaseIndex = InPhaseIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHBreakableMeshComponent.ManualBreakRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBreakableMeshComponent::ManualBreakRequest(const class UObject* Requester)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "ManualBreakRequest");

	Params::SHBreakableMeshComponent_ManualBreakRequest Parms{};

	Parms.Requester = Requester;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SHProto.SHBreakableMeshComponent.SHBreakableMeshEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHBreakableMeshComponent*        Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHBreakableMeshComponent::SHBreakableMeshEvent__DelegateSignature(class USHBreakableMeshComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "SHBreakableMeshEvent__DelegateSignature");

	Params::SHBreakableMeshComponent_SHBreakableMeshEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHBreakableMeshComponent.SHBreakableMeshWithHitContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHBreakableMeshComponent*        Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          DamageTypeClass                                        (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHBreakableMeshComponent::SHBreakableMeshWithHitContextEvent__DelegateSignature(class USHBreakableMeshComponent* Component, TSubclassOf<class UDamageType> DamageTypeClass, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "SHBreakableMeshWithHitContextEvent__DelegateSignature");

	Params::SHBreakableMeshComponent_SHBreakableMeshWithHitContextEvent__DelegateSignature Parms{};

	Parms.Component = Component;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHBreakableMeshComponent.GetCurrentBrokenIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHBreakableMeshComponent::GetCurrentBrokenIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "GetCurrentBrokenIndex");

	Params::SHBreakableMeshComponent_GetCurrentBrokenIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBreakableMeshComponent.IsAfterLastBrokenStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CheckedIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBreakableMeshComponent::IsAfterLastBrokenStep(int32 CheckedIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "IsAfterLastBrokenStep");

	Params::SHBreakableMeshComponent_IsAfterLastBrokenStep Parms{};

	Parms.CheckedIndex = CheckedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHBreakableMeshComponent.IsLastBrokenStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CheckedIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHBreakableMeshComponent::IsLastBrokenStep(int32 CheckedIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHBreakableMeshComponent", "IsLastBrokenStep");

	Params::SHBreakableMeshComponent_IsLastBrokenStep Parms{};

	Parms.CheckedIndex = CheckedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.USHMariaPushComponent.CalculatePushedLoc
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          PushingLoc                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PushingNormal                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UUSHMariaPushComponent::CalculatePushedLoc(const struct FVector& PushingLoc, const struct FVector& PushingNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("USHMariaPushComponent", "CalculatePushedLoc");

	Params::USHMariaPushComponent_CalculatePushedLoc Parms{};

	Parms.PushingLoc = std::move(PushingLoc);
	Parms.PushingNormal = std::move(PushingNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayItemNotificationWidget.PlayGameNotFullyInstalledNotificationRequest
// (Final, Native, Public, BlueprintCallable)

void USHGameplayItemNotificationWidget::PlayGameNotFullyInstalledNotificationRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayItemNotificationWidget", "PlayGameNotFullyInstalledNotificationRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayItemNotificationWidget.CanShowNotification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplayItemNotificationWidget::CanShowNotification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayItemNotificationWidget", "CanShowNotification");

	Params::SHGameplayItemNotificationWidget_CanShowNotification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraAnimationExecutive.OnSequenceStopped
// (Final, Native, Protected)

void ASHCameraAnimationExecutive::OnSequenceStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraAnimationExecutive", "OnSequenceStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCameraAnimationExecutive.SetActorToAttachTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActorToAttachTo                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCameraAnimationExecutive::SetActorToAttachTo(class AActor* InActorToAttachTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraAnimationExecutive", "SetActorToAttachTo");

	Params::SHCameraAnimationExecutive_SetActorToAttachTo Parms{};

	Parms.InActorToAttachTo = InActorToAttachTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCameraAnimationExecutive.SetLockCharacterAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InLockCharacterAttachment                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCameraAnimationExecutive::SetLockCharacterAttachment(bool InLockCharacterAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraAnimationExecutive", "SetLockCharacterAttachment");

	Params::SHCameraAnimationExecutive_SetLockCharacterAttachment Parms{};

	Parms.InLockCharacterAttachment = InLockCharacterAttachment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCameraAnimationExecutive.SetLockCharacterAttachmentTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCameraAnimationExecutive::SetLockCharacterAttachmentTransform(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCameraAnimationExecutive", "SetLockCharacterAttachmentTransform");

	Params::SHCameraAnimationExecutive_SetLockCharacterAttachmentTransform Parms{};

	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteriorExteriorVolume.IsPointWithin
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHInteriorExteriorVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteriorExteriorVolume", "IsPointWithin");

	Params::SHInteriorExteriorVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.CreateAndPlayCameraAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHCameraAnimationData           CameraAnimData                                         (Parm, NativeAccessSpecifierPublic)
// class ASHCameraAnimationExecutive*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHCameraAnimationExecutive* USHCameraWorkStatics::CreateAndPlayCameraAnimation(class UObject* WorldContextObject, class ACharacter* Character, const struct FSHCameraAnimationData& CameraAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "CreateAndPlayCameraAnimation");

	Params::SHCameraWorkStatics_CreateAndPlayCameraAnimation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Character = Character;
	Parms.CameraAnimData = std::move(CameraAnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.CreateCameraAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHCameraAnimationData           CameraAnimData                                         (Parm, NativeAccessSpecifierPublic)
// class ASHCameraAnimationExecutive*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHCameraAnimationExecutive* USHCameraWorkStatics::CreateCameraAnimation(class UObject* WorldContextObject, const struct FSHCameraAnimationData& CameraAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "CreateCameraAnimation");

	Params::SHCameraWorkStatics_CreateCameraAnimation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CameraAnimData = std::move(CameraAnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.GetCameraAnimTracks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSequence*              Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMovieSceneTrack*>         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UMovieSceneTrack*> USHCameraWorkStatics::GetCameraAnimTracks(class UMovieSceneSequence* Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "GetCameraAnimTracks");

	Params::SHCameraWorkStatics_GetCameraAnimTracks Parms{};

	Parms.Sequence = Sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.GetCameraPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieSceneSequence*              Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> USHCameraWorkStatics::GetCameraPath(class UMovieSceneSequence* Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "GetCameraPath");

	Params::SHCameraWorkStatics_GetCameraPath Parms{};

	Parms.Sequence = Sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.PlayCameraAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASHCameraAnimationExecutive*      CameraAnimExe                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHCameraAnimationData           CameraAnimData                                         (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCameraWorkStatics::PlayCameraAnimation(class ASHCameraAnimationExecutive* CameraAnimExe, class ACharacter* Character, const struct FSHCameraAnimationData& CameraAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "PlayCameraAnimation");

	Params::SHCameraWorkStatics_PlayCameraAnimation Parms{};

	Parms.CameraAnimExe = CameraAnimExe;
	Parms.Character = Character;
	Parms.CameraAnimData = std::move(CameraAnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCameraWorkStatics.ValidateCameraAnimData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FSHCameraAnimationData           CameraAnimData                                         (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCameraWorkStatics::ValidateCameraAnimData(const struct FSHCameraAnimationData& CameraAnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHCameraWorkStatics", "ValidateCameraAnimData");

	Params::SHCameraWorkStatics_ValidateCameraAnimData Parms{};

	Parms.CameraAnimData = std::move(CameraAnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCarMovementProcessor.SetTransmissionRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCarMovementProcessor::SetTransmissionRatio(float InRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCarMovementProcessor", "SetTransmissionRatio");

	Params::SHCarMovementProcessor_SetTransmissionRatio Parms{};

	Parms.InRatio = InRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCarMovementProcessor.GetEngineRevolutionsPerMinute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHCarMovementProcessor::GetEngineRevolutionsPerMinute() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCarMovementProcessor", "GetEngineRevolutionsPerMinute");

	Params::SHCarMovementProcessor_GetEngineRevolutionsPerMinute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCarMovementProcessor.GetRotationInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCarMovementProcessor::GetRotationInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCarMovementProcessor", "GetRotationInput");

	Params::SHCarMovementProcessor_GetRotationInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteraction.ProcessInput
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Input                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameBaseInputDevice                    InputDevice                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHInteraction::ProcessInput(const struct FVector2D& Input, const EGameBaseInputDevice& InputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteraction", "ProcessInput");

	Params::SHInteraction_ProcessInput Parms{};

	Parms.Input = std::move(Input);
	Parms.InputDevice = InputDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteraction.TryStartInteraction
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISHInteractionSlot>InteractionSlot                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHInteraction::TryStartInteraction(const TScriptInterface<class ISHInteractionSlot>& InteractionSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteraction", "TryStartInteraction");

	Params::SHInteraction_TryStartInteraction Parms{};

	Parms.InteractionSlot = InteractionSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteraction.GetCleanupConfig
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHManagedInteractionSlotCleanupConfigReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSHManagedInteractionSlotCleanupConfig ISHInteraction::GetCleanupConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteraction", "GetCleanupConfig");

	Params::SHInteraction_GetCleanupConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteraction.IsInteractionActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHInteraction::IsInteractionActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteraction", "IsInteractionActive");

	Params::SHInteraction_IsInteractionActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteraction.IsOverridingCleanupConfig
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHInteraction::IsOverridingCleanupConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteraction", "IsOverridingCleanupConfig");

	Params::SHInteraction_IsOverridingCleanupConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAnimComponent.SHDebug_Character_AimOffset_Enabled
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayAnimComponent::SHDebug_Character_AimOffset_Enabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "SHDebug_Character_AimOffset_Enabled");

	Params::SHCharacterPlayAnimComponent_SHDebug_Character_AimOffset_Enabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAnimComponent.SHDebug_Character_Animation_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayAnimComponent::SHDebug_Character_Animation_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "SHDebug_Character_Animation_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayAnimComponent.ForceTposeDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayAnimComponent::ForceTposeDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "ForceTposeDebug");

	Params::SHCharacterPlayAnimComponent_ForceTposeDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAnimComponent.GetAimRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USHCharacterPlayAnimComponent::GetAimRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "GetAimRotation");

	Params::SHCharacterPlayAnimComponent_GetAimRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAnimComponent.GetCurrentRotationSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHCharacterPlayAnimComponent::GetCurrentRotationSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "GetCurrentRotationSpeed");

	Params::SHCharacterPlayAnimComponent_GetCurrentRotationSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAnimComponent.GetHealthStateAsMontageBlendspaceInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayAnimComponent::GetHealthStateAsMontageBlendspaceInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "GetHealthStateAsMontageBlendspaceInput");

	Params::SHCharacterPlayAnimComponent_GetHealthStateAsMontageBlendspaceInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayAnimComponent.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayAnimComponent::IsAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayAnimComponent", "IsAlive");

	Params::SHCharacterPlayAnimComponent_IsAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryAnimComponent.SetMaryMovementState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHMaryAnimInstanceMovementState        InMovementState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InMovementChangeInProgress                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMaryAnimComponent::SetMaryMovementState(ESHMaryAnimInstanceMovementState InMovementState, bool InMovementChangeInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimComponent", "SetMaryMovementState");

	Params::SHMaryAnimComponent_SetMaryMovementState Parms{};

	Parms.InMovementState = InMovementState;
	Parms.InMovementChangeInProgress = InMovementChangeInProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayBreathNoiseComponent.IsHoldingBreath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayBreathNoiseComponent::IsHoldingBreath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayBreathNoiseComponent", "IsHoldingBreath");

	Params::SHCharacterPlayBreathNoiseComponent_IsHoldingBreath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeapon.SetMeshHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InWantHidden                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemWeapon::SetMeshHidden(const bool InWantHidden, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeapon", "SetMeshHidden");

	Params::SHItemWeapon_SetMeshHidden Parms{};

	Parms.InWantHidden = InWantHidden;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemWeapon.HasEnabledAnyDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeapon::HasEnabledAnyDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeapon", "HasEnabledAnyDebug");

	Params::SHItemWeapon_HasEnabledAnyDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeapon.IsMeshHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeapon::IsMeshHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeapon", "IsMeshHidden");

	Params::SHItemWeapon_IsMeshHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.DrawAimDetailedDebug
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemWeaponRanged::DrawAimDetailedDebug(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "DrawAimDetailedDebug");

	Params::SHItemWeaponRanged_DrawAimDetailedDebug Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemWeaponRanged.OnFirePerformed
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ShootEndWorldLoc                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemWeaponRanged::OnFirePerformed(const struct FVector& ShootEndWorldLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "OnFirePerformed");

	Params::SHItemWeaponRanged_OnFirePerformed Parms{};

	Parms.ShootEndWorldLoc = std::move(ShootEndWorldLoc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemWeaponRanged.OnFireSpreadPerformed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  ShootsHitLoc                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ASHItemWeaponRanged::OnFireSpreadPerformed(const TArray<struct FVector>& ShootsHitLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "OnFireSpreadPerformed");

	Params::SHItemWeaponRanged_OnFireSpreadPerformed Parms{};

	Parms.ShootsHitLoc = std::move(ShootsHitLoc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemWeaponRanged.OnOutOfAmmoPerformed
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponRanged::OnOutOfAmmoPerformed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "OnOutOfAmmoPerformed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponRanged.OnShellEjected
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponRanged::OnShellEjected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "OnShellEjected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponRanged.RegisterFirePoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InPoint                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemWeaponRanged::RegisterFirePoint(class USceneComponent* InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "RegisterFirePoint");

	Params::SHItemWeaponRanged_RegisterFirePoint Parms{};

	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemWeaponRanged.TracePerfectForPointingData
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceRefresh                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHWeaponRangedPointingData      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSHWeaponRangedPointingData ASHItemWeaponRanged::TracePerfectForPointingData(bool bForceRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "TracePerfectForPointingData");

	Params::SHItemWeaponRanged_TracePerfectForPointingData Parms{};

	Parms.bForceRefresh = bForceRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.CanBeReloaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponRanged::CanBeReloaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "CanBeReloaded");

	Params::SHItemWeaponRanged_CanBeReloaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetCachedPerfectTraceCachedData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHWeaponRangedPointingData      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSHWeaponRangedPointingData ASHItemWeaponRanged::GetCachedPerfectTraceCachedData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetCachedPerfectTraceCachedData");

	Params::SHItemWeaponRanged_GetCachedPerfectTraceCachedData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetEndTraceLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ShootAngle                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        SpreadAngles                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHItemWeaponRanged::GetEndTraceLoc(const float ShootAngle, const struct FVector2D& SpreadAngles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetEndTraceLoc");

	Params::SHItemWeaponRanged_GetEndTraceLoc Parms{};

	Parms.ShootAngle = ShootAngle;
	Parms.SpreadAngles = std::move(SpreadAngles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetFocusValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHItemWeaponRanged::GetFocusValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetFocusValue");

	Params::SHItemWeaponRanged_GetFocusValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetPerfectShootVector
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHItemWeaponRanged::GetPerfectShootVector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetPerfectShootVector");

	Params::SHItemWeaponRanged_GetPerfectShootVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetRandomEndTraceLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHItemWeaponRanged::GetRandomEndTraceLoc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetRandomEndTraceLoc");

	Params::SHItemWeaponRanged_GetRandomEndTraceLoc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetSpreadShootVector
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        SpreadAngles                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHItemWeaponRanged::GetSpreadShootVector(const struct FVector2D& SpreadAngles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetSpreadShootVector");

	Params::SHItemWeaponRanged_GetSpreadShootVector Parms{};

	Parms.SpreadAngles = std::move(SpreadAngles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.GetStartTraceLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHItemWeaponRanged::GetStartTraceLoc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "GetStartTraceLoc");

	Params::SHItemWeaponRanged_GetStartTraceLoc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.HasAnyAmmoInClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponRanged::HasAnyAmmoInClip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "HasAnyAmmoInClip");

	Params::SHItemWeaponRanged_HasAnyAmmoInClip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.HasWeaponAmmoInInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponRanged::HasWeaponAmmoInInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "HasWeaponAmmoInInventory");

	Params::SHItemWeaponRanged_HasWeaponAmmoInInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponRanged.IsFireReady
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponRanged::IsFireReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponRanged", "IsFireReady");

	Params::SHItemWeaponRanged_IsFireReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.InteruptCombat
// (Final, Native, Public, BlueprintCallable)

void USHCharacterPlayCombatComponent::InteruptCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "InteruptCombat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCombatComponent.ReceiveDamage
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   DamageValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitDirection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>          DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayCombatComponent::ReceiveDamage(float DamageValue, const class UObject* Object, const struct FVector& HitDirection, const TSubclassOf<class UDamageType> DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "ReceiveDamage");

	Params::SHCharacterPlayCombatComponent_ReceiveDamage Parms{};

	Parms.DamageValue = DamageValue;
	Parms.Object = Object;
	Parms.HitDirection = std::move(HitDirection);
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.SetAllCombatBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayCombatComponent::SetAllCombatBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SetAllCombatBlocked");

	Params::SHCharacterPlayCombatComponent_SetAllCombatBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHCharacterPlayCombatComponent.SHCombatComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayCombatComponent*  ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayCombatComponent::SHCombatComponentEvent__DelegateSignature(class USHCharacterPlayCombatComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHCombatComponentEvent__DelegateSignature");

	Params::SHCharacterPlayCombatComponent_SHCombatComponentEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHCharacterPlayCombatComponent.SHCombatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USHCharacterPlayCombatComponent::SHCombatEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHCombatEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHCharacterPlayCombatComponent.SHDebug_Character_Combat_ActionsDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCombatComponent::SHDebug_Character_Combat_ActionsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHDebug_Character_Combat_ActionsDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCombatComponent.SHDebug_Character_Combat_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCombatComponent::SHDebug_Character_Combat_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHDebug_Character_Combat_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCombatComponent.SHDebug_Character_Combat_DrawSecondaryTargetsDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCombatComponent::SHDebug_Character_Combat_DrawSecondaryTargetsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHDebug_Character_Combat_DrawSecondaryTargetsDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCombatComponent.SHDebug_Character_Combat_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayCombatComponent::SHDebug_Character_Combat_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SHDebug_Character_Combat_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayCombatComponent.SynchroReceiveDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayAnimationData               AnimData                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCombatComponent::SynchroReceiveDamage(const class UObject* Object, const struct FPlayAnimationData& AnimData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "SynchroReceiveDamage");

	Params::SHCharacterPlayCombatComponent_SynchroReceiveDamage Parms{};

	Parms.Object = Object;
	Parms.AnimData = std::move(AnimData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.FindSubcomponentByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class USHCombatSubcomponentBase>SubcomponentClass                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHCombatSubcomponentBase*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHCombatSubcomponentBase* USHCharacterPlayCombatComponent::FindSubcomponentByClass(const TSubclassOf<class USHCombatSubcomponentBase> SubcomponentClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "FindSubcomponentByClass");

	Params::SHCharacterPlayCombatComponent_FindSubcomponentByClass Parms{};

	Parms.SubcomponentClass = SubcomponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.GetCombatInputMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHCombatInputModeEnum                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHCombatInputModeEnum USHCharacterPlayCombatComponent::GetCombatInputMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "GetCombatInputMode");

	Params::SHCharacterPlayCombatComponent_GetCombatInputMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.GetCombatPose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHCombatPoseType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHCombatPoseType USHCharacterPlayCombatComponent::GetCombatPose() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "GetCombatPose");

	Params::SHCharacterPlayCombatComponent_GetCombatPose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.GetDrawDebug
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCombatComponent::GetDrawDebug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "GetDrawDebug");

	Params::SHCharacterPlayCombatComponent_GetDrawDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayCombatComponent.IsAllCombatBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayCombatComponent::IsAllCombatBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayCombatComponent", "IsAllCombatBlocked");

	Params::SHCharacterPlayCombatComponent_IsAllCombatBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayDLCSkinStaticMeshComponent.SetShouldBeHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHidden                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayDLCSkinStaticMeshComponent::SetShouldBeHidden(const bool bInHidden, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayDLCSkinStaticMeshComponent", "SetShouldBeHidden");

	Params::SHCharacterPlayDLCSkinStaticMeshComponent_SetShouldBeHidden Parms{};

	Parms.bInHidden = bInHidden;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayDLCSkinStaticMeshComponent.ShouldBeHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayDLCSkinStaticMeshComponent::ShouldBeHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayDLCSkinStaticMeshComponent", "ShouldBeHidden");

	Params::SHCharacterPlayDLCSkinStaticMeshComponent_ShouldBeHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.K2_OnFleshLipTransformationStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHFleshLipAnimInstanceTransformationStateInTransformedInto                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipAnimInstance::K2_OnFleshLipTransformationStateChanged(ESHFleshLipAnimInstanceTransformationState InTransformedInto)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "K2_OnFleshLipTransformationStateChanged");

	Params::SHFleshLipAnimInstance_K2_OnFleshLipTransformationStateChanged Parms{};

	Parms.InTransformedInto = InTransformedInto;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFleshLipAnimInstance.StartChargeMovement
// (Final, Native, Public, BlueprintCallable)

void USHFleshLipAnimInstance::StartChargeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "StartChargeMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipAnimInstance.StopChargeMovement
// (Final, Native, Public, BlueprintCallable)

void USHFleshLipAnimInstance::StopChargeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "StopChargeMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipAnimInstance.GetActiveFleshLipLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipLocomotionAnimInstance* USHFleshLipAnimInstance::GetActiveFleshLipLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetActiveFleshLipLocomotionAnimInstance");

	Params::SHFleshLipAnimInstance_GetActiveFleshLipLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipAnimInstanceStateData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipAnimInstanceStateData* USHFleshLipAnimInstance::GetFleshLipAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipAnimInstanceStateData");

	Params::SHFleshLipAnimInstance_GetFleshLipAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipFallenLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipFallenLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipFallenLocomotionAnimInstance* USHFleshLipAnimInstance::GetFleshLipFallenLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipFallenLocomotionAnimInstance");

	Params::SHFleshLipAnimInstance_GetFleshLipFallenLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipFlyingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipFlyingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipFlyingLocomotionAnimInstance* USHFleshLipAnimInstance::GetFleshLipFlyingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipFlyingLocomotionAnimInstance");

	Params::SHFleshLipAnimInstance_GetFleshLipFlyingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipHangingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipHangingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipHangingLocomotionAnimInstance* USHFleshLipAnimInstance::GetFleshLipHangingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipHangingLocomotionAnimInstance");

	Params::SHFleshLipAnimInstance_GetFleshLipHangingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipLeftArmIsReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipAnimInstance::GetFleshLipLeftArmIsReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipLeftArmIsReleased");

	Params::SHFleshLipAnimInstance_GetFleshLipLeftArmIsReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipLegsAreReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipAnimInstance::GetFleshLipLegsAreReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipLegsAreReleased");

	Params::SHFleshLipAnimInstance_GetFleshLipLegsAreReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipRightArmIsReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipAnimInstance::GetFleshLipRightArmIsReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipRightArmIsReleased");

	Params::SHFleshLipAnimInstance_GetFleshLipRightArmIsReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipAnimInstance.GetFleshLipStandingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipStandingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipStandingLocomotionAnimInstance* USHFleshLipAnimInstance::GetFleshLipStandingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimInstance", "GetFleshLipStandingLocomotionAnimInstance");

	Params::SHFleshLipAnimInstance_GetFleshLipStandingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayEndingsComponent.SHDebug_Character_Endings_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayEndingsComponent::SHDebug_Character_Endings_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayEndingsComponent", "SHDebug_Character_Endings_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXManagerComponent.SHDebug_FX_ValuesDebug
// (Final, Exec, Native, Protected)

void USHFXManagerComponent::SHDebug_FX_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXManagerComponent", "SHDebug_FX_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayFXComponent.SHDebug_Character_FX_Rain_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayFXComponent::SHDebug_Character_FX_Rain_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayFXComponent", "SHDebug_Character_FX_Rain_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayFXComponent.SHDebug_Character_FX_Rain_EncompassesPointDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayFXComponent::SHDebug_Character_FX_Rain_EncompassesPointDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayFXComponent", "SHDebug_Character_FX_Rain_EncompassesPointDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayFXComponent.SHDebug_Character_FX_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayFXComponent::SHDebug_Character_FX_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayFXComponent", "SHDebug_Character_FX_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.PlayDeathSequenceRequest
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InSlayer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHitWorldDirection                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayHealthComponent::PlayDeathSequenceRequest(class UObject* InSlayer, const struct FVector& InHitWorldDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "PlayDeathSequenceRequest");

	Params::SHCharacterPlayHealthComponent_PlayDeathSequenceRequest Parms{};

	Parms.InSlayer = InSlayer;
	Parms.InHitWorldDirection = std::move(InHitWorldDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayHealthComponent.ReceiveDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DamageValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRequireCriticalnjuryState                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayHealthComponent::ReceiveDamage(float DamageValue, const class UObject* Object, bool bRequireCriticalnjuryState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "ReceiveDamage");

	Params::SHCharacterPlayHealthComponent_ReceiveDamage Parms{};

	Parms.DamageValue = DamageValue;
	Parms.Object = Object;
	Parms.bRequireCriticalnjuryState = bRequireCriticalnjuryState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayHealthComponent.ReceiveHeal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InHealValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayHealthComponent::ReceiveHeal(float InHealValue, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "ReceiveHeal");

	Params::SHCharacterPlayHealthComponent_ReceiveHeal Parms{};

	Parms.InHealValue = InHealValue;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayHealthComponent.SetDeathSequenceBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayHealthComponent::SetDeathSequenceBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SetDeathSequenceBlocked");

	Params::SHCharacterPlayHealthComponent_SetDeathSequenceBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_CantTouchThis
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_CantTouchThis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_CantTouchThis");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_DeathSequence_Debug
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_DeathSequence_Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_DeathSequence_Debug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_DisableReceiveDamageEffects
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_DisableReceiveDamageEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_DisableReceiveDamageEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_DrawHitpointsDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_DrawHitpointsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_DrawHitpointsDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_FakeDamage
// (Final, Exec, Native, Protected)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_FakeDamage(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_FakeDamage");

	Params::SHCharacterPlayHealthComponent_SHDebug_Character_Health_FakeDamage Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_FakeHeal
// (Final, Exec, Native, Protected)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_FakeHeal(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_FakeHeal");

	Params::SHCharacterPlayHealthComponent_SHDebug_Character_Health_FakeHeal Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_GodMode
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_GodMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_GodMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_NotEverybodyHurts
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_NotEverybodyHurts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_NotEverybodyHurts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.SHDebug_Character_Health_ValuesDebug
// (Final, Exec, Native, Protected)

void USHCharacterPlayHealthComponent::SHDebug_Character_Health_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHDebug_Character_Health_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHCharacterPlayHealthComponent.SHHealthComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayHealthComponent*  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayHealthComponent::SHHealthComponentEvent__DelegateSignature(class USHCharacterPlayHealthComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHHealthComponentEvent__DelegateSignature");

	Params::SHCharacterPlayHealthComponent_SHHealthComponentEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHCharacterPlayHealthComponent.SHHealthValueChangedDetailedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHCharacterPlayHealthComponent*  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeDelta                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayHealthComponent::SHHealthValueChangedDetailedEvent__DelegateSignature(class USHCharacterPlayHealthComponent* Component, float ChangeDelta, float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "SHHealthValueChangedDetailedEvent__DelegateSignature");

	Params::SHCharacterPlayHealthComponent_SHHealthValueChangedDetailedEvent__DelegateSignature Parms{};

	Parms.Component = Component;
	Parms.ChangeDelta = ChangeDelta;
	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayHealthComponent.UpdateControllerLights
// (Final, Native, Protected)

void USHCharacterPlayHealthComponent::UpdateControllerLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "UpdateControllerLights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayHealthComponent.GetHealthState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHealthStateEnum                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHHealthStateEnum USHCharacterPlayHealthComponent::GetHealthState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "GetHealthState");

	Params::SHCharacterPlayHealthComponent_GetHealthState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayHealthComponent.GetHealthValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHCharacterPlayHealthComponent::GetHealthValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "GetHealthValue");

	Params::SHCharacterPlayHealthComponent_GetHealthValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayHealthComponent.IsDeathSequenceBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayHealthComponent::IsDeathSequenceBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayHealthComponent", "IsDeathSequenceBlocked");

	Params::SHCharacterPlayHealthComponent_IsDeathSequenceBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionSlot.ProcessInteractionRequest
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISHInteraction>  Interaction                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHInteractionSlot::ProcessInteractionRequest(const TScriptInterface<class ISHInteraction>& Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionSlot", "ProcessInteractionRequest");

	Params::SHInteractionSlot_ProcessInteractionRequest Parms{};

	Parms.Interaction = Interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionSlot.HasInteraction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHInteractionSlot::HasInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionSlot", "HasInteraction");

	Params::SHInteractionSlot_HasInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGenericSlot.ProcessGenericInteractionStop
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHInteractionGenericStopData    StopData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ISHInteractionGenericSlot::ProcessGenericInteractionStop(const struct FSHInteractionGenericStopData& StopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericSlot", "ProcessGenericInteractionStop");

	Params::SHInteractionGenericSlot_ProcessGenericInteractionStop Parms{};

	Parms.StopData = std::move(StopData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLightingAlternative.HandleDisableCharacterLightsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    CurrentDisableCharacterLightsFlag                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLightingAlternative::HandleDisableCharacterLightsUpdated(bool CurrentDisableCharacterLightsFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightingAlternative", "HandleDisableCharacterLightsUpdated");

	Params::SHCharacterPlayLightingAlternative_HandleDisableCharacterLightsUpdated Parms{};

	Parms.CurrentDisableCharacterLightsFlag = CurrentDisableCharacterLightsFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayLightingAlternative.HandleFlashlightColorChanged
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FColor                           CurrentFlashlightColor                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLightingAlternative::HandleFlashlightColorChanged(const struct FColor& CurrentFlashlightColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightingAlternative", "HandleFlashlightColorChanged");

	Params::SHCharacterPlayLightingAlternative_HandleFlashlightColorChanged Parms{};

	Parms.CurrentFlashlightColor = std::move(CurrentFlashlightColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayLightingAlternative.HandleFlashlightIntensityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CurrentFlashlightIntensity                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLightingAlternative::HandleFlashlightIntensityChanged(float CurrentFlashlightIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightingAlternative", "HandleFlashlightIntensityChanged");

	Params::SHCharacterPlayLightingAlternative_HandleFlashlightIntensityChanged Parms{};

	Parms.CurrentFlashlightIntensity = CurrentFlashlightIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayLightingAlternative.HandleGlobalColorUpdated
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColorOverride                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLightingAlternative::HandleGlobalColorUpdated(const struct FLinearColor& InColorOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightingAlternative", "HandleGlobalColorUpdated");

	Params::SHCharacterPlayLightingAlternative_HandleGlobalColorUpdated Parms{};

	Parms.InColorOverride = std::move(InColorOverride);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayLightingAlternative.HandleGlobalIntensityMulUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CurrentGlobalIntensityMul                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHCharacterPlayLightingAlternative::HandleGlobalIntensityMulUpdated(float CurrentGlobalIntensityMul)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightingAlternative", "HandleGlobalIntensityMulUpdated");

	Params::SHCharacterPlayLightingAlternative_HandleGlobalIntensityMulUpdated Parms{};

	Parms.CurrentGlobalIntensityMul = CurrentGlobalIntensityMul;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHCharacterPlayLightsComponent.SHDebug_Character_Lights_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayLightsComponent::SHDebug_Character_Lights_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightsComponent", "SHDebug_Character_Lights_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLightsComponent.SHDebug_Character_Lights_Flashlight_DrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayLightsComponent::SHDebug_Character_Lights_Flashlight_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightsComponent", "SHDebug_Character_Lights_Flashlight_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLightsComponent.SHDebug_Character_Lights_Flashlight_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayLightsComponent::SHDebug_Character_Lights_Flashlight_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightsComponent", "SHDebug_Character_Lights_Flashlight_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayLightsComponent.SHDebug_Character_Lights_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayLightsComponent::SHDebug_Character_Lights_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayLightsComponent", "SHDebug_Character_Lights_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinLocomotionAnimInstance.CacheTurnInPlaceAngle
// (Final, Native, Public, BlueprintCallable)

void USHMandarinLocomotionAnimInstance::CacheTurnInPlaceAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinLocomotionAnimInstance", "CacheTurnInPlaceAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinLocomotionAnimInstance.GetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   OutVectorSize                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVectorYaw                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Smoothing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinLocomotionAnimInstance::GetDesiredVelocitySizeAndYaw(float* OutVectorSize, float* OutVectorYaw, float Smoothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinLocomotionAnimInstance", "GetDesiredVelocitySizeAndYaw");

	Params::SHMandarinLocomotionAnimInstance_GetDesiredVelocitySizeAndYaw Parms{};

	Parms.Smoothing = Smoothing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVectorSize != nullptr)
		*OutVectorSize = Parms.OutVectorSize;

	if (OutVectorYaw != nullptr)
		*OutVectorYaw = Parms.OutVectorYaw;
}


// Function SHProto.SHMandarinLocomotionAnimInstance.IsMandarinOver
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMandarinLocomotionAnimInstance::IsMandarinOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinLocomotionAnimInstance", "IsMandarinOver");

	Params::SHMandarinLocomotionAnimInstance_IsMandarinOver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinLocomotionAnimInstance.GetMandarinAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMandarinAnimInstanceStateData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMandarinAnimInstanceStateData* USHMandarinLocomotionAnimInstance::GetMandarinAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinLocomotionAnimInstance", "GetMandarinAnimInstanceStateData");

	Params::SHMandarinLocomotionAnimInstance_GetMandarinAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHMandarinLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHCharacterPlayMapComponent.AddFogRevealObjectToApply
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSHMapFogRevealObjectData        MapFogRevealObjectData                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USHCharacterPlayMapComponent::AddFogRevealObjectToApply(const struct FSHMapFogRevealObjectData& MapFogRevealObjectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "AddFogRevealObjectToApply");

	Params::SHCharacterPlayMapComponent_AddFogRevealObjectToApply Parms{};

	Parms.MapFogRevealObjectData = std::move(MapFogRevealObjectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMapComponent.AddOrUpdateDynamicObjectData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHMapDynamicObjectDataStruct    MapDynamicObjectData                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHCharacterPlayMapComponent::AddOrUpdateDynamicObjectData(const struct FSHMapDynamicObjectDataStruct& MapDynamicObjectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "AddOrUpdateDynamicObjectData");

	Params::SHCharacterPlayMapComponent_AddOrUpdateDynamicObjectData Parms{};

	Parms.MapDynamicObjectData = std::move(MapDynamicObjectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMapComponent.AddOrUpdateObjectData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHMapObjectDataStruct           MapObjectData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHCharacterPlayMapComponent::AddOrUpdateObjectData(const struct FSHMapObjectDataStruct& MapObjectData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "AddOrUpdateObjectData");

	Params::SHCharacterPlayMapComponent_AddOrUpdateObjectData Parms{};

	Parms.MapObjectData = std::move(MapObjectData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMapComponent.AddOrUpdateObjectDataArray
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSHMapObjectDataStruct>   MapObjectDataArray                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHCharacterPlayMapComponent::AddOrUpdateObjectDataArray(const TArray<struct FSHMapObjectDataStruct>& MapObjectDataArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "AddOrUpdateObjectDataArray");

	Params::SHCharacterPlayMapComponent_AddOrUpdateObjectDataArray Parms{};

	Parms.MapObjectDataArray = std::move(MapObjectDataArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMapComponent.TryOverrideObjectType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHMapDataConfigStruct           ExistingMapObjectConfig                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ESHMapObjectTypeEnum                    InNewType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayMapComponent::TryOverrideObjectType(const struct FSHMapDataConfigStruct& ExistingMapObjectConfig, ESHMapObjectTypeEnum InNewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "TryOverrideObjectType");

	Params::SHCharacterPlayMapComponent_TryOverrideObjectType Parms{};

	Parms.ExistingMapObjectConfig = std::move(ExistingMapObjectConfig);
	Parms.InNewType = InNewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayMapComponent.FindObjectDataValue
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ObjectID                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHMapsEnum                             Map                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHCharacterPlayMapComponent::FindObjectDataValue(const class FName& ObjectID, ESHMapsEnum Map) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayMapComponent", "FindObjectDataValue");

	Params::SHCharacterPlayMapComponent_FindObjectDataValue Parms{};

	Parms.ObjectID = ObjectID;
	Parms.Map = Map;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMannequinLocomotionAnimInstance.GetMannequinAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMannequinAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMannequinAnimInstanceStateData* USHMannequinLocomotionAnimInstance::GetMannequinAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinLocomotionAnimInstance", "GetMannequinAnimInstanceStateData");

	Params::SHMannequinLocomotionAnimInstance_GetMannequinAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHMannequinStandingLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHMannequinStandingLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHMannequinStandingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirectionYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InToleranceAngle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection(float* OutVelocitySize, float* OutVelocityYaw, float InDirectionYaw, float InToleranceAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection");

	Params::SHMannequinStandingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYawLimitedToDirection Parms{};

	Parms.InDirectionYaw = InDirectionYaw;
	Parms.InToleranceAngle = InToleranceAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHMannequinStandingLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHMannequinStandingLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHMannequinStandingLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHMannequinStandingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYawLimitedToDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirectionYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InToleranceAngle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYawLimitedToDirection(float* OutVelocitySize, float* OutVelocityYaw, float InDirectionYaw, float InToleranceAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYawLimitedToDirection");

	Params::SHMannequinStandingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYawLimitedToDirection Parms{};

	Parms.InDirectionYaw = InDirectionYaw;
	Parms.InToleranceAngle = InToleranceAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHMannequinStandingLocomotionAnimInstance.GetTargetLookAtAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMannequinStandingLocomotionAnimInstance::GetTargetLookAtAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinStandingLocomotionAnimInstance", "GetTargetLookAtAlpha");

	Params::SHMannequinStandingLocomotionAnimInstance_GetTargetLookAtAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHCharacterPlayTraversalComponent.ProcessTraversalEndedEvent
// (Final, Native, Protected)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComp                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayTraversalComponent::ProcessTraversalEndedEvent(class USHTraversalBaseComponent* InTraversalComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTraversalComponent", "ProcessTraversalEndedEvent");

	Params::SHCharacterPlayTraversalComponent_ProcessTraversalEndedEvent Parms{};

	Parms.InTraversalComp = InTraversalComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTraversalComponent.ProcessTraversalStartedEvent
// (Final, Native, Protected)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComp                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayTraversalComponent::ProcessTraversalStartedEvent(class USHTraversalBaseComponent* InTraversalComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTraversalComponent", "ProcessTraversalStartedEvent");

	Params::SHCharacterPlayTraversalComponent_ProcessTraversalStartedEvent Parms{};

	Parms.InTraversalComp = InTraversalComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTraversalComponent.SHDebug_Character_Traversal_ClimbDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayTraversalComponent::SHDebug_Character_Traversal_ClimbDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTraversalComponent", "SHDebug_Character_Traversal_ClimbDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTraversalComponent.SHDebug_Character_Traversal_ClimbPrintDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayTraversalComponent::SHDebug_Character_Traversal_ClimbPrintDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTraversalComponent", "SHDebug_Character_Traversal_ClimbPrintDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayTraversalComponent.SHDebug_Character_Traversal_ObstacleDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayTraversalComponent::SHDebug_Character_Traversal_ObstacleDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayTraversalComponent", "SHDebug_Character_Traversal_ObstacleDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayUIComponent.SHDebug_Tool_Hide
// (Final, Exec, Native, Public)

void USHCharacterPlayUIComponent::SHDebug_Tool_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayUIComponent", "SHDebug_Tool_Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayUIComponent.SHDebug_Tool_Show
// (Final, Exec, Native, Public)

void USHCharacterPlayUIComponent::SHDebug_Tool_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayUIComponent", "SHDebug_Tool_Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayUIComponent.GetGameplayHudWidgetPointer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHGameplayHudWidget*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHGameplayHudWidget* USHCharacterPlayUIComponent::GetGameplayHudWidgetPointer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayUIComponent", "GetGameplayHudWidgetPointer");

	Params::SHCharacterPlayUIComponent_GetGameplayHudWidgetPointer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.AddToControlRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         RotationToAdd                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayViewComponent::AddToControlRotation(const struct FRotator& RotationToAdd, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "AddToControlRotation");

	Params::SHCharacterPlayViewComponent_AddToControlRotation Parms{};

	Parms.RotationToAdd = std::move(RotationToAdd);
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.ClearRotationScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayViewComponent::ClearRotationScale(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "ClearRotationScale");

	Params::SHCharacterPlayViewComponent_ClearRotationScale Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.LookAtLocationAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotateDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayViewComponent::LookAtLocationAbsolute(const struct FVector& Location, float RotateDuration, const class UObject* Object, float OffsetAngle, class UCurveFloat* InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "LookAtLocationAbsolute");

	Params::SHCharacterPlayViewComponent_LookAtLocationAbsolute Parms{};

	Parms.Location = std::move(Location);
	Parms.RotateDuration = RotateDuration;
	Parms.Object = Object;
	Parms.OffsetAngle = OffsetAngle;
	Parms.InCurve = InCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.LookAtRotationAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RotateDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OffsetAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayViewComponent::LookAtRotationAbsolute(const struct FRotator& Rotation, float RotateDuration, const class UObject* Object, float OffsetAngle, class UCurveFloat* InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "LookAtRotationAbsolute");

	Params::SHCharacterPlayViewComponent_LookAtRotationAbsolute Parms{};

	Parms.Rotation = std::move(Rotation);
	Parms.RotateDuration = RotateDuration;
	Parms.Object = Object;
	Parms.OffsetAngle = OffsetAngle;
	Parms.InCurve = InCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.LookOperationComp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotateDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHViewLookOperationSettings     InSettings                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayViewComponent::LookOperationComp(class USceneComponent* InComponent, float RotateDuration, const class UObject* Object, const struct FSHViewLookOperationSettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "LookOperationComp");

	Params::SHCharacterPlayViewComponent_LookOperationComp Parms{};

	Parms.InComponent = InComponent;
	Parms.RotateDuration = RotateDuration;
	Parms.Object = Object;
	Parms.InSettings = std::move(InSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.LookOperationLoc
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotateDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHViewLookOperationSettings     InSettings                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayViewComponent::LookOperationLoc(const struct FVector& Location, float RotateDuration, const class UObject* Object, const struct FSHViewLookOperationSettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "LookOperationLoc");

	Params::SHCharacterPlayViewComponent_LookOperationLoc Parms{};

	Parms.Location = std::move(Location);
	Parms.RotateDuration = RotateDuration;
	Parms.Object = Object;
	Parms.InSettings = std::move(InSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.LookOperationRot
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   RotateDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHViewLookOperationSettings     InSettings                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class USHOperationEvents*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHOperationEvents* USHCharacterPlayViewComponent::LookOperationRot(const struct FRotator& Rotation, float RotateDuration, const class UObject* Object, const struct FSHViewLookOperationSettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "LookOperationRot");

	Params::SHCharacterPlayViewComponent_LookOperationRot Parms{};

	Parms.Rotation = std::move(Rotation);
	Parms.RotateDuration = RotateDuration;
	Parms.Object = Object;
	Parms.InSettings = std::move(InSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.OverrideControlRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewControlRotation                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayViewComponent::OverrideControlRotation(const struct FRotator& NewControlRotation, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "OverrideControlRotation");

	Params::SHCharacterPlayViewComponent_OverrideControlRotation Parms{};

	Parms.NewControlRotation = std::move(NewControlRotation);
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.ResetLookOperation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayViewComponent::ResetLookOperation(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "ResetLookOperation");

	Params::SHCharacterPlayViewComponent_ResetLookOperation Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.SetRotationBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayViewComponent::SetRotationBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "SetRotationBlocked");

	Params::SHCharacterPlayViewComponent_SetRotationBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.SetRotationScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharacterPlayViewComponent::SetRotationScale(const float Scale, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "SetRotationScale");

	Params::SHCharacterPlayViewComponent_SetRotationScale Parms{};

	Parms.Scale = Scale;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.SHDebug_Character_View_LookOperationDrawDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayViewComponent::SHDebug_Character_View_LookOperationDrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "SHDebug_Character_View_LookOperationDrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.SHDebug_Character_View_ValuesDebug
// (Final, Exec, Native, Public)

void USHCharacterPlayViewComponent::SHDebug_Character_View_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "SHDebug_Character_View_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharacterPlayViewComponent.GetViewDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHCharacterPlayViewComponent::GetViewDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "GetViewDirection");

	Params::SHCharacterPlayViewComponent_GetViewDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.GetViewLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector USHCharacterPlayViewComponent::GetViewLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "GetViewLocation");

	Params::SHCharacterPlayViewComponent_GetViewLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.GetViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRotator                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FRotator USHCharacterPlayViewComponent::GetViewRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "GetViewRotation");

	Params::SHCharacterPlayViewComponent_GetViewRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharacterPlayViewComponent.IsRotationBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharacterPlayViewComponent::IsRotationBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharacterPlayViewComponent", "IsRotationBlocked");

	Params::SHCharacterPlayViewComponent_IsRotationBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFogCutoutActor.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFogCutoutActor::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFogCutoutActor", "SetEnabled");

	Params::SHFogCutoutActor_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCharAnimationInstance.GetAllPlayingSlotAnimationSlotNames
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USHCharAnimationInstance::GetAllPlayingSlotAnimationSlotNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "GetAllPlayingSlotAnimationSlotNames");

	Params::SHCharAnimationInstance_GetAllPlayingSlotAnimationSlotNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharAnimationInstance.GetEquippedWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemWeapon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemWeapon* USHCharAnimationInstance::GetEquippedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "GetEquippedWeapon");

	Params::SHCharAnimationInstance_GetEquippedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharAnimationInstance.GetPlayingSlotAnimationSlotNames
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USHCharAnimationInstance::GetPlayingSlotAnimationSlotNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "GetPlayingSlotAnimationSlotNames");

	Params::SHCharAnimationInstance_GetPlayingSlotAnimationSlotNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharAnimationInstance.GetSpeedWarpingForcedMultiplier
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ForcedValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCharAnimationInstance::GetSpeedWarpingForcedMultiplier(bool* Enabled, float* ForcedValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "GetSpeedWarpingForcedMultiplier");

	Params::SHCharAnimationInstance_GetSpeedWarpingForcedMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;

	if (ForcedValue != nullptr)
		*ForcedValue = Parms.ForcedValue;
}


// Function SHProto.SHCharAnimationInstance.IsAimingWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharAnimationInstance::IsAimingWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "IsAimingWeapon");

	Params::SHCharAnimationInstance_IsAimingWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharAnimationInstance.IsChangingWeaponActionPlaying
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharAnimationInstance::IsChangingWeaponActionPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "IsChangingWeaponActionPlaying");

	Params::SHCharAnimationInstance_IsChangingWeaponActionPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCharAnimationInstance.IsCharacterCorrectivePostprocessEnabled
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHCharAnimationInstance::IsCharacterCorrectivePostprocessEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCharAnimationInstance", "IsCharacterCorrectivePostprocessEnabled");

	Params::SHCharAnimationInstance_IsCharacterCorrectivePostprocessEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFriendAnimInstance.GetFriendAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFriendAnimInstanceStateData*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFriendAnimInstanceStateData* USHFriendAnimInstance::GetFriendAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFriendAnimInstance", "GetFriendAnimInstanceStateData");

	Params::SHFriendAnimInstance_GetFriendAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFriendAnimInstance.GetFriendLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHFriendLocomotionAnimInstance*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFriendLocomotionAnimInstance* USHFriendAnimInstance::GetFriendLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFriendAnimInstance", "GetFriendLocomotionAnimInstance");

	Params::SHFriendAnimInstance_GetFriendLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHChAudioHealthSubcomponent.ReleaseDeathHealthState
// (Final, Native, Public, BlueprintCallable)

void USHChAudioHealthSubcomponent::ReleaseDeathHealthState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHChAudioHealthSubcomponent", "ReleaseDeathHealthState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHChAudioHealthSubcomponent.RequestDeathHealthState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHChAudioHealthSubcomponent::RequestDeathHealthState(class UObject* Requester)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHChAudioHealthSubcomponent", "RequestDeathHealthState");

	Params::SHChAudioHealthSubcomponent_RequestDeathHealthState Parms{};

	Parms.Requester = Requester;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlightMainLightOffsetBlender.GetAssignedValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHFlashlightMainLightOffsetBlender::GetAssignedValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlightMainLightOffsetBlender", "GetAssignedValue");

	Params::SHFlashlightMainLightOffsetBlender_GetAssignedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.ProcessFootstep
// (Final, Native, Protected)
// Parameters:
// EFoot                                   Foot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABeingFootstep*                   Footstep                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXPukePuddleDamageSubcomp::ProcessFootstep(EFoot Foot, class ABeingFootstep* Footstep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "ProcessFootstep");

	Params::SHFXPukePuddleDamageSubcomp_ProcessFootstep Parms{};

	Parms.Foot = Foot;
	Parms.Footstep = Footstep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.SetPuddleDamageBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXPukePuddleDamageSubcomp::SetPuddleDamageBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "SetPuddleDamageBlocked");

	Params::SHFXPukePuddleDamageSubcomp_SetPuddleDamageBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.GetPukeActivePuddlesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXPukePuddleDamageSubcomp::GetPukeActivePuddlesCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "GetPukeActivePuddlesCount");

	Params::SHFXPukePuddleDamageSubcomp_GetPukeActivePuddlesCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.GetPukePuddlesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXPukePuddleDamageSubcomp::GetPukePuddlesCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "GetPukePuddlesCount");

	Params::SHFXPukePuddleDamageSubcomp_GetPukePuddlesCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.IsPuddleDamageBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXPukePuddleDamageSubcomp::IsPuddleDamageBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "IsPuddleDamageBlocked");

	Params::SHFXPukePuddleDamageSubcomp_IsPuddleDamageBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXPukePuddleDamageSubcomp.IsPuddleDamageBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXPukePuddleDamageSubcomp::IsPuddleDamageBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPukePuddleDamageSubcomp", "IsPuddleDamageBlockedBy");

	Params::SHFXPukePuddleDamageSubcomp_IsPuddleDamageBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHChAudioStatesSubcomponent.RequestBossFightState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Requester                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHChAudioStatesSubcomponent::RequestBossFightState(bool bInState, const class UObject* Requester)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHChAudioStatesSubcomponent", "RequestBossFightState");

	Params::SHChAudioStatesSubcomponent_RequestBossFightState Parms{};

	Parms.bInState = bInState;
	Parms.Requester = Requester;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetFleshLipAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFleshLipAnimInstanceStateData* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFleshLipAnimInstanceStateData* USHFleshLipLocomotionAnimInstance::GetFleshLipAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetFleshLipAnimInstanceStateData");

	Params::SHFleshLipLocomotionAnimInstance_GetFleshLipAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetFleshLipLeftArmIsReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipLocomotionAnimInstance::GetFleshLipLeftArmIsReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetFleshLipLeftArmIsReleased");

	Params::SHFleshLipLocomotionAnimInstance_GetFleshLipLeftArmIsReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetFleshLipLegsAreReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipLocomotionAnimInstance::GetFleshLipLegsAreReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetFleshLipLegsAreReleased");

	Params::SHFleshLipLocomotionAnimInstance_GetFleshLipLegsAreReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetFleshLipRightArmIsReleased
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipLocomotionAnimInstance::GetFleshLipRightArmIsReleased() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetFleshLipRightArmIsReleased");

	Params::SHFleshLipLocomotionAnimInstance_GetFleshLipRightArmIsReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHFleshLipLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHFleshLipLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHFleshLipLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHFleshLipLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHFleshLipLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHFleshLipLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHFleshLipLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHFleshLipLocomotionAnimInstance.GetTargetLookAtAlpha
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipLocomotionAnimInstance::GetTargetLookAtAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipLocomotionAnimInstance", "GetTargetLookAtAlpha");

	Params::SHFleshLipLocomotionAnimInstance_GetTargetLookAtAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHGameplayRangedWeaponDetailsWidget.ProcessEquippedWeaponModifiedEvent
// (Final, Native, Protected)
// Parameters:
// class USHWeaponManageCmbSubcomp*        WeaponManagement                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayRangedWeaponDetailsWidget::ProcessEquippedWeaponModifiedEvent(class USHWeaponManageCmbSubcomp* WeaponManagement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayRangedWeaponDetailsWidget", "ProcessEquippedWeaponModifiedEvent");

	Params::SHGameplayRangedWeaponDetailsWidget_ProcessEquippedWeaponModifiedEvent Parms{};

	Parms.WeaponManagement = WeaponManagement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayRangedWeaponDetailsWidget.ProcessRangedAimStateChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedManagement                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayRangedWeaponDetailsWidget::ProcessRangedAimStateChangedEvent(class USHRangedCmbSubcomp* RangedManagement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayRangedWeaponDetailsWidget", "ProcessRangedAimStateChangedEvent");

	Params::SHGameplayRangedWeaponDetailsWidget_ProcessRangedAimStateChangedEvent Parms{};

	Parms.RangedManagement = RangedManagement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCineCameraComponent.TrackCharacterBone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       InCharacter                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCharacterBoneName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCineCameraComponent::TrackCharacterBone(class ACharacter* InCharacter, class FName InCharacterBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCineCameraComponent", "TrackCharacterBone");

	Params::SHCineCameraComponent_TrackCharacterBone Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InCharacterBoneName = InCharacterBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCineCameraComponent.TrackComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCineCameraComponent::TrackComponent(class USceneComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCineCameraComponent", "TrackComponent");

	Params::SHCineCameraComponent_TrackComponent Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCineCameraComponent.TrackSkeletalMeshBone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCineCameraComponent::TrackSkeletalMeshBone(class USkeletalMeshComponent* InComponent, class FName InBoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCineCameraComponent", "TrackSkeletalMeshBone");

	Params::SHCineCameraComponent_TrackSkeletalMeshBone Parms{};

	Parms.InComponent = InComponent;
	Parms.InBoneName = InBoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.ApplyTilesPressure
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPushDepth                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLimitedByBars                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIfTileExistsAtLocation                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InParticlesSpawnAlphaThreshold                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::ApplyTilesPressure(const struct FVector& InWorldLocation, float InPushDepth, float InRadius, bool InLimitedByBars, bool InIfTileExistsAtLocation, float InParticlesSpawnAlphaThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "ApplyTilesPressure");

	Params::SHFleshLipCeilingActor_ApplyTilesPressure Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InPushDepth = InPushDepth;
	Parms.InRadius = InRadius;
	Parms.InLimitedByBars = InLimitedByBars;
	Parms.InIfTileExistsAtLocation = InIfTileExistsAtLocation;
	Parms.InParticlesSpawnAlphaThreshold = InParticlesSpawnAlphaThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.BreakCeilingTilesAtWorldLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLimitedByBars                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVerticalVelocity                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHorizontalVelocity                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSimpleBentCurve                 InForceDistribution                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::BreakCeilingTilesAtWorldLocation(const struct FVector& InWorldLocation, float InRadius, bool InLimitedByBars, float InVerticalVelocity, float InHorizontalVelocity, float InMaximumRotation, const struct FSimpleBentCurve& InForceDistribution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "BreakCeilingTilesAtWorldLocation");

	Params::SHFleshLipCeilingActor_BreakCeilingTilesAtWorldLocation Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InRadius = InRadius;
	Parms.InLimitedByBars = InLimitedByBars;
	Parms.InVerticalVelocity = InVerticalVelocity;
	Parms.InHorizontalVelocity = InHorizontalVelocity;
	Parms.InMaximumRotation = InMaximumRotation;
	Parms.InForceDistribution = std::move(InForceDistribution);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.DamageCeilingTile
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHitLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHitVelocity                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumDropRotation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::DamageCeilingTile(int32 InTileX, int32 InTileY, const struct FVector& InHitLocation, const struct FVector& InHitVelocity, float InMaximumDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DamageCeilingTile");

	Params::SHFleshLipCeilingActor_DamageCeilingTile Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;
	Parms.InHitLocation = std::move(InHitLocation);
	Parms.InHitVelocity = std::move(InHitVelocity);
	Parms.InMaximumDropRotation = InMaximumDropRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.DestroyCeilingTile
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDropHangingNeighbours                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::DestroyCeilingTile(int32 InTileX, int32 InTileY, bool InDropHangingNeighbours)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DestroyCeilingTile");

	Params::SHFleshLipCeilingActor_DestroyCeilingTile Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;
	Parms.InDropHangingNeighbours = InDropHangingNeighbours;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.DestroyCeilingTilesAtWorldLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLimitedByBars                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDropHangingNeighbours                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::DestroyCeilingTilesAtWorldLocation(const struct FVector& InWorldLocation, float InRadius, bool InLimitedByBars, bool InDropHangingNeighbours)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DestroyCeilingTilesAtWorldLocation");

	Params::SHFleshLipCeilingActor_DestroyCeilingTilesAtWorldLocation Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InRadius = InRadius;
	Parms.InLimitedByBars = InLimitedByBars;
	Parms.InDropHangingNeighbours = InDropHangingNeighbours;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.DropCeilingTile
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDropDelay                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InOverrideExistingDelay                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::DropCeilingTile(int32 InTileX, int32 InTileY, float InDropDelay, bool InOverrideExistingDelay, const struct FVector& InDropVelocity, const struct FVector& InDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DropCeilingTile");

	Params::SHFleshLipCeilingActor_DropCeilingTile Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;
	Parms.InDropDelay = InDropDelay;
	Parms.InOverrideExistingDelay = InOverrideExistingDelay;
	Parms.InDropVelocity = std::move(InDropVelocity);
	Parms.InDropRotation = std::move(InDropRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.GetCeilingTileActorAtCoordinates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InConvertFromInstance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHFleshLipCeilingTileActor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHFleshLipCeilingTileActor* ASHFleshLipCeilingActor::GetCeilingTileActorAtCoordinates(int32 InTileX, int32 InTileY, bool InConvertFromInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetCeilingTileActorAtCoordinates");

	Params::SHFleshLipCeilingActor_GetCeilingTileActorAtCoordinates Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;
	Parms.InConvertFromInstance = InConvertFromInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetCeilingTileActorAtWorldLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InConvertFromInstance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHFleshLipCeilingTileActor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHFleshLipCeilingTileActor* ASHFleshLipCeilingActor::GetCeilingTileActorAtWorldLocation(const struct FVector& InWorldLocation, bool InConvertFromInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetCeilingTileActorAtWorldLocation");

	Params::SHFleshLipCeilingActor_GetCeilingTileActorAtWorldLocation Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InConvertFromInstance = InConvertFromInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetCeilingTileActorsBetweenCoordinates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class ASHFleshLipCeilingTileActor*>OutTileActors                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InFromTileX                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFromTileY                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InToTileX                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InToTileY                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InConvertFromInstances                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetCeilingTileActorsBetweenCoordinates(TArray<class ASHFleshLipCeilingTileActor*>* OutTileActors, int32 InFromTileX, int32 InFromTileY, int32 InToTileX, int32 InToTileY, bool InConvertFromInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetCeilingTileActorsBetweenCoordinates");

	Params::SHFleshLipCeilingActor_GetCeilingTileActorsBetweenCoordinates Parms{};

	Parms.InFromTileX = InFromTileX;
	Parms.InFromTileY = InFromTileY;
	Parms.InToTileX = InToTileX;
	Parms.InToTileY = InToTileY;
	Parms.InConvertFromInstances = InConvertFromInstances;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTileActors != nullptr)
		*OutTileActors = std::move(Parms.OutTileActors);
}


// Function SHProto.SHFleshLipCeilingActor.GetCeilingTileActorsBetweenWorldLocations
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class ASHFleshLipCeilingTileActor*>OutTileActors                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FVector                          InFromWorldLocation                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InToWorldLocation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InConvertFromInstances                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetCeilingTileActorsBetweenWorldLocations(TArray<class ASHFleshLipCeilingTileActor*>* OutTileActors, const struct FVector& InFromWorldLocation, const struct FVector& InToWorldLocation, bool InConvertFromInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetCeilingTileActorsBetweenWorldLocations");

	Params::SHFleshLipCeilingActor_GetCeilingTileActorsBetweenWorldLocations Parms{};

	Parms.InFromWorldLocation = std::move(InFromWorldLocation);
	Parms.InToWorldLocation = std::move(InToWorldLocation);
	Parms.InConvertFromInstances = InConvertFromInstances;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTileActors != nullptr)
		*OutTileActors = std::move(Parms.OutTileActors);
}


// Function SHProto.SHFleshLipCeilingActor.InitializeCeiling
// (Final, Native, Protected, BlueprintCallable)

void ASHFleshLipCeilingActor::InitializeCeiling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "InitializeCeiling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.OnTileParticlesSystemFinished
// (Final, Native, Protected)
// Parameters:
// class UNiagaraComponent*                InParticlesComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::OnTileParticlesSystemFinished(class UNiagaraComponent* InParticlesComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "OnTileParticlesSystemFinished");

	Params::SHFleshLipCeilingActor_OnTileParticlesSystemFinished Parms{};

	Parms.InParticlesComponent = InParticlesComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.SetIgnoreCollisionWithActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreCollision                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::SetIgnoreCollisionWithActor(class AActor* InActor, bool InIgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "SetIgnoreCollisionWithActor");

	Params::SHFleshLipCeilingActor_SetIgnoreCollisionWithActor Parms{};

	Parms.InActor = InActor;
	Parms.InIgnoreCollision = InIgnoreCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.SetTileTransformRelativeToCell
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InTransformInCell                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAllowForDisconnectedTile                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::SetTileTransformRelativeToCell(const struct FVector2D& InTileCoordinates, const struct FTransform& InTransformInCell, bool InAllowForDisconnectedTile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "SetTileTransformRelativeToCell");

	Params::SHFleshLipCeilingActor_SetTileTransformRelativeToCell Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);
	Parms.InTransformInCell = std::move(InTransformInCell);
	Parms.InAllowForDisconnectedTile = InAllowForDisconnectedTile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.SetTileWorldTransform
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InWorldTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAllowForDisconnectedTile                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::SetTileWorldTransform(const struct FVector2D& InTileCoordinates, const struct FTransform& InWorldTransform, bool InAllowForDisconnectedTile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "SetTileWorldTransform");

	Params::SHFleshLipCeilingActor_SetTileWorldTransform Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);
	Parms.InWorldTransform = std::move(InWorldTransform);
	Parms.InAllowForDisconnectedTile = InAllowForDisconnectedTile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.SpawnParticlesAtTiles
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InParticles                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InParticlesOffset                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLimitedByBars                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIfTileExistsAtLocation                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InParticlesSpawnAlphaThreshold                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InParticleDistanceAlphaParameterName                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::SpawnParticlesAtTiles(class UNiagaraSystem* InParticles, const struct FTransform& InParticlesOffset, const struct FVector& InWorldLocation, float InRadius, bool InLimitedByBars, bool InIfTileExistsAtLocation, float InParticlesSpawnAlphaThreshold, class FName InParticleDistanceAlphaParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "SpawnParticlesAtTiles");

	Params::SHFleshLipCeilingActor_SpawnParticlesAtTiles Parms{};

	Parms.InParticles = InParticles;
	Parms.InParticlesOffset = std::move(InParticlesOffset);
	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InRadius = InRadius;
	Parms.InLimitedByBars = InLimitedByBars;
	Parms.InIfTileExistsAtLocation = InIfTileExistsAtLocation;
	Parms.InParticlesSpawnAlphaThreshold = InParticlesSpawnAlphaThreshold;
	Parms.InParticleDistanceAlphaParameterName = InParticleDistanceAlphaParameterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingActor.AreTileCoordinatesValid
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::AreTileCoordinatesValid(int32 InTileX, int32 InTileY) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "AreTileCoordinatesValid");

	Params::SHFleshLipCeilingActor_AreTileCoordinatesValid Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.DoesCeilingTileAtCoordinatesExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InTileX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTileY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAllowDisconnected                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::DoesCeilingTileAtCoordinatesExist(int32 InTileX, int32 InTileY, bool InAllowDisconnected) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DoesCeilingTileAtCoordinatesExist");

	Params::SHFleshLipCeilingActor_DoesCeilingTileAtCoordinatesExist Parms{};

	Parms.InTileX = InTileX;
	Parms.InTileY = InTileY;
	Parms.InAllowDisconnected = InAllowDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.DoesCeilingTileAtWorldLocationExist
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAllowDisconnected                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::DoesCeilingTileAtWorldLocationExist(const struct FVector& InWorldLocation, bool InAllowDisconnected) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "DoesCeilingTileAtWorldLocationExist");

	Params::SHFleshLipCeilingActor_DoesCeilingTileAtWorldLocationExist Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);
	Parms.InAllowDisconnected = InAllowDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetBarsFrameTileCoordinatesAroundTile
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutFrameMinX                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutFrameMinY                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutFrameMaxX                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutFrameMaxY                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InInnerMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetBarsFrameTileCoordinatesAroundTile(float* OutFrameMinX, float* OutFrameMinY, float* OutFrameMaxX, float* OutFrameMaxY, const struct FVector2D& InTileCoordinates, bool InInnerMax) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetBarsFrameTileCoordinatesAroundTile");

	Params::SHFleshLipCeilingActor_GetBarsFrameTileCoordinatesAroundTile Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);
	Parms.InInnerMax = InInnerMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFrameMinX != nullptr)
		*OutFrameMinX = Parms.OutFrameMinX;

	if (OutFrameMinY != nullptr)
		*OutFrameMinY = Parms.OutFrameMinY;

	if (OutFrameMaxX != nullptr)
		*OutFrameMaxX = Parms.OutFrameMaxX;

	if (OutFrameMaxY != nullptr)
		*OutFrameMaxY = Parms.OutFrameMaxY;
}


// Function SHProto.SHFleshLipCeilingActor.GetCeilingSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        OutSize                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetCeilingSize(struct FVector2D* OutSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetCeilingSize");

	Params::SHFleshLipCeilingActor_GetCeilingSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSize != nullptr)
		*OutSize = std::move(Parms.OutSize);
}


// Function SHProto.SHFleshLipCeilingActor.GetNearestBarsGrabWorldTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       OutWorldTransform                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InNearLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InJunctionDistance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InExcludeEdges                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetNearestBarsGrabWorldTransform(struct FTransform* OutWorldTransform, const struct FVector& InNearLocation, float InJunctionDistance, bool InExcludeEdges) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetNearestBarsGrabWorldTransform");

	Params::SHFleshLipCeilingActor_GetNearestBarsGrabWorldTransform Parms{};

	Parms.InNearLocation = std::move(InNearLocation);
	Parms.InJunctionDistance = InJunctionDistance;
	Parms.InExcludeEdges = InExcludeEdges;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldTransform != nullptr)
		*OutWorldTransform = std::move(Parms.OutWorldTransform);
}


// Function SHProto.SHFleshLipCeilingActor.GetNearestFreeWorldLocationBetweenBars
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutWorldLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InNearLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBarsDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetNearestFreeWorldLocationBetweenBars(struct FVector* OutWorldLocation, const struct FVector& InNearLocation, float InBarsDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetNearestFreeWorldLocationBetweenBars");

	Params::SHFleshLipCeilingActor_GetNearestFreeWorldLocationBetweenBars Parms{};

	Parms.InNearLocation = std::move(InNearLocation);
	Parms.InBarsDistance = InBarsDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldLocation != nullptr)
		*OutWorldLocation = std::move(Parms.OutWorldLocation);
}


// Function SHProto.SHFleshLipCeilingActor.GetTileCoordinatesFromGridLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        OutTileCoordinates                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGridLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetTileCoordinatesFromGridLocation(struct FVector2D* OutTileCoordinates, const struct FVector& InGridLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileCoordinatesFromGridLocation");

	Params::SHFleshLipCeilingActor_GetTileCoordinatesFromGridLocation Parms{};

	Parms.InGridLocation = std::move(InGridLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTileCoordinates != nullptr)
		*OutTileCoordinates = std::move(Parms.OutTileCoordinates);
}


// Function SHProto.SHFleshLipCeilingActor.GetTileCoordinatesFromWorldLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        OutTileCoordinates                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InWorldLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingActor::GetTileCoordinatesFromWorldLocation(struct FVector2D* OutTileCoordinates, const struct FVector& InWorldLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileCoordinatesFromWorldLocation");

	Params::SHFleshLipCeilingActor_GetTileCoordinatesFromWorldLocation Parms{};

	Parms.InWorldLocation = std::move(InWorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTileCoordinates != nullptr)
		*OutTileCoordinates = std::move(Parms.OutTileCoordinates);
}


// Function SHProto.SHFleshLipCeilingActor.GetTileGridCellLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHFleshLipCeilingActor::GetTileGridCellLocation(const struct FVector2D& InTileCoordinates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileGridCellLocation");

	Params::SHFleshLipCeilingActor_GetTileGridCellLocation Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetTileGridCellTransform
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform ASHFleshLipCeilingActor::GetTileGridCellTransform(const struct FVector2D& InTileCoordinates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileGridCellTransform");

	Params::SHFleshLipCeilingActor_GetTileGridCellTransform Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetTileGridCellWorldLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASHFleshLipCeilingActor::GetTileGridCellWorldLocation(const struct FVector2D& InTileCoordinates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileGridCellWorldLocation");

	Params::SHFleshLipCeilingActor_GetTileGridCellWorldLocation Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetTileGridCellWorldTransform
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform ASHFleshLipCeilingActor::GetTileGridCellWorldTransform(const struct FVector2D& InTileCoordinates) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileGridCellWorldTransform");

	Params::SHFleshLipCeilingActor_GetTileGridCellWorldTransform Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetTileTransformRelativeToCell
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       OutRelativeTransform                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::GetTileTransformRelativeToCell(const struct FVector2D& InTileCoordinates, struct FTransform* OutRelativeTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileTransformRelativeToCell");

	Params::SHFleshLipCeilingActor_GetTileTransformRelativeToCell Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRelativeTransform != nullptr)
		*OutRelativeTransform = std::move(Parms.OutRelativeTransform);

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipCeilingActor.GetTileWorldTransform
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InTileCoordinates                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       OutWorldTransform                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFleshLipCeilingActor::GetTileWorldTransform(const struct FVector2D& InTileCoordinates, struct FTransform* OutWorldTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingActor", "GetTileWorldTransform");

	Params::SHFleshLipCeilingActor_GetTileWorldTransform Parms{};

	Parms.InTileCoordinates = std::move(InTileCoordinates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldTransform != nullptr)
		*OutWorldTransform = std::move(Parms.OutWorldTransform);

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatPlayDeathInterface.GetDeathPlayerData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Killed                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHDeathPlayerData               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHDeathPlayerData ISHCombatPlayDeathInterface::GetDeathPlayerData(class ACharacter* Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatPlayDeathInterface", "GetDeathPlayerData");

	Params::SHCombatPlayDeathInterface_GetDeathPlayerData Parms{};

	Parms.Killed = Killed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatPlayDeathInterface.GetDeathPlayerDataForDebug
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Killed                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHDeathPlayerData               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHDeathPlayerData ISHCombatPlayDeathInterface::GetDeathPlayerDataForDebug(class ACharacter* Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatPlayDeathInterface", "GetDeathPlayerDataForDebug");

	Params::SHCombatPlayDeathInterface_GetDeathPlayerDataForDebug Parms{};

	Parms.Killed = Killed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatPlayDeathInterface.PlayDeath
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PawnAnimTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PlayerAnimTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHCombatPlayDeathInterface::PlayDeath(class ACharacter* Player, const struct FGameplayTag& PawnAnimTag, const struct FGameplayTag& PlayerAnimTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatPlayDeathInterface", "PlayDeath");

	Params::SHCombatPlayDeathInterface_PlayDeath Parms{};

	Parms.Player = Player;
	Parms.PawnAnimTag = std::move(PawnAnimTag);
	Parms.PlayerAnimTag = std::move(PlayerAnimTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombatCustomGenericDeathSequenceProvider.GetCustomGenericDeathSequenceSoftClass
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESHSimpleDirectionType                  InLastHitWorldDirType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UClass> ISHCombatCustomGenericDeathSequenceProvider::GetCustomGenericDeathSequenceSoftClass(ESHSimpleDirectionType InLastHitWorldDirType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombatCustomGenericDeathSequenceProvider", "GetCustomGenericDeathSequenceSoftClass");

	Params::SHCombatCustomGenericDeathSequenceProvider_GetCustomGenericDeathSequenceSoftClass Parms{};

	Parms.InLastHitWorldDirType = InLastHitWorldDirType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCombineItemsTutorialHandler.ProcessItemCollected
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCombineItemsTutorialHandler::ProcessItemCollected(class USHCharacterPlayItemsComponent* Component, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCombineItemsTutorialHandler", "ProcessItemCollected");

	Params::SHCombineItemsTutorialHandler_ProcessItemCollected Parms{};

	Parms.Component = Component;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNiagaraVolume.IsPointWithin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHNiagaraVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNiagaraVolume", "IsPointWithin");

	Params::SHNiagaraVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHCreeperAnimComponent.SetAttackBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Velocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCreeperAnimComponent::SetAttackBlend(float Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCreeperAnimComponent", "SetAttackBlend");

	Params::SHCreeperAnimComponent_SetAttackBlend Parms{};

	Parms.Velocity = Velocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCrosshairContainerWidget.ProcessEquippedWeaponModifiedEvent
// (Final, Native, Protected)
// Parameters:
// class USHWeaponManageCmbSubcomp*        WeaponManagement                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCrosshairContainerWidget::ProcessEquippedWeaponModifiedEvent(class USHWeaponManageCmbSubcomp* WeaponManagement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCrosshairContainerWidget", "ProcessEquippedWeaponModifiedEvent");

	Params::SHCrosshairContainerWidget_ProcessEquippedWeaponModifiedEvent Parms{};

	Parms.WeaponManagement = WeaponManagement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCustomBorder.ManualTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomBorder::ManualTick(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCustomBorder", "ManualTick");

	Params::SHCustomBorder_ManualTick Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCustomPrimitiveDataHelper.InterpFloatValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InterpTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DataIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomPrimitiveDataHelper::InterpFloatValue(class UPrimitiveComponent* InComp, float StartValue, float EndValue, float InterpTime, int32 DataIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCustomPrimitiveDataHelper", "InterpFloatValue");

	Params::SHCustomPrimitiveDataHelper_InterpFloatValue Parms{};

	Parms.InComp = InComp;
	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;
	Parms.InterpTime = InterpTime;
	Parms.DataIndex = DataIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCustomPrimitiveDataHelper.SetFloatValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DataIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomPrimitiveDataHelper::SetFloatValue(class UPrimitiveComponent* InComp, float InValue, int32 DataIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCustomPrimitiveDataHelper", "SetFloatValue");

	Params::SHCustomPrimitiveDataHelper_SetFloatValue Parms{};

	Parms.InComp = InComp;
	Parms.InValue = InValue;
	Parms.DataIndex = DataIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlashlightTutorialHandler.ProcessEquipmentItemSpawned
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFlashlightTutorialHandler::ProcessEquipmentItemSpawned(class USHCharacterPlayItemsComponent* Component, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlashlightTutorialHandler", "ProcessEquipmentItemSpawned");

	Params::SHFlashlightTutorialHandler_ProcessEquipmentItemSpawned Parms{};

	Parms.Component = Component;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHCustomRetainerBox.ManualTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHCustomRetainerBox::ManualTick(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHCustomRetainerBox", "ManualTick");

	Params::SHCustomRetainerBox_ManualTick Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayGameOverWidget.OnShown
// (Event, Protected, BlueprintEvent)
// Parameters:
// EGameOverCause                          _GameOverCause                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayGameOverWidget::OnShown(EGameOverCause _GameOverCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayGameOverWidget", "OnShown");

	Params::SHGameplayGameOverWidget_OnShown Parms{};

	Parms._GameOverCause = _GameOverCause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHGameplayGameOverWidget.RequestReload
// (Final, Native, Protected, BlueprintCallable)

void USHGameplayGameOverWidget::RequestReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayGameOverWidget", "RequestReload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayGameOverWidget.ShowInternal
// (Final, Native, Protected)

void USHGameplayGameOverWidget::ShowInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayGameOverWidget", "ShowInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAnimationsComponent.OnAutoLockedDoorCheckAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsComponent::OnAutoLockedDoorCheckAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "OnAutoLockedDoorCheckAnimEnd");

	Params::SHDoorAnimationsComponent_OnAutoLockedDoorCheckAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAnimationsComponent.OnPhysicMovementAppliedForceFromActor
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         DoorMovementComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsComponent::OnPhysicMovementAppliedForceFromActor(class USHDoorMovementComponent* DoorMovementComponent, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "OnPhysicMovementAppliedForceFromActor");

	Params::SHDoorAnimationsComponent_OnPhysicMovementAppliedForceFromActor Parms{};

	Parms.DoorMovementComponent = DoorMovementComponent;
	Parms.ActorContext = ActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAnimationsComponent.SetPlayAutoLockedDoorCheckAnimBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInBlocked                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsComponent::SetPlayAutoLockedDoorCheckAnimBlocked(const bool bInBlocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "SetPlayAutoLockedDoorCheckAnimBlocked");

	Params::SHDoorAnimationsComponent_SetPlayAutoLockedDoorCheckAnimBlocked Parms{};

	Parms.bInBlocked = bInBlocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDoorAnimationsComponent.SHDoorAnimationEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorAnimationsComponent*       Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsComponent::SHDoorAnimationEvent__DelegateSignature(class USHDoorAnimationsComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "SHDoorAnimationEvent__DelegateSignature");

	Params::SHDoorAnimationsComponent_SHDoorAnimationEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorAnimationsComponent.SHDoorAnimationEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorAnimationsComponent*       Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorAnimationsComponent::SHDoorAnimationEventBP__DelegateSignature(class USHDoorAnimationsComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "SHDoorAnimationEventBP__DelegateSignature");

	Params::SHDoorAnimationsComponent_SHDoorAnimationEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDoorAnimationsComponent.IsPlayAutoLockedDoorCheckAnimBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorAnimationsComponent::IsPlayAutoLockedDoorCheckAnimBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAnimationsComponent", "IsPlayAutoLockedDoorCheckAnimBlocked");

	Params::SHDoorAnimationsComponent_IsPlayAutoLockedDoorCheckAnimBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorAttachment.OnBreak
// (Event, Protected, BlueprintEvent)

void ASHDoorAttachment::OnBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "OnBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHDoorAttachment.OnCharacterOnSpot
// (Event, Protected, BlueprintEvent)

void ASHDoorAttachment::OnCharacterOnSpot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "OnCharacterOnSpot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHDoorAttachment.OnInteracted
// (Event, Protected, BlueprintEvent)

void ASHDoorAttachment::OnInteracted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "OnInteracted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHDoorAttachment.OnInteractionAnimationEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::OnInteractionAnimationEnd(ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "OnInteractionAnimationEnd");

	Params::SHDoorAttachment_OnInteractionAnimationEnd Parms{};

	Parms.AnimEndType = AnimEndType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDoorAttachment.PlayInteractionAnimation
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               AnimToPlay                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHDoorAttachment::PlayInteractionAnimation(const struct FPlayAnimationData& AnimToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "PlayInteractionAnimation");

	Params::SHDoorAttachment_PlayInteractionAnimation Parms{};

	Parms.AnimToPlay = std::move(AnimToPlay);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorAttachment.ProcessActionAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessActionAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessActionAnimEnd");

	Params::SHDoorAttachment_ProcessActionAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.ProcessInteracted
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessInteracted(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessInteracted");

	Params::SHDoorAttachment_ProcessInteracted Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessInteractionManagerInitialized");

	Params::SHDoorAttachment_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.ProcessMovementSnapFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessMovementSnapFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessMovementSnapFinished");

	Params::SHDoorAttachment_ProcessMovementSnapFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.ProcessPutCharacterOnSpotFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessPutCharacterOnSpotFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessPutCharacterOnSpotFinished");

	Params::SHDoorAttachment_ProcessPutCharacterOnSpotFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.ProcessReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::ProcessReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "ProcessReceiveDamageEvent");

	Params::SHDoorAttachment_ProcessReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.PutCharacterOnSpotRequest
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   InBlendInTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoorAttachment::PutCharacterOnSpotRequest(float InBlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "PutCharacterOnSpotRequest");

	Params::SHDoorAttachment_PutCharacterOnSpotRequest Parms{};

	Parms.InBlendInTime = InBlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.RegisterInteractionAnimation
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               AnimToPlay                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ASHDoorAttachment::RegisterInteractionAnimation(const struct FPlayAnimationData& AnimToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "RegisterInteractionAnimation");

	Params::SHDoorAttachment_RegisterInteractionAnimation Parms{};

	Parms.AnimToPlay = std::move(AnimToPlay);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.UnregisterInteractionAnimation
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayAnimationData               AnimToPlay                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ASHDoorAttachment::UnregisterInteractionAnimation(const struct FPlayAnimationData& AnimToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "UnregisterInteractionAnimation");

	Params::SHDoorAttachment_UnregisterInteractionAnimation Parms{};

	Parms.AnimToPlay = std::move(AnimToPlay);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorAttachment.IsProximityCharacterOnCorrectSide
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHDoorAttachment::IsProximityCharacterOnCorrectSide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorAttachment", "IsProximityCharacterOnCorrectSide");

	Params::SHDoorAttachment_IsProximityCharacterOnCorrectSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplaySectionBaseWidget.OnActivated
// (Event, Public, BlueprintEvent)

void USHGameplaySectionBaseWidget::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySectionBaseWidget", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplaySectionBaseWidget.OnInit
// (Event, Public, BlueprintEvent)

void USHGameplaySectionBaseWidget::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySectionBaseWidget", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHDoorMovementBaseComponent.ProcessMeshHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::ProcessMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "ProcessMeshHit");

	Params::SHDoorMovementBaseComponent_ProcessMeshHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementBaseComponent.ProcessProximitySHActorBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::ProcessProximitySHActorBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "ProcessProximitySHActorBeginOverlap");

	Params::SHDoorMovementBaseComponent_ProcessProximitySHActorBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementBaseComponent.ProcessProximitySHActorEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::ProcessProximitySHActorEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "ProcessProximitySHActorEndOverlap");

	Params::SHDoorMovementBaseComponent_ProcessProximitySHActorEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementBaseComponent.SetIsManagedByCutscene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::SetIsManagedByCutscene(bool InEnable, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "SetIsManagedByCutscene");

	Params::SHDoorMovementBaseComponent_SetIsManagedByCutscene Parms{};

	Parms.InEnable = InEnable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDoorMovementBaseComponent.SHDoorBaseMovementEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorMovementBaseComponent*     Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::SHDoorBaseMovementEvent__DelegateSignature(class USHDoorMovementBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "SHDoorBaseMovementEvent__DelegateSignature");

	Params::SHDoorMovementBaseComponent_SHDoorBaseMovementEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorMovementBaseComponent.SHDoorBaseMovementEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorMovementBaseComponent*     Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementBaseComponent::SHDoorBaseMovementEventBP__DelegateSignature(class USHDoorMovementBaseComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "SHDoorBaseMovementEventBP__DelegateSignature");

	Params::SHDoorMovementBaseComponent_SHDoorBaseMovementEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDoorMovementBaseComponent.GetCurrentDoorState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHDoorStateEnum                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHDoorStateEnum USHDoorMovementBaseComponent::GetCurrentDoorState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "GetCurrentDoorState");

	Params::SHDoorMovementBaseComponent_GetCurrentDoorState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementBaseComponent.GetCurrentDoorVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDoorMovementBaseComponent::GetCurrentDoorVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "GetCurrentDoorVelocity");

	Params::SHDoorMovementBaseComponent_GetCurrentDoorVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementBaseComponent.GetDoorTraceHalfSize
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHDoorMovementBaseComponent::GetDoorTraceHalfSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "GetDoorTraceHalfSize");

	Params::SHDoorMovementBaseComponent_GetDoorTraceHalfSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementBaseComponent.GetLastDoorVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDoorMovementBaseComponent::GetLastDoorVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "GetLastDoorVelocity");

	Params::SHDoorMovementBaseComponent_GetLastDoorVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementBaseComponent.IsManagedByCutscene
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementBaseComponent::IsManagedByCutscene() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementBaseComponent", "IsManagedByCutscene");

	Params::SHDoorMovementBaseComponent_IsManagedByCutscene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.AddActorToTraceIgnoreActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::AddActorToTraceIgnoreActors(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "AddActorToTraceIgnoreActors");

	Params::SHDoorMovementComponent_AddActorToTraceIgnoreActors Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementComponent.AddPhysicForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MoveForce                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::AddPhysicForce(const float MoveForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "AddPhysicForce");

	Params::SHDoorMovementComponent_AddPhysicForce Parms{};

	Parms.MoveForce = MoveForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementComponent.PlayCurveAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSkipTracing                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::PlayCurveAnim(class UCurveFloat* InCurve, bool InSkipTracing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "PlayCurveAnim");

	Params::SHDoorMovementComponent_PlayCurveAnim Parms{};

	Parms.InCurve = InCurve;
	Parms.InSkipTracing = InSkipTracing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementComponent.RequestCustomFakeMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngleTarget                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendExp                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InForceMovement                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool USHDoorMovementComponent::RequestCustomFakeMovement(const float InAngleTarget, const float InSpeed, const float InBlendExp, const bool InForceMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "RequestCustomFakeMovement");

	Params::SHDoorMovementComponent_RequestCustomFakeMovement Parms{};

	Parms.InAngleTarget = InAngleTarget;
	Parms.InSpeed = InSpeed;
	Parms.InBlendExp = InBlendExp;
	Parms.InForceMovement = InForceMovement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.RequestFakeClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool USHDoorMovementComponent::RequestFakeClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "RequestFakeClose");

	Params::SHDoorMovementComponent_RequestFakeClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.RequestFakeOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ToOtherside                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool USHDoorMovementComponent::RequestFakeOpen(const bool ToOtherside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "RequestFakeOpen");

	Params::SHDoorMovementComponent_RequestFakeOpen Parms{};

	Parms.ToOtherside = ToOtherside;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.SetAutocloseBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::SetAutocloseBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "SetAutocloseBlocked");

	Params::SHDoorMovementComponent_SetAutocloseBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementComponent.SetDoorFrozen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::SetDoorFrozen(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "SetDoorFrozen");

	Params::SHDoorMovementComponent_SetDoorFrozen Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHDoorMovementComponent.SHDoorMovementEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorMovementComponent*         Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::SHDoorMovementEvent__DelegateSignature(class USHDoorMovementComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "SHDoorMovementEvent__DelegateSignature");

	Params::SHDoorMovementComponent_SHDoorMovementEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorMovementComponent.SHDoorMovementEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorMovementComponent*         Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::SHDoorMovementEventBP__DelegateSignature(class USHDoorMovementComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "SHDoorMovementEventBP__DelegateSignature");

	Params::SHDoorMovementComponent_SHDoorMovementEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHDoorMovementComponent.SHDoorMovementWithActorContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHDoorMovementComponent*         Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDoorMovementComponent::SHDoorMovementWithActorContextEvent__DelegateSignature(class USHDoorMovementComponent* Component, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "SHDoorMovementWithActorContextEvent__DelegateSignature");

	Params::SHDoorMovementComponent_SHDoorMovementWithActorContextEvent__DelegateSignature Parms{};

	Parms.Component = Component;
	Parms.ActorContext = ActorContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHDoorMovementComponent.StopCurveAnim
// (Final, Native, Public, BlueprintCallable)

void USHDoorMovementComponent::StopCurveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "StopCurveAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoorMovementComponent.GetCurrentDoorAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDoorMovementComponent::GetCurrentDoorAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "GetCurrentDoorAngle");

	Params::SHDoorMovementComponent_GetCurrentDoorAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.GetDoorTraceLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   DoorTraceAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHDoorMovementComponent::GetDoorTraceLoc(float DoorTraceAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "GetDoorTraceLoc");

	Params::SHDoorMovementComponent_GetDoorTraceLoc Parms{};

	Parms.DoorTraceAngle = DoorTraceAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.GetFakeMovementTargetAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDoorMovementComponent::GetFakeMovementTargetAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "GetFakeMovementTargetAngle");

	Params::SHDoorMovementComponent_GetFakeMovementTargetAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.GetFakeMovementTargetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ESHDoorStateEnum                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ESHDoorStateEnum USHDoorMovementComponent::GetFakeMovementTargetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "GetFakeMovementTargetState");

	Params::SHDoorMovementComponent_GetFakeMovementTargetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.GetMaxDoorVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHDoorMovementComponent::GetMaxDoorVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "GetMaxDoorVelocity");

	Params::SHDoorMovementComponent_GetMaxDoorVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.HasPhysicForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::HasPhysicForce() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "HasPhysicForce");

	Params::SHDoorMovementComponent_HasPhysicForce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.IsAutocloseBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::IsAutocloseBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "IsAutocloseBlocked");

	Params::SHDoorMovementComponent_IsAutocloseBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.IsDoorFrozen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::IsDoorFrozen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "IsDoorFrozen");

	Params::SHDoorMovementComponent_IsDoorFrozen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.IsPlayingCurveAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::IsPlayingCurveAnim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "IsPlayingCurveAnim");

	Params::SHDoorMovementComponent_IsPlayingCurveAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.IsPreHitOverlapingAnyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::IsPreHitOverlapingAnyCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "IsPreHitOverlapingAnyCharacter");

	Params::SHDoorMovementComponent_IsPreHitOverlapingAnyCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.IsPreHitOverlapingCharacterPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::IsPreHitOverlapingCharacterPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "IsPreHitOverlapingCharacterPlay");

	Params::SHDoorMovementComponent_IsPreHitOverlapingCharacterPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDoorMovementComponent.WasPhysicMovingLastTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHDoorMovementComponent::WasPhysicMovingLastTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoorMovementComponent", "WasPhysicMovingLastTick");

	Params::SHDoorMovementComponent_WasPhysicMovingLastTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayMapBaseWidget.ApplyObjectData
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          WidgetObject                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHMapObjectTypeEnum                    ObjectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjectValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapBaseWidget::ApplyObjectData(class UWidget* WidgetObject, ESHMapObjectTypeEnum ObjectType, int32 ObjectValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapBaseWidget", "ApplyObjectData");

	Params::SHGameplayMapBaseWidget_ApplyObjectData Parms{};

	Parms.WidgetObject = WidgetObject;
	Parms.ObjectType = ObjectType;
	Parms.ObjectValue = ObjectValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHGameplayMapBaseWidget.OnInit
// (Event, Public, BlueprintEvent)

void USHGameplayMapBaseWidget::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapBaseWidget", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayMapBaseWidget.OnShowed
// (Event, Public, BlueprintEvent)

void USHGameplayMapBaseWidget::OnShowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapBaseWidget", "OnShowed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHDoubleDoorSD.ProcessDoorAlphaChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementBaseComponent*     MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoubleDoorSD::ProcessDoorAlphaChanged(class USHDoorMovementBaseComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoubleDoorSD", "ProcessDoorAlphaChanged");

	Params::SHDoubleDoorSD_ProcessDoorAlphaChanged Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDoubleDoorSD.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDoubleDoorSD::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDoubleDoorSD", "ProcessInteractionManagerInitialized");

	Params::SHDoubleDoorSD_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHDynamicInteractionExecutive.GetOwnerContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ASHDynamicInteractionExecutive::GetOwnerContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionExecutive", "GetOwnerContext");

	Params::SHDynamicInteractionExecutive_GetOwnerContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicInteractionExecutive.GetOwnerManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHDynamicInteractionManagerComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHDynamicInteractionManagerComponent* ASHDynamicInteractionExecutive::GetOwnerManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionExecutive", "GetOwnerManager");

	Params::SHDynamicInteractionExecutive_GetOwnerManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicInteractionExecutive.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHDynamicInteractionExecutive::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHDynamicInteractionExecutive", "ProcessInteractionManagerInitialized");

	Params::SHDynamicInteractionExecutive_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPlaythroughMariaReceivedDamageEndingFactor.SHDebug_Character_Endings_PlaythroughMariaReceivedDamageEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlaythroughMariaReceivedDamageEndingFactor::SHDebug_Character_Endings_PlaythroughMariaReceivedDamageEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlaythroughMariaReceivedDamageEndingFactor", "SHDebug_Character_Endings_PlaythroughMariaReceivedDamageEndingFactor_SetDebugValue");

	Params::SHPlaythroughMariaReceivedDamageEndingFactor_SHDebug_Character_Endings_PlaythroughMariaReceivedDamageEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.InteriorExteriorManager.getInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInteriorExteriorManager*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInteriorExteriorManager* UInteriorExteriorManager::GetInstance(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InteriorExteriorManager", "getInstance");

	Params::InteriorExteriorManager_GetInstance Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.InteriorExteriorManager.CalcInteriorExteriorState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHInteriorExteriorStateEnum            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHInteriorExteriorStateEnum UInteriorExteriorManager::CalcInteriorExteriorState(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteriorExteriorManager", "CalcInteriorExteriorState");

	Params::InteriorExteriorManager_CalcInteriorExteriorState Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicObjectsCustomStencilStatics.GetCustomStencilValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHCustomStencilDynamicObject           DynamicObjectType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHDynamicObjectsCustomStencilStatics::GetCustomStencilValue(const ESHCustomStencilDynamicObject DynamicObjectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHDynamicObjectsCustomStencilStatics", "GetCustomStencilValue");

	Params::SHDynamicObjectsCustomStencilStatics_GetCustomStencilValue Parms{};

	Parms.DynamicObjectType = DynamicObjectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHDynamicObjectsCustomStencilStatics.SetCustomStencilValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InDynamicObjectPrimitive                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHCustomStencilDynamicObject           DynamicObjectType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHDynamicObjectsCustomStencilStatics::SetCustomStencilValue(class UPrimitiveComponent* InDynamicObjectPrimitive, const ESHCustomStencilDynamicObject DynamicObjectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHDynamicObjectsCustomStencilStatics", "SetCustomStencilValue");

	Params::SHDynamicObjectsCustomStencilStatics_SetCustomStencilValue Parms{};

	Parms.InDynamicObjectPrimitive = InDynamicObjectPrimitive;
	Parms.DynamicObjectType = DynamicObjectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEddieAnimComponent.SetEddieMovementState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHEddieAnimInstanceMovementState       InMovementState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InMovementChangeInProgress                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEddieAnimComponent::SetEddieMovementState(ESHEddieAnimInstanceMovementState InMovementState, bool InMovementChangeInProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieAnimComponent", "SetEddieMovementState");

	Params::SHEddieAnimComponent_SetEddieMovementState Parms{};

	Parms.InMovementState = InMovementState;
	Parms.InMovementChangeInProgress = InMovementChangeInProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProjectileFightable.SetDeactivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDeactivated                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHProjectileFightable::SetDeactivated(const bool bDeactivated, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHProjectileFightable", "SetDeactivated");

	Params::SHProjectileFightable_SetDeactivated Parms{};

	Parms.bDeactivated = bDeactivated;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProjectileFightable.IsDeactivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHProjectileFightable::IsDeactivated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHProjectileFightable", "IsDeactivated");

	Params::SHProjectileFightable_IsDeactivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemEmissiveDataHelper.InterpEmmisive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldEmmisiveBeEnabled                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemEmissiveDataHelper::InterpEmmisive(class UPrimitiveComponent* InComp, bool bShouldEmmisiveBeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEmissiveDataHelper", "InterpEmmisive");

	Params::SHItemEmissiveDataHelper_InterpEmmisive Parms{};

	Parms.InComp = InComp;
	Parms.bShouldEmmisiveBeEnabled = bShouldEmmisiveBeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEmissiveDataHelper.OverrideDisabledValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemEmissiveDataHelper::OverrideDisabledValue(class UObject* Requester, float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEmissiveDataHelper", "OverrideDisabledValue");

	Params::SHItemEmissiveDataHelper_OverrideDisabledValue Parms{};

	Parms.Requester = Requester;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEmissiveDataHelper.SetEmmisive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldEmmisiveBeEnabled                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemEmissiveDataHelper::SetEmmisive(class UPrimitiveComponent* InComp, bool bShouldEmmisiveBeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEmissiveDataHelper", "SetEmmisive");

	Params::SHItemEmissiveDataHelper_SetEmmisive Parms{};

	Parms.InComp = InComp;
	Parms.bShouldEmmisiveBeEnabled = bShouldEmmisiveBeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemEmissiveDataHelper.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bShouldEmmisiveBeEnabled                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHItemEmissiveDataHelper::GetValue(bool bShouldEmmisiveBeEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemEmissiveDataHelper", "GetValue");

	Params::SHItemEmissiveDataHelper_GetValue Parms{};

	Parms.bShouldEmmisiveBeEnabled = bShouldEmmisiveBeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieRangedWeapon.Fire
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult                       FoundHit                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Parent                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHEddieRangedWeapon::Fire(struct FHitResult* FoundHit, class AActor* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieRangedWeapon", "Fire");

	Params::SHEddieRangedWeapon_Fire Parms{};

	Parms.Parent = Parent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FoundHit != nullptr)
		*FoundHit = std::move(Parms.FoundHit);

	return Parms.ReturnValue;
}


// Function SHProto.SHEddieRangedWeapon.OnFire
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ASHEddieRangedWeapon::OnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieRangedWeapon", "OnFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHEddieRangedWeapon.OnReload
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ASHEddieRangedWeapon::OnReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieRangedWeapon", "OnReload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHEddieRangedWeapon.Reload
// (Final, Native, Public, BlueprintCallable)

void ASHEddieRangedWeapon::Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEddieRangedWeapon", "Reload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayTutorialStatics.ShowScriptedBreakGlassTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayTutorialStatics::ShowScriptedBreakGlassTutorial(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayTutorialStatics", "ShowScriptedBreakGlassTutorial");

	Params::SHGameplayTutorialStatics_ShowScriptedBreakGlassTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayTutorialStatics.ShowScriptedBreakWallTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayTutorialStatics::ShowScriptedBreakWallTutorial(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayTutorialStatics", "ShowScriptedBreakWallTutorial");

	Params::SHGameplayTutorialStatics_ShowScriptedBreakWallTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayTutorialStatics.ShowScriptedPreTraversalTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayTutorialStatics::ShowScriptedPreTraversalTutorial(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayTutorialStatics", "ShowScriptedPreTraversalTutorial");

	Params::SHGameplayTutorialStatics_ShowScriptedPreTraversalTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayTutorialStatics.ShowSprintTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayTutorialStatics::ShowSprintTutorial(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayTutorialStatics", "ShowSprintTutorial");

	Params::SHGameplayTutorialStatics_ShowSprintTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.EnableInDangerModeOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Override                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemiesManageCmbSubcomp::EnableInDangerModeOverride(bool Override, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "EnableInDangerModeOverride");

	Params::SHEnemiesManageCmbSubcomp_EnableInDangerModeOverride Parms{};

	Parms.Override = Override;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.RefreshInDangerInstant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemiesManageCmbSubcomp::RefreshInDangerInstant(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "RefreshInDangerInstant");

	Params::SHEnemiesManageCmbSubcomp_RefreshInDangerInstant Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.SetCustomInDanger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemiesManageCmbSubcomp::SetCustomInDanger(const bool NewValue, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "SetCustomInDanger");

	Params::SHEnemiesManageCmbSubcomp_SetCustomInDanger Parms{};

	Parms.NewValue = NewValue;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.SHDebug_Character_Combat_ForceDangerMode
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForcedValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemiesManageCmbSubcomp::SHDebug_Character_Combat_ForceDangerMode(bool Force, bool ForcedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "SHDebug_Character_Combat_ForceDangerMode");

	Params::SHEnemiesManageCmbSubcomp_SHDebug_Character_Combat_ForceDangerMode Parms{};

	Parms.Force = Force;
	Parms.ForcedValue = ForcedValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.FindNearbyDeadEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaxDeltaHeight                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ACharacter*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ACharacter*> USHEnemiesManageCmbSubcomp::FindNearbyDeadEnemies(float InRadius, float InMaxDeltaHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "FindNearbyDeadEnemies");

	Params::SHEnemiesManageCmbSubcomp_FindNearbyDeadEnemies Parms{};

	Parms.InRadius = InRadius;
	Parms.InMaxDeltaHeight = InMaxDeltaHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.FindNearbyEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaxDeltaHeight                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ACharacter*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ACharacter*> USHEnemiesManageCmbSubcomp::FindNearbyEnemies(float InRadius, float InMaxDeltaHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "FindNearbyEnemies");

	Params::SHEnemiesManageCmbSubcomp_FindNearbyEnemies Parms{};

	Parms.InRadius = InRadius;
	Parms.InMaxDeltaHeight = InMaxDeltaHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.GetNearbyDeadEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ACharacter*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ACharacter*> USHEnemiesManageCmbSubcomp::GetNearbyDeadEnemies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "GetNearbyDeadEnemies");

	Params::SHEnemiesManageCmbSubcomp_GetNearbyDeadEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.GetNearbyEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ACharacter*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ACharacter*> USHEnemiesManageCmbSubcomp::GetNearbyEnemies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "GetNearbyEnemies");

	Params::SHEnemiesManageCmbSubcomp_GetNearbyEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.HasAnyEnemyAggro
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    RequireAggressiveBehaviorStance                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemiesManageCmbSubcomp::HasAnyEnemyAggro(bool RequireAggressiveBehaviorStance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "HasAnyEnemyAggro");

	Params::SHEnemiesManageCmbSubcomp_HasAnyEnemyAggro Parms{};

	Parms.RequireAggressiveBehaviorStance = RequireAggressiveBehaviorStance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.HasEnemyAggro
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            CheckedEnemy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RequireAggressiveBehaviorStance                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemiesManageCmbSubcomp::HasEnemyAggro(class APawn* CheckedEnemy, bool RequireAggressiveBehaviorStance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "HasEnemyAggro");

	Params::SHEnemiesManageCmbSubcomp_HasEnemyAggro Parms{};

	Parms.CheckedEnemy = CheckedEnemy;
	Parms.RequireAggressiveBehaviorStance = RequireAggressiveBehaviorStance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.HasPrimaryEnemyAggro
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    RequireAggressiveBehaviorStance                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemiesManageCmbSubcomp::HasPrimaryEnemyAggro(bool RequireAggressiveBehaviorStance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "HasPrimaryEnemyAggro");

	Params::SHEnemiesManageCmbSubcomp_HasPrimaryEnemyAggro Parms{};

	Parms.RequireAggressiveBehaviorStance = RequireAggressiveBehaviorStance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.IsDangerModeForced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemiesManageCmbSubcomp::IsDangerModeForced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "IsDangerModeForced");

	Params::SHEnemiesManageCmbSubcomp_IsDangerModeForced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemiesManageCmbSubcomp.IsInDanger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemiesManageCmbSubcomp::IsInDanger() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemiesManageCmbSubcomp", "IsInDanger");

	Params::SHEnemiesManageCmbSubcomp_IsInDanger Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlickeringLightBase.GetAllFlickeringLights
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class ASHFlickeringLightBase*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ASHFlickeringLightBase*> ASHFlickeringLightBase::GetAllFlickeringLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHFlickeringLightBase", "GetAllFlickeringLights");

	Params::SHFlickeringLightBase_GetAllFlickeringLights Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlickeringLightBase.GetGroupState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Group                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFlickerGroupState                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHFlickerGroupState ASHFlickeringLightBase::GetGroupState(class FName Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "GetGroupState");

	Params::SHFlickeringLightBase_GetGroupState Parms{};

	Parms.Group = Group;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlickeringLightBase.OnEditorRefresh
// (Event, Public, BlueprintEvent)

void ASHFlickeringLightBase::OnEditorRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "OnEditorRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFlickeringLightBase.OnPostConstruction
// (Event, Public, BlueprintEvent)

void ASHFlickeringLightBase::OnPostConstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "OnPostConstruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFlickeringLightBase.PrepareFlickerGroups
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Temperature                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IntensityScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ResetGroups                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::PrepareFlickerGroups(float Temperature, float IntensityScale, bool ResetGroups)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "PrepareFlickerGroups");

	Params::SHFlickeringLightBase_PrepareFlickerGroups Parms{};

	Parms.Temperature = Temperature;
	Parms.IntensityScale = IntensityScale;
	Parms.ResetGroups = ResetGroups;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.SetGroupState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Group                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFlickerGroupState                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::SetGroupState(class FName Group, ESHFlickerGroupState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "SetGroupState");

	Params::SHFlickeringLightBase_SetGroupState Parms{};

	Parms.Group = Group;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.SetWantTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::SetWantTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "SetWantTickEnabled");

	Params::SHFlickeringLightBase_SetWantTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.StartBuzzSound
// (Final, Native, Public, BlueprintCallable)

void ASHFlickeringLightBase::StartBuzzSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "StartBuzzSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.StepFlickersInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::StepFlickersInEditor(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "StepFlickersInEditor");

	Params::SHFlickeringLightBase_StepFlickersInEditor Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.StopBuzzSound
// (Final, Native, Public, BlueprintCallable)

void ASHFlickeringLightBase::StopBuzzSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "StopBuzzSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.UpdateNativeFlickers
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    RandomFlickerEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     EmissionColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EmissionReplaceMtl                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EmissionReplaceLgh                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExternalScaleLight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExternalScaleMaterial                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::UpdateNativeFlickers(bool RandomFlickerEnabled, const struct FLinearColor& EmissionColor, bool EmissionReplaceMtl, bool EmissionReplaceLgh, float ExternalScaleLight, float ExternalScaleMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "UpdateNativeFlickers");

	Params::SHFlickeringLightBase_UpdateNativeFlickers Parms{};

	Parms.RandomFlickerEnabled = RandomFlickerEnabled;
	Parms.EmissionColor = std::move(EmissionColor);
	Parms.EmissionReplaceMtl = EmissionReplaceMtl;
	Parms.EmissionReplaceLgh = EmissionReplaceLgh;
	Parms.ExternalScaleLight = ExternalScaleLight;
	Parms.ExternalScaleMaterial = ExternalScaleMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.UpdateNativeParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    EnableRandomFlicker                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LightIntensityMin                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LightIntensityMax                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlinkingMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlinkingMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeTimeMin                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeTimeMax                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ShutdownIntensity                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GentleShutdownTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForceGentleShutdown                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BlinkingIsAbsolute                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::UpdateNativeParameters(bool EnableRandomFlicker, float LightIntensityMin, float LightIntensityMax, float BlinkingMin, float BlinkingMax, float ChangeTimeMin, float ChangeTimeMax, float ShutdownIntensity, float GentleShutdownTime, bool ForceGentleShutdown, bool BlinkingIsAbsolute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "UpdateNativeParameters");

	Params::SHFlickeringLightBase_UpdateNativeParameters Parms{};

	Parms.EnableRandomFlicker = EnableRandomFlicker;
	Parms.LightIntensityMin = LightIntensityMin;
	Parms.LightIntensityMax = LightIntensityMax;
	Parms.BlinkingMin = BlinkingMin;
	Parms.BlinkingMax = BlinkingMax;
	Parms.ChangeTimeMin = ChangeTimeMin;
	Parms.ChangeTimeMax = ChangeTimeMax;
	Parms.ShutdownIntensity = ShutdownIntensity;
	Parms.GentleShutdownTime = GentleShutdownTime;
	Parms.ForceGentleShutdown = ForceGentleShutdown;
	Parms.BlinkingIsAbsolute = BlinkingIsAbsolute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.UpdateOffTagsInGroups
// (Final, Native, Public, BlueprintCallable)

void ASHFlickeringLightBase::UpdateOffTagsInGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "UpdateOffTagsInGroups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.UpdateTemperatureAndBaseIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Temperature                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IntensityScale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFlickeringLightBase::UpdateTemperatureAndBaseIntensity(float Temperature, float IntensityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "UpdateTemperatureAndBaseIntensity");

	Params::SHFlickeringLightBase_UpdateTemperatureAndBaseIntensity Parms{};

	Parms.Temperature = Temperature;
	Parms.IntensityScale = IntensityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFlickeringLightBase.EditModeEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHFlickeringLightBase::EditModeEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "EditModeEnabled");

	Params::SHFlickeringLightBase_EditModeEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlickeringLightBase.GetAverageIntensity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHFlickeringLightBase::GetAverageIntensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "GetAverageIntensity");

	Params::SHFlickeringLightBase_GetAverageIntensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFlickeringLightBase.GetNumberOfBrokenComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHFlickeringLightBase::GetNumberOfBrokenComponents() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFlickeringLightBase", "GetNumberOfBrokenComponents");

	Params::SHFlickeringLightBase_GetNumberOfBrokenComponents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.AddHitReactionsBlocker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISHHitReactionSelectionHitReactionBlockerInterface>InHitReactionsBlocker                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::AddHitReactionsBlocker(TScriptInterface<class ISHHitReactionSelectionHitReactionBlockerInterface> InHitReactionsBlocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "AddHitReactionsBlocker");

	Params::SHEnemyHitReactionSelectionComponent_AddHitReactionsBlocker Parms{};

	Parms.InHitReactionsBlocker = InHitReactionsBlocker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.CountReceivedHitAndDecideResponse
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   OutDamageMultiplier                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMaximumRemainingHealthFraction                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionSelectionHitResponseType  OutHitResponseType                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutHitResponseVariant                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutHitResponseDurationLimit                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutDeathVariant                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDamageSourceLocation                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHitIdentifier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaiAggroStance                         InAggressionLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHealthFraction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSHHitReactionIdentifier> InActiveHitReactions                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHEnemyHitReactionSelectionAllowedStatesInAllowedStates                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyHitReactionSelectionComponent::CountReceivedHitAndDecideResponse(float* OutDamageMultiplier, float* OutMaximumRemainingHealthFraction, ESHHitReactionSelectionHitResponseType* OutHitResponseType, class FName* OutHitResponseVariant, float* OutHitResponseDurationLimit, class FName* OutDeathVariant, const struct FVector& InDamageSourceLocation, const struct FHitResult& InHitInfo, const class UDamageType* InDamageType, class AActor* InDamageCauser, int32 InHitIdentifier, EMaiAggroStance InAggressionLevel, float InHealthFraction, const TArray<struct FSHHitReactionIdentifier>& InActiveHitReactions, const struct FSHEnemyHitReactionSelectionAllowedStates& InAllowedStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "CountReceivedHitAndDecideResponse");

	Params::SHEnemyHitReactionSelectionComponent_CountReceivedHitAndDecideResponse Parms{};

	Parms.InDamageSourceLocation = std::move(InDamageSourceLocation);
	Parms.InHitInfo = std::move(InHitInfo);
	Parms.InDamageType = InDamageType;
	Parms.InDamageCauser = InDamageCauser;
	Parms.InHitIdentifier = InHitIdentifier;
	Parms.InAggressionLevel = InAggressionLevel;
	Parms.InHealthFraction = InHealthFraction;
	Parms.InActiveHitReactions = std::move(InActiveHitReactions);
	Parms.InAllowedStates = std::move(InAllowedStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDamageMultiplier != nullptr)
		*OutDamageMultiplier = Parms.OutDamageMultiplier;

	if (OutMaximumRemainingHealthFraction != nullptr)
		*OutMaximumRemainingHealthFraction = Parms.OutMaximumRemainingHealthFraction;

	if (OutHitResponseType != nullptr)
		*OutHitResponseType = Parms.OutHitResponseType;

	if (OutHitResponseVariant != nullptr)
		*OutHitResponseVariant = Parms.OutHitResponseVariant;

	if (OutHitResponseDurationLimit != nullptr)
		*OutHitResponseDurationLimit = Parms.OutHitResponseDurationLimit;

	if (OutDeathVariant != nullptr)
		*OutDeathVariant = Parms.OutDeathVariant;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.DecideHitResponse
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   OutDamageMultiplier                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMaximumRemainingHealthFraction                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHHitReactionSelectionHitResponseType  OutHitResponseType                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutHitResponseVariant                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutHitResponseDurationLimit                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutDeathVariant                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutResetConsecutiveHitCounters                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FVector                          InDamageSourceLocation                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       InHitInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMaiAggroStance                         InAggressionLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHealthFraction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSHHitReactionIdentifier> InActiveHitReactions                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHEnemyHitReactionSelectionAllowedStatesInAllowedStates                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::DecideHitResponse(float* OutDamageMultiplier, float* OutMaximumRemainingHealthFraction, ESHHitReactionSelectionHitResponseType* OutHitResponseType, class FName* OutHitResponseVariant, float* OutHitResponseDurationLimit, class FName* OutDeathVariant, TArray<class FName>* OutResetConsecutiveHitCounters, const struct FVector& InDamageSourceLocation, const struct FHitResult& InHitInfo, const class UDamageType* InDamageType, class AActor* InDamageCauser, EMaiAggroStance InAggressionLevel, float InHealthFraction, const TArray<struct FSHHitReactionIdentifier>& InActiveHitReactions, const struct FSHEnemyHitReactionSelectionAllowedStates& InAllowedStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "DecideHitResponse");

	Params::SHEnemyHitReactionSelectionComponent_DecideHitResponse Parms{};

	Parms.InDamageSourceLocation = std::move(InDamageSourceLocation);
	Parms.InHitInfo = std::move(InHitInfo);
	Parms.InDamageType = InDamageType;
	Parms.InDamageCauser = InDamageCauser;
	Parms.InAggressionLevel = InAggressionLevel;
	Parms.InHealthFraction = InHealthFraction;
	Parms.InActiveHitReactions = std::move(InActiveHitReactions);
	Parms.InAllowedStates = std::move(InAllowedStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDamageMultiplier != nullptr)
		*OutDamageMultiplier = Parms.OutDamageMultiplier;

	if (OutMaximumRemainingHealthFraction != nullptr)
		*OutMaximumRemainingHealthFraction = Parms.OutMaximumRemainingHealthFraction;

	if (OutHitResponseType != nullptr)
		*OutHitResponseType = Parms.OutHitResponseType;

	if (OutHitResponseVariant != nullptr)
		*OutHitResponseVariant = Parms.OutHitResponseVariant;

	if (OutHitResponseDurationLimit != nullptr)
		*OutHitResponseDurationLimit = Parms.OutHitResponseDurationLimit;

	if (OutDeathVariant != nullptr)
		*OutDeathVariant = Parms.OutDeathVariant;

	if (OutResetConsecutiveHitCounters != nullptr)
		*OutResetConsecutiveHitCounters = std::move(Parms.OutResetConsecutiveHitCounters);
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.IncrementActiveCountedHitsByDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InHitIdentifier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      InDamageType                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InHitBoneName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHitBoneShapeIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::IncrementActiveCountedHitsByDamage(int32 InHitIdentifier, const class UDamageType* InDamageType, class FName InHitBoneName, int32 InHitBoneShapeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "IncrementActiveCountedHitsByDamage");

	Params::SHEnemyHitReactionSelectionComponent_IncrementActiveCountedHitsByDamage Parms{};

	Parms.InHitIdentifier = InHitIdentifier;
	Parms.InDamageType = InDamageType;
	Parms.InHitBoneName = InHitBoneName;
	Parms.InHitBoneShapeIndex = InHitBoneShapeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.RemoveHitReactionsBlocker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISHHitReactionSelectionHitReactionBlockerInterface>InHitReactionsBlocker                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::RemoveHitReactionsBlocker(TScriptInterface<class ISHHitReactionSelectionHitReactionBlockerInterface> InHitReactionsBlocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "RemoveHitReactionsBlocker");

	Params::SHEnemyHitReactionSelectionComponent_RemoveHitReactionsBlocker Parms{};

	Parms.InHitReactionsBlocker = InHitReactionsBlocker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.ResetActiveCountedHitsOfCounterName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InConsecutiveHitsCounterName                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::ResetActiveCountedHitsOfCounterName(class FName InConsecutiveHitsCounterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "ResetActiveCountedHitsOfCounterName");

	Params::SHEnemyHitReactionSelectionComponent_ResetActiveCountedHitsOfCounterName Parms{};

	Parms.InConsecutiveHitsCounterName = InConsecutiveHitsCounterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.ResetAllActiveCountedHits
// (Final, Native, Public, BlueprintCallable)

void USHEnemyHitReactionSelectionComponent::ResetAllActiveCountedHits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "ResetAllActiveCountedHits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.SetHitReactionSelectionConfiguration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USEnemyHitReactionSelection*      InConfiguration                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::SetHitReactionSelectionConfiguration(class USEnemyHitReactionSelection* InConfiguration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "SetHitReactionSelectionConfiguration");

	Params::SHEnemyHitReactionSelectionComponent_SetHitReactionSelectionConfiguration Parms{};

	Parms.InConfiguration = InConfiguration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.SetPrintHitReactionSelectionDebug
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InPrintDebug                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::SetPrintHitReactionSelectionDebug(bool InPrintDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "SetPrintHitReactionSelectionDebug");

	Params::SHEnemyHitReactionSelectionComponent_SetPrintHitReactionSelectionDebug Parms{};

	Parms.InPrintDebug = InPrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.StartHitResponseCooldownCounter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCounterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCooldownTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InResetCurrent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::StartHitResponseCooldownCounter(class FName InCounterName, float InCooldownTime, bool InResetCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "StartHitResponseCooldownCounter");

	Params::SHEnemyHitReactionSelectionComponent_StartHitResponseCooldownCounter Parms{};

	Parms.InCounterName = InCounterName;
	Parms.InCooldownTime = InCooldownTime;
	Parms.InResetCurrent = InResetCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.StartHitResponseDefaultCooldownCounter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionSelectionHitResponseType  InHitResponse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCooldownTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InResetCurrent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::StartHitResponseDefaultCooldownCounter(ESHHitReactionSelectionHitResponseType InHitResponse, float InCooldownTime, bool InResetCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "StartHitResponseDefaultCooldownCounter");

	Params::SHEnemyHitReactionSelectionComponent_StartHitResponseDefaultCooldownCounter Parms{};

	Parms.InHitResponse = InHitResponse;
	Parms.InCooldownTime = InCooldownTime;
	Parms.InResetCurrent = InResetCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.StartHitResponseVariantCooldowns
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionSelectionHitResponseType  InHitResponse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVariantName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAdditionalDuration                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InResetCurrent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyHitReactionSelectionComponent::StartHitResponseVariantCooldowns(ESHHitReactionSelectionHitResponseType InHitResponse, class FName InVariantName, float InAdditionalDuration, bool InResetCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "StartHitResponseVariantCooldowns");

	Params::SHEnemyHitReactionSelectionComponent_StartHitResponseVariantCooldowns Parms{};

	Parms.InHitResponse = InHitResponse;
	Parms.InVariantName = InVariantName;
	Parms.InAdditionalDuration = InAdditionalDuration;
	Parms.InResetCurrent = InResetCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.FindHitsCounterNameUsedByBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBoneShapeIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHEnemyHitReactionSelectionComponent::FindHitsCounterNameUsedByBone(class FName InBoneName, int32 InBoneShapeIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "FindHitsCounterNameUsedByBone");

	Params::SHEnemyHitReactionSelectionComponent_FindHitsCounterNameUsedByBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InBoneShapeIndex = InBoneShapeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.FindHitsCounterNameUsedByBonesGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InBonesGroupName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHEnemyHitReactionSelectionComponent::FindHitsCounterNameUsedByBonesGroup(class FName InBonesGroupName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "FindHitsCounterNameUsedByBonesGroup");

	Params::SHEnemyHitReactionSelectionComponent_FindHitsCounterNameUsedByBonesGroup Parms{};

	Parms.InBonesGroupName = InBonesGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetActiveCountedHitsOfCounterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InConsecutiveHitsCounterName                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHEnemyHitReactionSelectionComponent::GetActiveCountedHitsOfCounterName(class FName InConsecutiveHitsCounterName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetActiveCountedHitsOfCounterName");

	Params::SHEnemyHitReactionSelectionComponent_GetActiveCountedHitsOfCounterName Parms{};

	Parms.InConsecutiveHitsCounterName = InConsecutiveHitsCounterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetActiveCountedHitsOfTimerUsedByBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBoneShapeIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHEnemyHitReactionSelectionComponent::GetActiveCountedHitsOfTimerUsedByBone(class FName InBoneName, int32 InBoneShapeIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetActiveCountedHitsOfTimerUsedByBone");

	Params::SHEnemyHitReactionSelectionComponent_GetActiveCountedHitsOfTimerUsedByBone Parms{};

	Parms.InBoneName = InBoneName;
	Parms.InBoneShapeIndex = InBoneShapeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetActiveCountedHitsOfTimerUsedByBoneGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InBonesGroupName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHEnemyHitReactionSelectionComponent::GetActiveCountedHitsOfTimerUsedByBoneGroup(class FName InBonesGroupName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetActiveCountedHitsOfTimerUsedByBoneGroup");

	Params::SHEnemyHitReactionSelectionComponent_GetActiveCountedHitsOfTimerUsedByBoneGroup Parms{};

	Parms.InBonesGroupName = InBonesGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetHitResponseCooldownCounterRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InCounterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyHitReactionSelectionComponent::GetHitResponseCooldownCounterRemainingTime(class FName InCounterName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetHitResponseCooldownCounterRemainingTime");

	Params::SHEnemyHitReactionSelectionComponent_GetHitResponseCooldownCounterRemainingTime Parms{};

	Parms.InCounterName = InCounterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetHitResponseCooldownRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionSelectionHitResponseType  InHitResponse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVariantName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyHitReactionSelectionComponent::GetHitResponseCooldownRemainingTime(ESHHitReactionSelectionHitResponseType InHitResponse, class FName InVariantName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetHitResponseCooldownRemainingTime");

	Params::SHEnemyHitReactionSelectionComponent_GetHitResponseCooldownRemainingTime Parms{};

	Parms.InHitResponse = InHitResponse;
	Parms.InVariantName = InVariantName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.GetHitResponseDefaultCooldownRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionSelectionHitResponseType  InHitResponse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyHitReactionSelectionComponent::GetHitResponseDefaultCooldownRemainingTime(ESHHitReactionSelectionHitResponseType InHitResponse) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "GetHitResponseDefaultCooldownRemainingTime");

	Params::SHEnemyHitReactionSelectionComponent_GetHitResponseDefaultCooldownRemainingTime Parms{};

	Parms.InHitResponse = InHitResponse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyHitReactionSelectionComponent.IsUsingHitReactionSelectionConfiguration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USEnemyHitReactionSelection*      InConfiguration                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyHitReactionSelectionComponent::IsUsingHitReactionSelectionConfiguration(class USEnemyHitReactionSelection* InConfiguration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyHitReactionSelectionComponent", "IsUsingHitReactionSelectionConfiguration");

	Params::SHEnemyHitReactionSelectionComponent_IsUsingHitReactionSelectionConfiguration Parms{};

	Parms.InConfiguration = InConfiguration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSelectionHitReactionBlockerInterface.GetHitReactionBlockerAllowedHitReactions
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FSHEnemyHitReactionSelectionAllowedStatesReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHEnemyHitReactionSelectionAllowedStates ISHHitReactionSelectionHitReactionBlockerInterface::GetHitReactionBlockerAllowedHitReactions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSelectionHitReactionBlockerInterface", "GetHitReactionBlockerAllowedHitReactions");

	Params::SHHitReactionSelectionHitReactionBlockerInterface_GetHitReactionBlockerAllowedHitReactions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionSelectionHitReactionBlockerInterface.GetHitReactionBlockerDebugDisplayName
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FString                           OutDebugName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHHitReactionSelectionHitReactionBlockerInterface::GetHitReactionBlockerDebugDisplayName(class FString* OutDebugName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionSelectionHitReactionBlockerInterface", "GetHitReactionBlockerDebugDisplayName");

	Params::SHHitReactionSelectionHitReactionBlockerInterface_GetHitReactionBlockerDebugDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDebugName != nullptr)
		*OutDebugName = std::move(Parms.OutDebugName);
}


// Function SHProto.SHFXWaterInteractionSubcomp.SetWaterInteractionBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXWaterInteractionSubcomp::SetWaterInteractionBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXWaterInteractionSubcomp", "SetWaterInteractionBlocked");

	Params::SHFXWaterInteractionSubcomp_SetWaterInteractionBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXWaterInteractionSubcomp.GetCurrentIntersections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FSHXWaterIntersection>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FSHXWaterIntersection> USHFXWaterInteractionSubcomp::GetCurrentIntersections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXWaterInteractionSubcomp", "GetCurrentIntersections");

	Params::SHFXWaterInteractionSubcomp_GetCurrentIntersections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXWaterInteractionSubcomp.IsWaterInteractionBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXWaterInteractionSubcomp::IsWaterInteractionBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXWaterInteractionSubcomp", "IsWaterInteractionBlocked");

	Params::SHFXWaterInteractionSubcomp_IsWaterInteractionBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXWaterInteractionSubcomp.IsWaterInteractionBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXWaterInteractionSubcomp::IsWaterInteractionBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXWaterInteractionSubcomp", "IsWaterInteractionBlockedBy");

	Params::SHFXWaterInteractionSubcomp_IsWaterInteractionBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.AddAdditionalExtendingCapsule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHCaterpillarCapsuleComponent*   InLyingCapsule                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::AddAdditionalExtendingCapsule(class USHCaterpillarCapsuleComponent* InLyingCapsule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "AddAdditionalExtendingCapsule");

	Params::SHEnemyLyingComponent_AddAdditionalExtendingCapsule Parms{};

	Parms.InLyingCapsule = InLyingCapsule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.AssignLyingCapsule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHCaterpillarCapsuleComponent*   InLyingCapsule                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::AssignLyingCapsule(class USHCaterpillarCapsuleComponent* InLyingCapsule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "AssignLyingCapsule");

	Params::SHEnemyLyingComponent_AssignLyingCapsule Parms{};

	Parms.InLyingCapsule = InLyingCapsule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.FinishDelayedRootRotation
// (Final, Native, Public, BlueprintCallable)

void USHEnemyLyingComponent::FinishDelayedRootRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "FinishDelayedRootRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.PostTeleportUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InReExpandCapsules                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::PostTeleportUpdate(bool InReExpandCapsules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "PostTeleportUpdate");

	Params::SHEnemyLyingComponent_PostTeleportUpdate Parms{};

	Parms.InReExpandCapsules = InReExpandCapsules;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.SetActorRotationAllowUsingCurrentVelocityHACK
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InAllowVelocityHack                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::SetActorRotationAllowUsingCurrentVelocityHACK(bool InAllowVelocityHack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "SetActorRotationAllowUsingCurrentVelocityHACK");

	Params::SHEnemyLyingComponent_SetActorRotationAllowUsingCurrentVelocityHACK Parms{};

	Parms.InAllowVelocityHack = InAllowVelocityHack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.SetLyingCapsulePosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAnchorPosition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumExtension                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::SetLyingCapsulePosition(float InAnchorPosition, float InMaximumExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "SetLyingCapsulePosition");

	Params::SHEnemyLyingComponent_SetLyingCapsulePosition Parms{};

	Parms.InAnchorPosition = InAnchorPosition;
	Parms.InMaximumExtension = InMaximumExtension;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.SetManuallyDisabledLyingCapsuleCollisions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDisableCollisions                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::SetManuallyDisabledLyingCapsuleCollisions(bool InDisableCollisions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "SetManuallyDisabledLyingCapsuleCollisions");

	Params::SHEnemyLyingComponent_SetManuallyDisabledLyingCapsuleCollisions Parms{};

	Parms.InDisableCollisions = InDisableCollisions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.TransformToLying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTransformationReason                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTransformationDuration                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDelayedRootRotation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDisableAIDuringTransformation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPreventControllerRotation                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateActorToDesiredVelocity                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateOutOfCollisionsDuringTransformation            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateOutOfCollisionsAfterTransformation             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleAnchorPosition                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaximumCapsuleExtensionAlpha                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAlignCapsulesToSurface                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InForceRestart                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::TransformToLying(class FName InTransformationReason, float InTransformationDuration, bool InDelayedRootRotation, bool InDisableAIDuringTransformation, bool InPreventControllerRotation, bool InRotateActorToDesiredVelocity, bool InRotateOutOfCollisionsDuringTransformation, bool InRotateOutOfCollisionsAfterTransformation, float InCapsuleAnchorPosition, float InMaximumCapsuleExtensionAlpha, bool InAlignCapsulesToSurface, bool InForceRestart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "TransformToLying");

	Params::SHEnemyLyingComponent_TransformToLying Parms{};

	Parms.InTransformationReason = InTransformationReason;
	Parms.InTransformationDuration = InTransformationDuration;
	Parms.InDelayedRootRotation = InDelayedRootRotation;
	Parms.InDisableAIDuringTransformation = InDisableAIDuringTransformation;
	Parms.InPreventControllerRotation = InPreventControllerRotation;
	Parms.InRotateActorToDesiredVelocity = InRotateActorToDesiredVelocity;
	Parms.InRotateOutOfCollisionsDuringTransformation = InRotateOutOfCollisionsDuringTransformation;
	Parms.InRotateOutOfCollisionsAfterTransformation = InRotateOutOfCollisionsAfterTransformation;
	Parms.InCapsuleAnchorPosition = InCapsuleAnchorPosition;
	Parms.InMaximumCapsuleExtensionAlpha = InMaximumCapsuleExtensionAlpha;
	Parms.InAlignCapsulesToSurface = InAlignCapsulesToSurface;
	Parms.InForceRestart = InForceRestart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.TransformToStanding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTransformationReason                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTransformationDuration                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDisableAIDuringTransformation                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPreventControllerRotation                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateActorToDesiredVelocity                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateActorToLyingCapsule                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InForceRestart                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::TransformToStanding(class FName InTransformationReason, float InTransformationDuration, bool InDisableAIDuringTransformation, bool InPreventControllerRotation, bool InRotateActorToDesiredVelocity, bool InRotateActorToLyingCapsule, bool InForceRestart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "TransformToStanding");

	Params::SHEnemyLyingComponent_TransformToStanding Parms{};

	Parms.InTransformationReason = InTransformationReason;
	Parms.InTransformationDuration = InTransformationDuration;
	Parms.InDisableAIDuringTransformation = InDisableAIDuringTransformation;
	Parms.InPreventControllerRotation = InPreventControllerRotation;
	Parms.InRotateActorToDesiredVelocity = InRotateActorToDesiredVelocity;
	Parms.InRotateActorToLyingCapsule = InRotateActorToLyingCapsule;
	Parms.InForceRestart = InForceRestart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyLyingComponent.GetLyingExtensionScalars
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutTopScalar                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBottomScalar                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InClamped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyLyingComponent::GetLyingExtensionScalars(float* OutTopScalar, float* OutBottomScalar, bool InClamped) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "GetLyingExtensionScalars");

	Params::SHEnemyLyingComponent_GetLyingExtensionScalars Parms{};

	Parms.InClamped = InClamped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTopScalar != nullptr)
		*OutTopScalar = Parms.OutTopScalar;

	if (OutBottomScalar != nullptr)
		*OutBottomScalar = Parms.OutBottomScalar;
}


// Function SHProto.SHEnemyLyingComponent.GetRemainingTransformationDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyLyingComponent::GetRemainingTransformationDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "GetRemainingTransformationDuration");

	Params::SHEnemyLyingComponent_GetRemainingTransformationDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.GetTransformationAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyLyingComponent::GetTransformationAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "GetTransformationAlpha");

	Params::SHEnemyLyingComponent_GetTransformationAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.GetTransformationProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyLyingComponent::GetTransformationProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "GetTransformationProgress");

	Params::SHEnemyLyingComponent_GetTransformationProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsLying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeTransformingInto                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeTransformingOutOf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsLying(bool InIncludeTransformingInto, bool InIncludeTransformingOutOf) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsLying");

	Params::SHEnemyLyingComponent_IsLying Parms{};

	Parms.InIncludeTransformingInto = InIncludeTransformingInto;
	Parms.InIncludeTransformingOutOf = InIncludeTransformingOutOf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsStanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeTransformingInto                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIncludeTransformingOutOf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsStanding(bool InIncludeTransformingInto, bool InIncludeTransformingOutOf) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsStanding");

	Params::SHEnemyLyingComponent_IsStanding Parms{};

	Parms.InIncludeTransformingInto = InIncludeTransformingInto;
	Parms.InIncludeTransformingOutOf = InIncludeTransformingOutOf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransformationAwaitingDelayedRootRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransformationAwaitingDelayedRootRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransformationAwaitingDelayedRootRotation");

	Params::SHEnemyLyingComponent_IsTransformationAwaitingDelayedRootRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransformationWantingDisabledAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransformationWantingDisabledAI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransformationWantingDisabledAI");

	Params::SHEnemyLyingComponent_IsTransformationWantingDisabledAI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransformationWantingToPreventControllerRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransformationWantingToPreventControllerRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransformationWantingToPreventControllerRotation");

	Params::SHEnemyLyingComponent_IsTransformationWantingToPreventControllerRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransforming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransforming() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransforming");

	Params::SHEnemyLyingComponent_IsTransforming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransformingIntoLying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransformingIntoLying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransformingIntoLying");

	Params::SHEnemyLyingComponent_IsTransformingIntoLying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyLyingComponent.IsTransformingIntoStanding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyLyingComponent::IsTransformingIntoStanding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyLyingComponent", "IsTransformingIntoStanding");

	Params::SHEnemyLyingComponent_IsTransformingIntoStanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyTransformationStateComponent.ApplyTransformationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHEnemyTransformationState*      InTransformationState                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOverrideDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOverrideHitReactionsChangeDelay                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOverrideLyingChangeDelay                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOverrideLyingChangeDuration                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyTransformationStateComponent::ApplyTransformationState(class USHEnemyTransformationState* InTransformationState, float InOverrideDuration, float InOverrideHitReactionsChangeDelay, float InOverrideLyingChangeDelay, float InOverrideLyingChangeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyTransformationStateComponent", "ApplyTransformationState");

	Params::SHEnemyTransformationStateComponent_ApplyTransformationState Parms{};

	Parms.InTransformationState = InTransformationState;
	Parms.InOverrideDuration = InOverrideDuration;
	Parms.InOverrideHitReactionsChangeDelay = InOverrideHitReactionsChangeDelay;
	Parms.InOverrideLyingChangeDelay = InOverrideLyingChangeDelay;
	Parms.InOverrideLyingChangeDuration = InOverrideLyingChangeDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyTransformationStateComponent.SetIsOtherWorldEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnemyIsOW                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHEnemyTransformationStateComponent::SetIsOtherWorldEnemy(bool InEnemyIsOW)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyTransformationStateComponent", "SetIsOtherWorldEnemy");

	Params::SHEnemyTransformationStateComponent_SetIsOtherWorldEnemy Parms{};

	Parms.InEnemyIsOW = InEnemyIsOW;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHEnemyTransformationStateComponent.GetActiveTransformationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHEnemyTransformationState*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHEnemyTransformationState* USHEnemyTransformationStateComponent::GetActiveTransformationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyTransformationStateComponent", "GetActiveTransformationState");

	Params::SHEnemyTransformationStateComponent_GetActiveTransformationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyTransformationStateComponent.GetRemainingTransformationDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHEnemyTransformationStateComponent::GetRemainingTransformationDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyTransformationStateComponent", "GetRemainingTransformationDuration");

	Params::SHEnemyTransformationStateComponent_GetRemainingTransformationDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHEnemyTransformationStateComponent.GetTransformationIsInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHEnemyTransformationStateComponent::GetTransformationIsInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHEnemyTransformationStateComponent", "GetTransformationIsInProgress");

	Params::SHEnemyTransformationStateComponent_GetTransformationIsInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFakeMirrorComponent.GetRenderFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFakeMirrorComponent::GetRenderFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFakeMirrorComponent", "GetRenderFactor");

	Params::SHFakeMirrorComponent_GetRenderFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayMenuSectionsButton.ButtonPressed
// (Final, Native, Public)

void USHGameplayMenuSectionsButton::ButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMenuSectionsButton", "ButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMenuSectionsButton.OnSetHighlight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMenuSectionsButton::OnSetHighlight(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMenuSectionsButton", "OnSetHighlight");

	Params::SHGameplayMenuSectionsButton_OnSetHighlight Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFleshLipAnimComponent.SetFleshLipLeftArmIsReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsReleased                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipAnimComponent::SetFleshLipLeftArmIsReleased(bool InIsReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimComponent", "SetFleshLipLeftArmIsReleased");

	Params::SHFleshLipAnimComponent_SetFleshLipLeftArmIsReleased Parms{};

	Parms.InIsReleased = InIsReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipAnimComponent.SetFleshLipLegsAreReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InAreReleased                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipAnimComponent::SetFleshLipLegsAreReleased(bool InAreReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimComponent", "SetFleshLipLegsAreReleased");

	Params::SHFleshLipAnimComponent_SetFleshLipLegsAreReleased Parms{};

	Parms.InAreReleased = InAreReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipAnimComponent.SetFleshLipRightArmIsReleased
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsReleased                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipAnimComponent::SetFleshLipRightArmIsReleased(bool InIsReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimComponent", "SetFleshLipRightArmIsReleased");

	Params::SHFleshLipAnimComponent_SetFleshLipRightArmIsReleased Parms{};

	Parms.InIsReleased = InIsReleased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipAnimComponent.SetFleshLipTransformationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHFleshLipAnimInstanceTransformationStateInFleshLipTransformation                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTransforming                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFleshLipAnimComponent::SetFleshLipTransformationState(ESHFleshLipAnimInstanceTransformationState InFleshLipTransformation, bool InIsTransforming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipAnimComponent", "SetFleshLipTransformationState");

	Params::SHFleshLipAnimComponent_SetFleshLipTransformationState Parms{};

	Parms.InFleshLipTransformation = InFleshLipTransformation;
	Parms.InIsTransforming = InIsTransforming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingTileActor.DamageCeilingTile
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InHitLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::DamageCeilingTile(const struct FVector& InHitLocation, const struct FVector& InDropVelocity, const struct FVector& InDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "DamageCeilingTile");

	Params::SHFleshLipCeilingTileActor_DamageCeilingTile Parms{};

	Parms.InHitLocation = std::move(InHitLocation);
	Parms.InDropVelocity = std::move(InDropVelocity);
	Parms.InDropRotation = std::move(InDropRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingTileActor.DisconnectCeilingTile
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InDropVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::DisconnectCeilingTile(const struct FVector& InDropVelocity, const struct FVector& InDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "DisconnectCeilingTile");

	Params::SHFleshLipCeilingTileActor_DisconnectCeilingTile Parms{};

	Parms.InDropVelocity = std::move(InDropVelocity);
	Parms.InDropRotation = std::move(InDropRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFleshLipCeilingTileActor.SetIgnoreCollisionsWithActor_Implementation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreCollision                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::SetIgnoreCollisionsWithActor_Implementation(class AActor* InActor, bool InIgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "SetIgnoreCollisionsWithActor_Implementation");

	Params::SHFleshLipCeilingTileActor_SetIgnoreCollisionsWithActor_Implementation Parms{};

	Parms.InActor = InActor;
	Parms.InIgnoreCollision = InIgnoreCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFleshLipCeilingTileActor.TileDamaged
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          InHitLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::TileDamaged(const struct FVector& InHitLocation, const struct FVector& InDropVelocity, const struct FVector& InDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "TileDamaged");

	Params::SHFleshLipCeilingTileActor_TileDamaged Parms{};

	Parms.InHitLocation = std::move(InHitLocation);
	Parms.InDropVelocity = std::move(InDropVelocity);
	Parms.InDropRotation = std::move(InDropRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFleshLipCeilingTileActor.TileDisconnected
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    InAsHanging                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InDropRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::TileDisconnected(bool InAsHanging, const struct FVector& InDropVelocity, const struct FVector& InDropRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "TileDisconnected");

	Params::SHFleshLipCeilingTileActor_TileDisconnected Parms{};

	Parms.InAsHanging = InAsHanging;
	Parms.InDropVelocity = std::move(InDropVelocity);
	Parms.InDropRotation = std::move(InDropRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFleshLipCeilingTileActor.TileInitialized
// (Event, Protected, BlueprintEvent)

void ASHFleshLipCeilingTileActor::TileInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "TileInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHFleshLipCeilingTileActor.GetTileCoordinates
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutTileX                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTileY                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFleshLipCeilingTileActor::GetTileCoordinates(int32* OutTileX, int32* OutTileY) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "GetTileCoordinates");

	Params::SHFleshLipCeilingTileActor_GetTileCoordinates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTileX != nullptr)
		*OutTileX = Parms.OutTileX;

	if (OutTileY != nullptr)
		*OutTileY = Parms.OutTileY;
}


// Function SHProto.SHFleshLipCeilingTileActor.GetTileDamageLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHFleshLipCeilingTileActor::GetTileDamageLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipCeilingTileActor", "GetTileDamageLevel");

	Params::SHFleshLipCeilingTileActor_GetTileDamageLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipTransformationState.GetFleshLipTransformationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHFleshLipTransformationState          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHFleshLipTransformationState USHFleshLipTransformationState::GetFleshLipTransformationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipTransformationState", "GetFleshLipTransformationState");

	Params::SHFleshLipTransformationState_GetFleshLipTransformationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipTransformationState.GetGrabPointSearchOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector USHFleshLipTransformationState::GetGrabPointSearchOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipTransformationState", "GetGrabPointSearchOffset");

	Params::SHFleshLipTransformationState_GetGrabPointSearchOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipTransformationState.GetShouldRotationBeMaintained
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFleshLipTransformationState::GetShouldRotationBeMaintained() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipTransformationState", "GetShouldRotationBeMaintained");

	Params::SHFleshLipTransformationState_GetShouldRotationBeMaintained Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFleshLipTransformationState.GetTransformationOverrides
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    OutShouldBeUsed                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHFleshLipTransformationStateCurvesOutCurves                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void USHFleshLipTransformationState::GetTransformationOverrides(bool* OutShouldBeUsed, struct FSHFleshLipTransformationStateCurves* OutCurves) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFleshLipTransformationState", "GetTransformationOverrides");

	Params::SHFleshLipTransformationState_GetTransformationOverrides Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShouldBeUsed != nullptr)
		*OutShouldBeUsed = Parms.OutShouldBeUsed;

	if (OutCurves != nullptr)
		*OutCurves = std::move(Parms.OutCurves);
}


// Function SHProto.SHFocusableComponent.ConsumeCurrentItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    SetPuzzleAsSolved                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ConsumeCurrentItem(bool SetPuzzleAsSolved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ConsumeCurrentItem");

	Params::SHFocusableComponent_ConsumeCurrentItem Parms{};

	Parms.SetPuzzleAsSolved = SetPuzzleAsSolved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHFocusableComponent.FocusableEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USHFocusableComponent::FocusableEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "FocusableEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHFocusableComponent.FocusableExEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHFocusableComponent*            ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::FocusableExEvent__DelegateSignature(class USHFocusableComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "FocusableExEvent__DelegateSignature");

	Params::SHFocusableComponent_FocusableExEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHFocusableComponent.FocusableInputAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESHFocusableInputActionTypeEnum         InputActionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KeyValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::FocusableInputAction__DelegateSignature(ESHFocusableInputActionTypeEnum InputActionType, float KeyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "FocusableInputAction__DelegateSignature");

	Params::SHFocusableComponent_FocusableInputAction__DelegateSignature Parms{};

	Parms.InputActionType = InputActionType;
	Parms.KeyValue = KeyValue;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHFocusableComponent.FocusableItemEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             ItemRowName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::FocusableItemEvent__DelegateSignature(class FName ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "FocusableItemEvent__DelegateSignature");

	Params::SHFocusableComponent_FocusableItemEvent__DelegateSignature Parms{};

	Parms.ItemRowName = ItemRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFocusableComponent.HideMiniInventoryRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::HideMiniInventoryRequest(bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "HideMiniInventoryRequest");

	Params::SHFocusableComponent_HideMiniInventoryRequest Parms{};

	Parms.bInstant = bInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.HideRequest
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::HideRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "HideRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::Interact(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "Interact");

	Params::SHFocusableComponent_Interact Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.PlayItemSelectedAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsCorrectItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::PlayItemSelectedAudio(bool IsCorrectItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "PlayItemSelectedAudio");

	Params::SHFocusableComponent_PlayItemSelectedAudio Parms{};

	Parms.IsCorrectItem = IsCorrectItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.PlayWrongItemMiniInventoryAnim
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::PlayWrongItemMiniInventoryAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "PlayWrongItemMiniInventoryAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ProcessCombatInputModeChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ProcessCombatInputModeChangedEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ProcessCombatInputModeChangedEvent");

	Params::SHFocusableComponent_ProcessCombatInputModeChangedEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ProcessReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ProcessReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ProcessReceiveDamageEvent");

	Params::SHFocusableComponent_ProcessReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCameraComponent*                 InCameraComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHInteractionGenericComponent*   InInteractionGenericComponent                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterComponents(class UCameraComponent* InCameraComponent, class USHInteractionGenericComponent* InInteractionGenericComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterComponents");

	Params::SHFocusableComponent_RegisterComponents Parms{};

	Parms.InCameraComponent = InCameraComponent;
	Parms.InInteractionGenericComponent = InInteractionGenericComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterExtraLightsContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InFocusExtraLightsContainer                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterExtraLightsContainer(class USceneComponent* InFocusExtraLightsContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterExtraLightsContainer");

	Params::SHFocusableComponent_RegisterExtraLightsContainer Parms{};

	Parms.InFocusExtraLightsContainer = InFocusExtraLightsContainer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterFlashlightFocusSpotComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InSceneComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterFlashlightFocusSpotComponent(class USceneComponent* InSceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterFlashlightFocusSpotComponent");

	Params::SHFocusableComponent_RegisterFlashlightFocusSpotComponent Parms{};

	Parms.InSceneComponent = InSceneComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterFlashlightSourceSpotComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InSceneComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterFlashlightSourceSpotComponent(class USceneComponent* InSceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterFlashlightSourceSpotComponent");

	Params::SHFocusableComponent_RegisterFlashlightSourceSpotComponent Parms{};

	Parms.InSceneComponent = InSceneComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterTeleportMariaCapsuleComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*                InCapsuleComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterTeleportMariaCapsuleComponent(class UCapsuleComponent* InCapsuleComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterTeleportMariaCapsuleComponent");

	Params::SHFocusableComponent_RegisterTeleportMariaCapsuleComponent Parms{};

	Parms.InCapsuleComponent = InCapsuleComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RegisterTeleportPlayerCapsuleComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCapsuleComponent*                InCapsuleComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::RegisterTeleportPlayerCapsuleComponent(class UCapsuleComponent* InCapsuleComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RegisterTeleportPlayerCapsuleComponent");

	Params::SHFocusableComponent_RegisterTeleportPlayerCapsuleComponent Parms{};

	Parms.InCapsuleComponent = InCapsuleComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RequestPlayOnSolvedAudio
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::RequestPlayOnSolvedAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RequestPlayOnSolvedAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.RequestUpdateFlashlightFocus
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::RequestUpdateFlashlightFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "RequestUpdateFlashlightFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ResetCameraRotation
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::ResetCameraRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ResetCameraRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.SetControlTips
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FDataTableRowHandle>      TipSet                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHFocusableComponent::SetControlTips(const TArray<struct FDataTableRowHandle>& TipSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "SetControlTips");

	Params::SHFocusableComponent_SetControlTips Parms{};

	Parms.TipSet = std::move(TipSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.SetDefaultControlTips
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::SetDefaultControlTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "SetDefaultControlTips");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.SetInputBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::SetInputBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "SetInputBlocked");

	Params::SHFocusableComponent_SetInputBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.SetInteractBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::SetInteractBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "SetInteractBlocked");

	Params::SHFocusableComponent_SetInteractBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.SetSolved
// (Final, Native, Public, BlueprintCallable)

void USHFocusableComponent::SetSolved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "SetSolved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ShowCombinedTranscriptsRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class USHTranscriptData*>        InTranscripts                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           InJoinDelimiter                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ShowCombinedTranscriptsRequest(const TArray<class USHTranscriptData*>& InTranscripts, const class FString& InJoinDelimiter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ShowCombinedTranscriptsRequest");

	Params::SHFocusableComponent_ShowCombinedTranscriptsRequest Parms{};

	Parms.InTranscripts = std::move(InTranscripts);
	Parms.InJoinDelimiter = std::move(InJoinDelimiter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ShowMiniInventoryRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ShowMiniInventoryRequest(bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ShowMiniInventoryRequest");

	Params::SHFocusableComponent_ShowMiniInventoryRequest Parms{};

	Parms.bInstant = bInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.ShowTranscriptRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USHTranscriptData> InTranscriptData                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFocusableComponent::ShowTranscriptRequest(TSoftObjectPtr<class USHTranscriptData> InTranscriptData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "ShowTranscriptRequest");

	Params::SHFocusableComponent_ShowTranscriptRequest Parms{};

	Parms.InTranscriptData = InTranscriptData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFocusableComponent.GenericNavigation_CalculateIndex
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InInput                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USceneComponent*>          InSlotArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                                   InCurrentSlotIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFocusableComponent::GenericNavigation_CalculateIndex(const struct FVector2D& InInput, const TArray<class USceneComponent*>& InSlotArray, int32 InCurrentSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "GenericNavigation_CalculateIndex");

	Params::SHFocusableComponent_GenericNavigation_CalculateIndex Parms{};

	Parms.InInput = std::move(InInput);
	Parms.InSlotArray = std::move(InSlotArray);
	Parms.InCurrentSlotIndex = InCurrentSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.GenericNavigation_CalculateIndex_Impl
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        InInput                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  InWorldLocationsArray                                  (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   InCurrentSlotIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFocusableComponent::GenericNavigation_CalculateIndex_Impl(const struct FVector2D& InInput, const TArray<struct FVector>& InWorldLocationsArray, int32 InCurrentSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "GenericNavigation_CalculateIndex_Impl");

	Params::SHFocusableComponent_GenericNavigation_CalculateIndex_Impl Parms{};

	Parms.InInput = std::move(InInput);
	Parms.InWorldLocationsArray = std::move(InWorldLocationsArray);
	Parms.InCurrentSlotIndex = InCurrentSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.GenericNavigation_NavigateInputAction
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InputValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CurrentInput                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFocusableInputActionTypeEnum         InputAction                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D USHFocusableComponent::GenericNavigation_NavigateInputAction(const float InputValue, const struct FVector2D& CurrentInput, const ESHFocusableInputActionTypeEnum InputAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "GenericNavigation_NavigateInputAction");

	Params::SHFocusableComponent_GenericNavigation_NavigateInputAction Parms{};

	Parms.InputValue = InputValue;
	Parms.CurrentInput = std::move(CurrentInput);
	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.GetInteractingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHFocusableComponent::GetInteractingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "GetInteractingCharacter");

	Params::SHFocusableComponent_GetInteractingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.GetMiniInventoryTypesFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<ESHItemTypeEnum>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ESHItemTypeEnum> USHFocusableComponent::GetMiniInventoryTypesFilter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "GetMiniInventoryTypesFilter");

	Params::SHFocusableComponent_GetMiniInventoryTypesFilter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsCameraRotationAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsCameraRotationAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsCameraRotationAllowed");

	Params::SHFocusableComponent_IsCameraRotationAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsInputBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsInputBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsInputBlocked");

	Params::SHFocusableComponent_IsInputBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsInteractBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsInteractBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsInteractBlocked");

	Params::SHFocusableComponent_IsInteractBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsMiniInventoryShown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsMiniInventoryShown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsMiniInventoryShown");

	Params::SHFocusableComponent_IsMiniInventoryShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsShown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsShown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsShown");

	Params::SHFocusableComponent_IsShown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFocusableComponent.IsSolved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFocusableComponent::IsSolved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFocusableComponent", "IsSolved");

	Params::SHFocusableComponent_IsSolved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFogManager.OnRestoreWorldDependentSettingsNative
// (Final, Native, Protected)
// Parameters:
// class USHGameInstance*                  OutGameInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFogManager::OnRestoreWorldDependentSettingsNative(class USHGameInstance* OutGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFogManager", "OnRestoreWorldDependentSettingsNative");

	Params::SHFogManager_OnRestoreWorldDependentSettingsNative Parms{};

	Parms.OutGameInstance = OutGameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFogManager.SHDebug_Fog_DrawDebug
// (Final, Exec, Native, Protected)

void USHFogManager::SHDebug_Fog_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFogManager", "SHDebug_Fog_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFogManager.SHDebug_Fog_ValuesDebug
// (Final, Exec, Native, Protected)

void USHFogManager::SHDebug_Fog_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFogManager", "SHDebug_Fog_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFragileElevatorEngine.RequestBreakDoor
// (Final, Native, Public, BlueprintCallable)

void ASHFragileElevatorEngine::RequestBreakDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFragileElevatorEngine", "RequestBreakDoor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFragileElevatorEngine.RequestBreakDoorAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHFragileElevatorEngine::RequestBreakDoorAt(float InAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFragileElevatorEngine", "RequestBreakDoorAt");

	Params::SHFragileElevatorEngine_RequestBreakDoorAt Parms{};

	Parms.InAlpha = InAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFragileElevatorEngine.RequestBreakMovement
// (Final, Native, Public, BlueprintCallable)

void ASHFragileElevatorEngine::RequestBreakMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFragileElevatorEngine", "RequestBreakMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFreezingManagerComponent.GetEncompassedFreezingVolume
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHFreezingVolume*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHFreezingVolume* USHFreezingManagerComponent::GetEncompassedFreezingVolume(const struct FVector& InLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFreezingManagerComponent", "GetEncompassedFreezingVolume");

	Params::SHFreezingManagerComponent_GetEncompassedFreezingVolume Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFreezingManagerComponent.GetRegisteredFreezingVolumeCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFreezingManagerComponent::GetRegisteredFreezingVolumeCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFreezingManagerComponent", "GetRegisteredFreezingVolumeCount");

	Params::SHFreezingManagerComponent_GetRegisteredFreezingVolumeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFriendLocomotionAnimInstance.GetFriendAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHFriendAnimInstanceStateData*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHFriendAnimInstanceStateData* USHFriendLocomotionAnimInstance::GetFriendAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFriendLocomotionAnimInstance", "GetFriendAnimInstanceStateData");

	Params::SHFriendLocomotionAnimInstance_GetFriendAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXMaterialModifierSubcomp.SetMaterialLayerBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXMaterialModifierSubcomp::SetMaterialLayerBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXMaterialModifierSubcomp", "SetMaterialLayerBlocked");

	Params::SHFXMaterialModifierSubcomp_SetMaterialLayerBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXMaterialModifierSubcomp.GetDynamicMaterialsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXMaterialModifierSubcomp::GetDynamicMaterialsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXMaterialModifierSubcomp", "GetDynamicMaterialsCount");

	Params::SHFXMaterialModifierSubcomp_GetDynamicMaterialsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXMaterialModifierSubcomp.IsMaterialLayerBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXMaterialModifierSubcomp::IsMaterialLayerBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXMaterialModifierSubcomp", "IsMaterialLayerBlocked");

	Params::SHFXMaterialModifierSubcomp_IsMaterialLayerBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXMaterialModifierSubcomp.IsMaterialLayerBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXMaterialModifierSubcomp::IsMaterialLayerBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXMaterialModifierSubcomp", "IsMaterialLayerBlockedBy");

	Params::SHFXMaterialModifierSubcomp_IsMaterialLayerBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXAcidLayerSubcomp.RunAcidEffectOnPlayer
// (Final, Native, Public, BlueprintCallable)

void USHFXAcidLayerSubcomp::RunAcidEffectOnPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXAcidLayerSubcomp", "RunAcidEffectOnPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXAcidLayerSubcomp.GetCurrentEvaluateTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXAcidLayerSubcomp::GetCurrentEvaluateTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXAcidLayerSubcomp", "GetCurrentEvaluateTimer");

	Params::SHFXAcidLayerSubcomp_GetCurrentEvaluateTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXBleedingSubcomp.SetBleedingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXBleedingSubcomp::SetBleedingBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBleedingSubcomp", "SetBleedingBlocked");

	Params::SHFXBleedingSubcomp_SetBleedingBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXBleedingSubcomp.IsBleedingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXBleedingSubcomp::IsBleedingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBleedingSubcomp", "IsBleedingBlocked");

	Params::SHFXBleedingSubcomp_IsBleedingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXBleedingSubcomp.IsBleedingBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXBleedingSubcomp::IsBleedingBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXBleedingSubcomp", "IsBleedingBlockedBy");

	Params::SHFXBleedingSubcomp_IsBleedingBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.ChangeDirtBlendLayerAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXDirtLayerSubcomp::ChangeDirtBlendLayerAmount(float DeltaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "ChangeDirtBlendLayerAmount");

	Params::SHFXDirtLayerSubcomp_ChangeDirtBlendLayerAmount Parms{};

	Parms.DeltaValue = DeltaValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXDirtLayerSubcomp.PreloadDirtState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFXDirtState                          InDirtState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXDirtLayerSubcomp::PreloadDirtState(int32 DirtSetIndex, ESHFXDirtState InDirtState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "PreloadDirtState");

	Params::SHFXDirtLayerSubcomp_PreloadDirtState Parms{};

	Parms.DirtSetIndex = DirtSetIndex;
	Parms.InDirtState = InDirtState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.SetDirtBlendLayerValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDirtValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXDirtLayerSubcomp::SetDirtBlendLayerValue(float InDirtValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "SetDirtBlendLayerValue");

	Params::SHFXDirtLayerSubcomp_SetDirtBlendLayerValue Parms{};

	Parms.InDirtValue = InDirtValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXDirtLayerSubcomp.SetDirtState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFXDirtState                          InDirtState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXDirtLayerSubcomp::SetDirtState(int32 DirtSetIndex, ESHFXDirtState InDirtState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "SetDirtState");

	Params::SHFXDirtLayerSubcomp_SetDirtState Parms{};

	Parms.DirtSetIndex = DirtSetIndex;
	Parms.InDirtState = InDirtState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.CheckDynamicMaterialValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXDirtLayerSubcomp::CheckDynamicMaterialValid(int32 DirtSetIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "CheckDynamicMaterialValid");

	Params::SHFXDirtLayerSubcomp_CheckDynamicMaterialValid Parms{};

	Parms.DirtSetIndex = DirtSetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.GetDirtBlendLayerValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXDirtLayerSubcomp::GetDirtBlendLayerValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "GetDirtBlendLayerValue");

	Params::SHFXDirtLayerSubcomp_GetDirtBlendLayerValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.GetDirtSetCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXDirtLayerSubcomp::GetDirtSetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "GetDirtSetCount");

	Params::SHFXDirtLayerSubcomp_GetDirtSetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.GetDirtState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHFXDirtState                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHFXDirtState USHFXDirtLayerSubcomp::GetDirtState(int32 DirtSetIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "GetDirtState");

	Params::SHFXDirtLayerSubcomp_GetDirtState Parms{};

	Parms.DirtSetIndex = DirtSetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.GetDirtStateMaterialName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString USHFXDirtLayerSubcomp::GetDirtStateMaterialName(int32 DirtSetIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "GetDirtStateMaterialName");

	Params::SHFXDirtLayerSubcomp_GetDirtStateMaterialName Parms{};

	Parms.DirtSetIndex = DirtSetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXDirtLayerSubcomp.GetDirtStateMaterialStats
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DirtSetIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutOverridedTextureParameterCount                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutOverridedScalarParameterCount                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXDirtLayerSubcomp::GetDirtStateMaterialStats(int32 DirtSetIndex, int32* OutOverridedTextureParameterCount, int32* OutOverridedScalarParameterCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXDirtLayerSubcomp", "GetDirtStateMaterialStats");

	Params::SHFXDirtLayerSubcomp_GetDirtStateMaterialStats Parms{};

	Parms.DirtSetIndex = DirtSetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOverridedTextureParameterCount != nullptr)
		*OutOverridedTextureParameterCount = Parms.OutOverridedTextureParameterCount;

	if (OutOverridedScalarParameterCount != nullptr)
		*OutOverridedScalarParameterCount = Parms.OutOverridedScalarParameterCount;
}


// Function SHProto.SHFXFrozenBreathSubcomp.SetFrozenBreathBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXFrozenBreathSubcomp::SetFrozenBreathBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXFrozenBreathSubcomp", "SetFrozenBreathBlocked");

	Params::SHFXFrozenBreathSubcomp_SetFrozenBreathBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXFrozenBreathSubcomp.GetFreezingVolumesCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXFrozenBreathSubcomp::GetFreezingVolumesCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXFrozenBreathSubcomp", "GetFreezingVolumesCount");

	Params::SHFXFrozenBreathSubcomp_GetFreezingVolumesCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXFrozenBreathSubcomp.IsFrozenBreathBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXFrozenBreathSubcomp::IsFrozenBreathBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXFrozenBreathSubcomp", "IsFrozenBreathBlocked");

	Params::SHFXFrozenBreathSubcomp_IsFrozenBreathBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXFrozenBreathSubcomp.IsFrozenBreathBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXFrozenBreathSubcomp::IsFrozenBreathBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXFrozenBreathSubcomp", "IsFrozenBreathBlockedBy");

	Params::SHFXFrozenBreathSubcomp_IsFrozenBreathBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXFrozenBreathSubcomp.IsInFreezingZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXFrozenBreathSubcomp::IsInFreezingZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXFrozenBreathSubcomp", "IsInFreezingZone");

	Params::SHFXFrozenBreathSubcomp_IsInFreezingZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXPenetrateSplashSubcomp.ProcessOwnerDamage
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ShotFromDirection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*                      DamageType                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXPenetrateSplashSubcomp::ProcessOwnerDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXPenetrateSplashSubcomp", "ProcessOwnerDamage");

	Params::SHFXPenetrateSplashSubcomp_ProcessOwnerDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.DamageType = DamageType;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.GetSpawnedRainDrippingNiagaraComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* USHFXRaingWettingSubcomp::GetSpawnedRainDrippingNiagaraComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "GetSpawnedRainDrippingNiagaraComponent");

	Params::SHFXRaingWettingSubcomp_GetSpawnedRainDrippingNiagaraComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainDrippingActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainDrippingActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainDrippingActive");

	Params::SHFXRaingWettingSubcomp_IsRainDrippingActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetRainDrippingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetRainDrippingBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetRainDrippingBlocked");

	Params::SHFXRaingWettingSubcomp_SetRainDrippingBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetRainDripSpawnRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InSpawnRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetRainDripSpawnRate(float InSpawnRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetRainDripSpawnRate");

	Params::SHFXRaingWettingSubcomp_SetRainDripSpawnRate Parms{};

	Parms.InSpawnRate = InSpawnRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetRainingBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetRainingBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetRainingBlocked");

	Params::SHFXRaingWettingSubcomp_SetRainingBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetRainSplashesBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetRainSplashesBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetRainSplashesBlocked");

	Params::SHFXRaingWettingSubcomp_SetRainSplashesBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetWadingAltitudeRelative
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   WadingHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetWadingAltitudeRelative(float WadingHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetWadingAltitudeRelative");

	Params::SHFXRaingWettingSubcomp_SetWadingAltitudeRelative Parms{};

	Parms.WadingHeight = WadingHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetWadingAltitudeWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   WadingHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetWadingAltitudeWorld(float WadingHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetWadingAltitudeWorld");

	Params::SHFXRaingWettingSubcomp_SetWadingAltitudeWorld Parms{};

	Parms.WadingHeight = WadingHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXRaingWettingSubcomp.SetWetDryFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWetFactor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SetWetDryFactor(float InWetFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SetWetDryFactor");

	Params::SHFXRaingWettingSubcomp_SetWetDryFactor Parms{};

	Parms.InWetFactor = InWetFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHFXRaingWettingSubcomp.SHRainWettingFXEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHFXRaingWettingSubcomp*         Component                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXRaingWettingSubcomp::SHRainWettingFXEvent__DelegateSignature(class USHFXRaingWettingSubcomp* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "SHRainWettingFXEvent__DelegateSignature");

	Params::SHFXRaingWettingSubcomp_SHRainWettingFXEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHFXRaingWettingSubcomp.GetCurvesEvaluateTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXRaingWettingSubcomp::GetCurvesEvaluateTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "GetCurvesEvaluateTimer");

	Params::SHFXRaingWettingSubcomp_GetCurvesEvaluateTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.GetDripIntensityValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXRaingWettingSubcomp::GetDripIntensityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "GetDripIntensityValue");

	Params::SHFXRaingWettingSubcomp_GetDripIntensityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.GetWadingAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXRaingWettingSubcomp::GetWadingAltitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "GetWadingAltitude");

	Params::SHFXRaingWettingSubcomp_GetWadingAltitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.GetWetDryFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXRaingWettingSubcomp::GetWetDryFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "GetWetDryFactor");

	Params::SHFXRaingWettingSubcomp_GetWetDryFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsInRainZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsInRainZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsInRainZone");

	Params::SHFXRaingWettingSubcomp_IsInRainZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainDrippingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainDrippingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainDrippingBlocked");

	Params::SHFXRaingWettingSubcomp_IsRainDrippingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainDrippingBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainDrippingBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainDrippingBlockedBy");

	Params::SHFXRaingWettingSubcomp_IsRainDrippingBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainingBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainingBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainingBlocked");

	Params::SHFXRaingWettingSubcomp_IsRainingBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainingBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainingBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainingBlockedBy");

	Params::SHFXRaingWettingSubcomp_IsRainingBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainSplashesBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainSplashesBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainSplashesBlocked");

	Params::SHFXRaingWettingSubcomp_IsRainSplashesBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXRaingWettingSubcomp.IsRainSplashesBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXRaingWettingSubcomp::IsRainSplashesBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXRaingWettingSubcomp", "IsRainSplashesBlockedBy");

	Params::SHFXRaingWettingSubcomp_IsRainSplashesBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXSwarmSubcomp.GetCurrentZoneCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXSwarmSubcomp::GetCurrentZoneCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXSwarmSubcomp", "GetCurrentZoneCount");

	Params::SHFXSwarmSubcomp_GetCurrentZoneCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXSwarmSubcomp.GetRegisteredSwarmVolumeCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USHFXSwarmSubcomp::GetRegisteredSwarmVolumeCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXSwarmSubcomp", "GetRegisteredSwarmVolumeCount");

	Params::SHFXSwarmSubcomp_GetRegisteredSwarmVolumeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXSwarmSubcomp.GetRegisteredSwarmVolumes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ASHSwarmVolume*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ASHSwarmVolume*> USHFXSwarmSubcomp::GetRegisteredSwarmVolumes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXSwarmSubcomp", "GetRegisteredSwarmVolumes");

	Params::SHFXSwarmSubcomp_GetRegisteredSwarmVolumes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXSwarmSubcomp.IsInSwarmZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHFXSwarmSubcomp::IsInSwarmZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXSwarmSubcomp", "IsInSwarmZone");

	Params::SHFXSwarmSubcomp_IsInSwarmZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXVisualHPSubcomp.ProcessHealthChangedAsAICharacter
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevHealth                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXVisualHPSubcomp::ProcessHealthChangedAsAICharacter(int32 PrevHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXVisualHPSubcomp", "ProcessHealthChangedAsAICharacter");

	Params::SHFXVisualHPSubcomp_ProcessHealthChangedAsAICharacter Parms{};

	Parms.PrevHealth = PrevHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXVisualHPSubcomp.ProcessHealthChangedAsPlayer
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayHealthComponent*  InHealthComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHFXVisualHPSubcomp::ProcessHealthChangedAsPlayer(class USHCharacterPlayHealthComponent* InHealthComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXVisualHPSubcomp", "ProcessHealthChangedAsPlayer");

	Params::SHFXVisualHPSubcomp_ProcessHealthChangedAsPlayer Parms{};

	Parms.InHealthComponent = InHealthComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHFXVisualHPSubcomp.GetCurrentCurveEvaluationValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXVisualHPSubcomp::GetCurrentCurveEvaluationValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXVisualHPSubcomp", "GetCurrentCurveEvaluationValue");

	Params::SHFXVisualHPSubcomp_GetCurrentCurveEvaluationValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXVisualHPSubcomp.GetCurrentErodeParameterValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXVisualHPSubcomp::GetCurrentErodeParameterValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXVisualHPSubcomp", "GetCurrentErodeParameterValue");

	Params::SHFXVisualHPSubcomp_GetCurrentErodeParameterValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHFXVisualHPSubcomp.GetOwnerHealthPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHFXVisualHPSubcomp::GetOwnerHealthPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHFXVisualHPSubcomp", "GetOwnerHealthPercentage");

	Params::SHFXVisualHPSubcomp_GetOwnerHealthPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameInstance.BeginCustomLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FStreamableLevelHandle           LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHGameInstance::BeginCustomLevel(const struct FStreamableLevelHandle& LevelHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameInstance", "BeginCustomLevel");

	Params::SHGameInstance_BeginCustomLevel Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameInstance.OnChangeWorldDependentSettings
// (Event, Public, BlueprintEvent)

void USHGameInstance::OnChangeWorldDependentSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameInstance", "OnChangeWorldDependentSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHGameInstance.OnRestoreWorldDependentSettings__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHGameInstance*                  OutGameInstance                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameInstance::OnRestoreWorldDependentSettings__DelegateSignature(class USHGameInstance* OutGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameInstance", "OnRestoreWorldDependentSettings__DelegateSignature");

	Params::SHGameInstance_OnRestoreWorldDependentSettings__DelegateSignature Parms{};

	Parms.OutGameInstance = OutGameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHGameplayEndGameCreditsWidget.Continue
// (Final, Native, Public, BlueprintCallable)

void USHGameplayEndGameCreditsWidget::Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameCreditsWidget", "Continue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayEndGamePanelWidget.Continue
// (Native, Public, BlueprintCallable)

void USHGameplayEndGamePanelWidget::Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGamePanelWidget", "Continue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayEndGamePanelWidget.OnHide
// (Event, Public, BlueprintEvent)

void USHGameplayEndGamePanelWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGamePanelWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayEndGamePanelWidget.OnShow
// (Event, Public, BlueprintEvent)

void USHGameplayEndGamePanelWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGamePanelWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayEndGameMovieWidget.OnMediaReachedEnd
// (Final, Native, Protected)

void USHGameplayEndGameMovieWidget::OnMediaReachedEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameMovieWidget", "OnMediaReachedEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayEndGameWidget.ActiveWidgetChanged
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ActiveWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ActiveWidgetIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayEndGameWidget::ActiveWidgetChanged(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameWidget", "ActiveWidgetChanged");

	Params::SHGameplayEndGameWidget_ActiveWidgetChanged Parms{};

	Parms.ActiveWidget = ActiveWidget;
	Parms.ActiveWidgetIndex = ActiveWidgetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayEndGameWidget.Continue
// (Final, Native, Protected, BlueprintCallable)

void USHGameplayEndGameWidget::Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameWidget", "Continue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayEndGameWidget.OnHide
// (Event, Protected, BlueprintEvent)

void USHGameplayEndGameWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayEndGameWidget.OnShow
// (Event, Protected, BlueprintEvent)

void USHGameplayEndGameWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayEndGameWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayFadeWidget.BlueprintImplementableColorChanged
// (Event, Protected, BlueprintEvent)

void USHGameplayFadeWidget::BlueprintImplementableColorChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayFadeWidget", "BlueprintImplementableColorChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayFadeWidget.GetCurrentColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor USHGameplayFadeWidget::GetCurrentColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayFadeWidget", "GetCurrentColor");

	Params::SHGameplayFadeWidget_GetCurrentColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayHealingItemsNotificationRowWidget.ProcessHealthItemAnimationFinishedEvent
// (Final, Native, Protected)

void USHGameplayHealingItemsNotificationRowWidget::ProcessHealthItemAnimationFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayHealingItemsNotificationRowWidget", "ProcessHealthItemAnimationFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayHealingItemsNotificationRowWidget.UpdateItemsCountText
// (Final, Native, Protected, BlueprintCallable)

void USHGameplayHealingItemsNotificationRowWidget::UpdateItemsCountText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayHealingItemsNotificationRowWidget", "UpdateItemsCountText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayHealingItemsNotificationWidget.ProcessShowHideAnimationFinishedEvent
// (Final, Native, Protected)

void USHGameplayHealingItemsNotificationWidget::ProcessShowHideAnimationFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayHealingItemsNotificationWidget", "ProcessShowHideAnimationFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayInventorySlider.ProcessAnimationFinishedEvent
// (Final, Native, Protected)

void USHGameplayInventorySlider::ProcessAnimationFinishedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayInventorySlider", "ProcessAnimationFinishedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayInventorySlider.RefreshItemNameAndDescription
// (Final, Native, Protected, BlueprintCallable)

void USHGameplayInventorySlider::RefreshItemNameAndDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayInventorySlider", "RefreshItemNameAndDescription");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayInventorySlider.RefreshItemsZOrder
// (Final, Native, Protected, BlueprintCallable)

void USHGameplayInventorySlider::RefreshItemsZOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayInventorySlider", "RefreshItemsZOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayItemInvestigationWidget.OnInit
// (Event, Public, BlueprintEvent)

void USHGameplayItemInvestigationWidget::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayItemInvestigationWidget", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayMapObjectComponent.SendDynamicObjectDataToGameplayMap
// (Final, Native, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                          WorldLoc                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DataValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapObjectComponent::SendDynamicObjectDataToGameplayMap(const struct FVector& WorldLoc, int32 DataValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapObjectComponent", "SendDynamicObjectDataToGameplayMap");

	Params::SHGameplayMapObjectComponent_SendDynamicObjectDataToGameplayMap Parms{};

	Parms.WorldLoc = std::move(WorldLoc);
	Parms.DataValue = DataValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapObjectComponent.SendObjectDataToGameplayMap
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int32                                   DataValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapObjectComponent::SendObjectDataToGameplayMap(int32 DataValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapObjectComponent", "SendObjectDataToGameplayMap");

	Params::SHGameplayMapObjectComponent_SendObjectDataToGameplayMap Parms{};

	Parms.DataValue = DataValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorAttachmentComponent.OnFocusableShown
// (Final, Native, Protected)
// Parameters:
// class USHFocusableComponent*            FocusableComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorAttachmentComponent::OnFocusableShown(class USHFocusableComponent* FocusableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorAttachmentComponent", "OnFocusableShown");

	Params::SHGameplayMapDoorAttachmentComponent_OnFocusableShown Parms{};

	Parms.FocusableComponent = FocusableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorAttachmentComponent.OnFocusableSolved
// (Final, Native, Protected)
// Parameters:
// class USHFocusableComponent*            FocusableComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorAttachmentComponent::OnFocusableSolved(class USHFocusableComponent* FocusableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorAttachmentComponent", "OnFocusableSolved");

	Params::SHGameplayMapDoorAttachmentComponent_OnFocusableSolved Parms{};

	Parms.FocusableComponent = FocusableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.DisplayCannotBePassedAsObstacle
// (Final, Native, Public, BlueprintCallable)

void USHGameplayMapDoorComponent::DisplayCannotBePassedAsObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "DisplayCannotBePassedAsObstacle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnAttachmentFocusableShown
// (Final, Native, Protected)
// Parameters:
// class USHFocusableComponent*            FocusableComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnAttachmentFocusableShown(class USHFocusableComponent* FocusableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnAttachmentFocusableShown");

	Params::SHGameplayMapDoorComponent_OnAttachmentFocusableShown Parms{};

	Parms.FocusableComponent = FocusableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnAutoLockedAnimationPlayed
// (Final, Native, Protected)
// Parameters:
// class USHDoorAnimationsComponent*       DoorAnimationsComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnAutoLockedAnimationPlayed(class USHDoorAnimationsComponent* DoorAnimationsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnAutoLockedAnimationPlayed");

	Params::SHGameplayMapDoorComponent_OnAutoLockedAnimationPlayed Parms{};

	Parms.DoorAnimationsComponent = DoorAnimationsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnDoorLockStateChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorLockBaseComponent*         DoorLockBaseComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnDoorLockStateChanged(class USHDoorLockBaseComponent* DoorLockBaseComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnDoorLockStateChanged");

	Params::SHGameplayMapDoorComponent_OnDoorLockStateChanged Parms{};

	Parms.DoorLockBaseComponent = DoorLockBaseComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnLockedAnimationPlayed
// (Final, Native, Protected)
// Parameters:
// class USHSlidingDoorAnimationsComponent*SlidingDoorAnimationsComponent                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnLockedAnimationPlayed(class USHSlidingDoorAnimationsComponent* SlidingDoorAnimationsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnLockedAnimationPlayed");

	Params::SHGameplayMapDoorComponent_OnLockedAnimationPlayed Parms{};

	Parms.SlidingDoorAnimationsComponent = SlidingDoorAnimationsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnOpenAnimationPlayed
// (Final, Native, Protected)
// Parameters:
// class USHSlidingDoorAnimationsComponent*SlidingDoorAnimationsComponent                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnOpenAnimationPlayed(class USHSlidingDoorAnimationsComponent* SlidingDoorAnimationsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnOpenAnimationPlayed");

	Params::SHGameplayMapDoorComponent_OnOpenAnimationPlayed Parms{};

	Parms.SlidingDoorAnimationsComponent = SlidingDoorAnimationsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapDoorComponent.OnPhysicMovementAppliedForceFromActor
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementComponent*         DoorMovementComponent                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapDoorComponent::OnPhysicMovementAppliedForceFromActor(class USHDoorMovementComponent* DoorMovementComponent, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapDoorComponent", "OnPhysicMovementAppliedForceFromActor");

	Params::SHGameplayMapDoorComponent_OnPhysicMovementAppliedForceFromActor Parms{};

	Parms.DoorMovementComponent = DoorMovementComponent;
	Parms.ActorContext = ActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapFocusableComponent.ProcessFocusableShownEvent
// (Final, Native, Protected)
// Parameters:
// class USHFocusableComponent*            FocusableComponentPtr                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapFocusableComponent::ProcessFocusableShownEvent(class USHFocusableComponent* FocusableComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapFocusableComponent", "ProcessFocusableShownEvent");

	Params::SHGameplayMapFocusableComponent_ProcessFocusableShownEvent Parms{};

	Parms.FocusableComponentPtr = FocusableComponentPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapFocusableComponent.ProcessFocusableSolvedEvent
// (Final, Native, Protected)
// Parameters:
// class USHFocusableComponent*            FocusableComponentPtr                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapFocusableComponent::ProcessFocusableSolvedEvent(class USHFocusableComponent* FocusableComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapFocusableComponent", "ProcessFocusableSolvedEvent");

	Params::SHGameplayMapFocusableComponent_ProcessFocusableSolvedEvent Parms{};

	Parms.FocusableComponentPtr = FocusableComponentPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapFocusableComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHGameplayMapFocusableComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapFocusableComponent", "ProcessProximityBeginOverlap");

	Params::SHGameplayMapFocusableComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapItemComponent.ProcessItemCollected
// (Final, Native, Protected)
// Parameters:
// class ASHItem*                          ItemPtr                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapItemComponent::ProcessItemCollected(class ASHItem* ItemPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapItemComponent", "ProcessItemCollected");

	Params::SHGameplayMapItemComponent_ProcessItemCollected Parms{};

	Parms.ItemPtr = ItemPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapItemComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHGameplayMapItemComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapItemComponent", "ProcessProximityBeginOverlap");

	Params::SHGameplayMapItemComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapLadderComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHGameplayMapLadderComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapLadderComponent", "ProcessProximityBeginOverlap");

	Params::SHGameplayMapLadderComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapPushableComponent.ProcessComponentBlockedChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             PushableComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapPushableComponent::ProcessComponentBlockedChangedEvent(class USHPushableComponent* PushableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapPushableComponent", "ProcessComponentBlockedChangedEvent");

	Params::SHGameplayMapPushableComponent_ProcessComponentBlockedChangedEvent Parms{};

	Parms.PushableComponent = PushableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapPushableComponent.ProcessComponentMovementEvent
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             PushableComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayMapPushableComponent::ProcessComponentMovementEvent(class USHPushableComponent* PushableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapPushableComponent", "ProcessComponentMovementEvent");

	Params::SHGameplayMapPushableComponent_ProcessComponentMovementEvent Parms{};

	Parms.PushableComponent = PushableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayMapRenderWidget.OnInit
// (Event, Protected, BlueprintEvent)

void USHGameplayMapRenderWidget::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayMapRenderWidget", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayRadioIndicatorWidget.ProcessOwnerCharacterItemCollectedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayRadioIndicatorWidget::ProcessOwnerCharacterItemCollectedEvent(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayRadioIndicatorWidget", "ProcessOwnerCharacterItemCollectedEvent");

	Params::SHGameplayRadioIndicatorWidget_ProcessOwnerCharacterItemCollectedEvent Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayReadingWidget.ProcessPlayerSettingsChanged
// (Event, Protected, BlueprintEvent)

void USHGameplayReadingWidget::ProcessPlayerSettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayReadingWidget", "ProcessPlayerSettingsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayReadingWidget.ProcessShow
// (Event, Protected, BlueprintEvent)

void USHGameplayReadingWidget::ProcessShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayReadingWidget", "ProcessShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplaySaveMenuWidget.HideInstant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplaySaveMenuWidget::HideInstant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySaveMenuWidget", "HideInstant");

	Params::SHGameplaySaveMenuWidget_HideInstant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplaySaveMenuWidget.PlayHide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplaySaveMenuWidget::PlayHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySaveMenuWidget", "PlayHide");

	Params::SHGameplaySaveMenuWidget_PlayHide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplaySaveMenuWidget.PlaySetup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASHSavePoint*                     SavePoint                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplaySaveMenuWidget::PlaySetup(class ASHSavePoint* SavePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySaveMenuWidget", "PlaySetup");

	Params::SHGameplaySaveMenuWidget_PlaySetup Parms{};

	Parms.SavePoint = SavePoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplaySaveMenuWidget.PlayShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplaySaveMenuWidget::PlayShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySaveMenuWidget", "PlayShow");

	Params::SHGameplaySaveMenuWidget_PlayShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplaySaveMenuWidget.IsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplaySaveMenuWidget::IsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplaySaveMenuWidget", "IsAvailable");

	Params::SHGameplaySaveMenuWidget_IsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayStatics.AddFutureViewLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::AddFutureViewLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "AddFutureViewLocation");

	Params::SHGameplayStatics_AddFutureViewLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.CreateAutoSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAutoSaveName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::CreateAutoSave(const class UObject* WorldContextObject, class FName InAutoSaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "CreateAutoSave");

	Params::SHGameplayStatics_CreateAutoSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InAutoSaveName = InAutoSaveName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.DestroyChildActorChild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UChildActorComponent*             ChildActorComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::DestroyChildActorChild(class UChildActorComponent* ChildActorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "DestroyChildActorChild");

	Params::SHGameplayStatics_DestroyChildActorChild Parms{};

	Parms.ChildActorComponent = ChildActorComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.EnsurePlayerHasFullHealth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInvisibleHeal                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::EnsurePlayerHasFullHealth(const class UObject* WorldContextObject, const bool bInInvisibleHeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "EnsurePlayerHasFullHealth");

	Params::SHGameplayStatics_EnsurePlayerHasFullHealth Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bInInvisibleHeal = bInInvisibleHeal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.GameEnded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::GameEnded(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "GameEnded");

	Params::SHGameplayStatics_GameEnded Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.GameOver
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameOverCause                          Cause                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::GameOver(const class UObject* WorldContextObject, EGameOverCause Cause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "GameOver");

	Params::SHGameplayStatics_GameOver Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Cause = Cause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.GetCombatDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECombatDifficulty                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECombatDifficulty USHGameplayStatics::GetCombatDifficulty(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "GetCombatDifficulty");

	Params::SHGameplayStatics_GetCombatDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayStatics.GetPuzzlesDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPuzzlesDifficulty                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPuzzlesDifficulty USHGameplayStatics::GetPuzzlesDifficulty(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "GetPuzzlesDifficulty");

	Params::SHGameplayStatics_GetPuzzlesDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayStatics.IsCharacterOverlappingProximitySphere
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACharacter*                       InCharacter                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USphereComponent*                 InProximitySphere                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplayStatics::IsCharacterOverlappingProximitySphere(class ACharacter* InCharacter, class USphereComponent* InProximitySphere)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "IsCharacterOverlappingProximitySphere");

	Params::SHGameplayStatics_IsCharacterOverlappingProximitySphere Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InProximitySphere = InProximitySphere;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayStatics.RecordCombatState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContextString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::RecordCombatState(const class UObject* WorldContextObject, const class FString& InContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "RecordCombatState");

	Params::SHGameplayStatics_RecordCombatState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InContextString = std::move(InContextString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.RecordEndingsFactorsState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContextString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::RecordEndingsFactorsState(const class UObject* WorldContextObject, const class FString& InContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "RecordEndingsFactorsState");

	Params::SHGameplayStatics_RecordEndingsFactorsState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InContextString = std::move(InContextString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.RecordInventoryState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContextString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::RecordInventoryState(const class UObject* WorldContextObject, const class FString& InContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "RecordInventoryState");

	Params::SHGameplayStatics_RecordInventoryState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InContextString = std::move(InContextString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.ReCreateChildActorChild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UChildActorComponent*             ChildActorComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::ReCreateChildActorChild(class UChildActorComponent* ChildActorComponent, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "ReCreateChildActorChild");

	Params::SHGameplayStatics_ReCreateChildActorChild Parms{};

	Parms.ChildActorComponent = ChildActorComponent;
	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStatics.SaveAndReloadGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAutoSaveName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayStatics::SaveAndReloadGame(const class UObject* WorldContextObject, class FName InAutoSaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayStatics", "SaveAndReloadGame");

	Params::SHGameplayStatics_SaveAndReloadGame Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InAutoSaveName = InAutoSaveName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayStruggleWidget.OnHide
// (Event, Protected, BlueprintEvent)

void USHGameplayStruggleWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayStruggleWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayStruggleWidget.OnInstantHide
// (Event, Protected, BlueprintEvent)

void USHGameplayStruggleWidget::OnInstantHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayStruggleWidget", "OnInstantHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayStruggleWidget.OnShow
// (Event, Protected, BlueprintEvent)

void USHGameplayStruggleWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGameplayStruggleWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHGameplayUIStatics.HideTips
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::HideTips(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "HideTips");

	Params::SHGameplayUIStatics_HideTips Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.LatentGameplayFadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::LatentGameplayFadeIn(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "LatentGameplayFadeIn");

	Params::SHGameplayUIStatics_LatentGameplayFadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.LatentGameplayFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::LatentGameplayFadeOut(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "LatentGameplayFadeOut");

	Params::SHGameplayUIStatics_LatentGameplayFadeOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.RemoveGameplayFadeInstant
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::RemoveGameplayFadeInstant(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RemoveGameplayFadeInstant");

	Params::SHGameplayUIStatics_RemoveGameplayFadeInstant Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.RequestCustomGameplayFadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFadeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHGameplayUIStatics::RequestCustomGameplayFadeIn(class UObject* WorldContextObject, float InFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RequestCustomGameplayFadeIn");

	Params::SHGameplayUIStatics_RequestCustomGameplayFadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InFadeTime = InFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayUIStatics.RequestCustomGameplayFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFadeTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHGameplayUIStatics::RequestCustomGameplayFadeOut(class UObject* WorldContextObject, float InFadeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RequestCustomGameplayFadeOut");

	Params::SHGameplayUIStatics_RequestCustomGameplayFadeOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InFadeTime = InFadeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayUIStatics.RequestGameplayFadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHGameplayUIStatics::RequestGameplayFadeIn(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RequestGameplayFadeIn");

	Params::SHGameplayUIStatics_RequestGameplayFadeIn Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayUIStatics.RequestGameplayFadeOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHGameplayUIStatics::RequestGameplayFadeOut(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RequestGameplayFadeOut");

	Params::SHGameplayUIStatics_RequestGameplayFadeOut Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayUIStatics.RequestItemNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemDataRowName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHGameplayItemNotificationType         ItemNotificationType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::RequestItemNotification(class UObject* WorldContextObject, class FName ItemDataRowName, int32 ItemQuantity, ESHGameplayItemNotificationType ItemNotificationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "RequestItemNotification");

	Params::SHGameplayUIStatics_RequestItemNotification Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDataRowName = ItemDataRowName;
	Parms.ItemQuantity = ItemQuantity;
	Parms.ItemNotificationType = ItemNotificationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.SetGameplayFadeColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::SetGameplayFadeColor(class UObject* WorldContextObject, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "SetGameplayFadeColor");

	Params::SHGameplayUIStatics_SetGameplayFadeColor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGameplayUIStatics.ShowEnviromentalSubtitle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogLine                      DialogLineID                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHGameplayUIStatics::ShowEnviromentalSubtitle(class UObject* WorldContextObject, const struct FDialogLine& DialogLineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "ShowEnviromentalSubtitle");

	Params::SHGameplayUIStatics_ShowEnviromentalSubtitle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DialogLineID = std::move(DialogLineID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHGameplayUIStatics.ShowTips
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Tips                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    WithBackground                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseVisibilitySettings                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHGameplayUIStatics::ShowTips(class UObject* WorldContextObject, const TArray<class FName>& Tips, bool WithBackground, bool UseVisibilitySettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHGameplayUIStatics", "ShowTips");

	Params::SHGameplayUIStatics_ShowTips Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tips = std::move(Tips);
	Parms.WithBackground = WithBackground;
	Parms.UseVisibilitySettings = UseVisibilitySettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHGeometryCollectionActor.GetNumElements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHGeometryCollectionActor::GetNumElements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHGeometryCollectionActor", "GetNumElements");

	Params::SHGeometryCollectionActor_GetNumElements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionCooldownComponent.GetVariantsOnCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHHitReactionResponseType              Reaction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USHHitReactionCooldownComponent::GetVariantsOnCooldown(ESHHitReactionResponseType Reaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionCooldownComponent", "GetVariantsOnCooldown");

	Params::SHHitReactionCooldownComponent_GetVariantsOnCooldown Parms{};

	Parms.Reaction = Reaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionCooldownComponent.IsReactionOnCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHHitReactionResponseType              Reaction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Variant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionCooldownComponent::IsReactionOnCooldown(ESHHitReactionResponseType Reaction, class FName Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionCooldownComponent", "IsReactionOnCooldown");

	Params::SHHitReactionCooldownComponent_IsReactionOnCooldown Parms{};

	Parms.Reaction = Reaction;
	Parms.Variant = Variant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionCooldownComponent.SetCooldownTimerForHitReaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHHitReactionResponseType              Reaction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Variant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionCooldownComponent::SetCooldownTimerForHitReaction(ESHHitReactionResponseType Reaction, class FName Variant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionCooldownComponent", "SetCooldownTimerForHitReaction");

	Params::SHHitReactionCooldownComponent_SetCooldownTimerForHitReaction Parms{};

	Parms.Reaction = Reaction;
	Parms.Variant = Variant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionState.BoundAnimationBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     InMontage                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          InAnimEndType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionState::BoundAnimationBlendingOut(class UAnimMontage* InMontage, ESHAnimEndType InAnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "BoundAnimationBlendingOut");

	Params::SHHitReactionState_BoundAnimationBlendingOut Parms{};

	Parms.InMontage = InMontage;
	Parms.InAnimEndType = InAnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionState.BoundAnimationEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     InMontage                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          InAnimEndType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionState::BoundAnimationEnded(class UAnimMontage* InMontage, ESHAnimEndType InAnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "BoundAnimationEnded");

	Params::SHHitReactionState_BoundAnimationEnded Parms{};

	Parms.InMontage = InMontage;
	Parms.InAnimEndType = InAnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionState.CancelState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InInstant                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::CancelState(bool InInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "CancelState");

	Params::SHHitReactionState_CancelState Parms{};

	Parms.InInstant = InInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.StartFinishingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::StartFinishingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "StartFinishingState");

	Params::SHHitReactionState_StartFinishingState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.GetRemainingStateDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHHitReactionState::GetRemainingStateDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "GetRemainingStateDuration");

	Params::SHHitReactionState_GetRemainingStateDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.GetStateHitReactionIdentifier
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHHitReactionIdentifier         OutIdentifier                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void USHHitReactionState::GetStateHitReactionIdentifier(struct FSHHitReactionIdentifier* OutIdentifier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "GetStateHitReactionIdentifier");

	Params::SHHitReactionState_GetStateHitReactionIdentifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIdentifier != nullptr)
		*OutIdentifier = std::move(Parms.OutIdentifier);
}


// Function SHProto.SHHitReactionState.GetStateHitReactionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHHitReactionResponseType              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHHitReactionResponseType USHHitReactionState::GetStateHitReactionType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "GetStateHitReactionType");

	Params::SHHitReactionState_GetStateHitReactionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.GetStateHitReactionVariant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USHHitReactionState::GetStateHitReactionVariant() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "GetStateHitReactionVariant");

	Params::SHHitReactionState_GetStateHitReactionVariant Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.HasStateEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::HasStateEnded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "HasStateEnded");

	Params::SHHitReactionState_HasStateEnded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.HasStateStarted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::HasStateStarted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "HasStateStarted");

	Params::SHHitReactionState_HasStateStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.IsStateFinishing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::IsStateFinishing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "IsStateFinishing");

	Params::SHHitReactionState_IsStateFinishing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionState.IsStateInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIncludeFinishing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHHitReactionState::IsStateInProgress(bool InIncludeFinishing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionState", "IsStateInProgress");

	Params::SHHitReactionState_IsStateInProgress Parms{};

	Parms.InIncludeFinishing = InIncludeFinishing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHitReactionStatesContext.MontagePlayerAnimationStopped
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     InMontage                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          InAnimEndType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHitReactionStatesContext::MontagePlayerAnimationStopped(class UAnimMontage* InMontage, ESHAnimEndType InAnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionStatesContext", "MontagePlayerAnimationStopped");

	Params::SHHitReactionStatesContext_MontagePlayerAnimationStopped Parms{};

	Parms.InMontage = InMontage;
	Parms.InAnimEndType = InAnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHitReactionsSet.GetDeathSoftObjects
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UObject>> USHHitReactionsSet::GetDeathSoftObjects() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHitReactionsSet", "GetDeathSoftObjects");

	Params::SHHitReactionsSet_GetDeathSoftObjects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHHospitalFWLyingMariaInteractionsEndingFactor.SHDebug_Character_Endings_HospitalFWLyingMariaInteractionsEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHospitalFWLyingMariaInteractionsEndingFactor::SHDebug_Character_Endings_HospitalFWLyingMariaInteractionsEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHospitalFWLyingMariaInteractionsEndingFactor", "SHDebug_Character_Endings_HospitalFWLyingMariaInteractionsEndingFactor_SetDebugValue");

	Params::SHHospitalFWLyingMariaInteractionsEndingFactor_SHDebug_Character_Endings_HospitalFWLyingMariaInteractionsEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHotelFWListenedSickbedConversationEndingFactor.SHDebug_Character_Endings_HotelFWListenedSickbedConversationEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHotelFWListenedSickbedConversationEndingFactor::SHDebug_Character_Endings_HotelFWListenedSickbedConversationEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHotelFWListenedSickbedConversationEndingFactor", "SHDebug_Character_Endings_HotelFWListenedSickbedConversationEndingFactor_SetDebugValue");

	Params::SHHotelFWListenedSickbedConversationEndingFactor_SHDebug_Character_Endings_HotelFWListenedSickbedConversationEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHotelFWPyramidHeadBossAftermathEndingFactor.SHDebug_Character_Endings_Factors_HotelFWPyramidHeadBossAftermath_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHotelFWPyramidHeadBossAftermathEndingFactor::SHDebug_Character_Endings_Factors_HotelFWPyramidHeadBossAftermath_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHotelFWPyramidHeadBossAftermathEndingFactor", "SHDebug_Character_Endings_Factors_HotelFWPyramidHeadBossAftermath_SetDebugValue");

	Params::SHHotelFWPyramidHeadBossAftermathEndingFactor_SHDebug_Character_Endings_Factors_HotelFWPyramidHeadBossAftermath_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHHotelOWMirrorPuzzleEndingFactor.SHDebug_Character_Endings_Factors_HotelOWMirrorPuzzle_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHHotelOWMirrorPuzzleEndingFactor::SHDebug_Character_Endings_Factors_HotelOWMirrorPuzzle_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHHotelOWMirrorPuzzleEndingFactor", "SHDebug_Character_Endings_Factors_HotelOWMirrorPuzzle_SetDebugValue");

	Params::SHHotelOWMirrorPuzzleEndingFactor_SHDebug_Character_Endings_Factors_HotelOWMirrorPuzzle_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInGameMenuWidget.AskQuit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInGameQuitTarget                       _QuitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInGameMenuWidget::AskQuit(EInGameQuitTarget _QuitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInGameMenuWidget", "AskQuit");

	Params::SHInGameMenuWidget_AskQuit Parms{};

	Parms._QuitTarget = _QuitTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInGameMenuWidget.FadedOut
// (Final, Native, Protected)

void USHInGameMenuWidget::FadedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInGameMenuWidget", "FadedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInGameMenuWidget.FadeOut
// (Final, Native, Public, BlueprintCallable)

void USHInGameMenuWidget::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInGameMenuWidget", "FadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInGameMenuWidget.OnAskQuit
// (Event, Public, BlueprintEvent)
// Parameters:
// EInGameQuitTarget                       _QuitTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInGameMenuWidget::OnAskQuit(EInGameQuitTarget _QuitTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInGameMenuWidget", "OnAskQuit");

	Params::SHInGameMenuWidget_OnAskQuit Parms{};

	Parms._QuitTarget = _QuitTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInGameMenuWidget.OnResume
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInGameMenuWidget::OnResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInGameMenuWidget", "OnResume");

	Params::SHInGameMenuWidget_OnResume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHInMenuCreditsWidget.ActiveWidgetChanged
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ActiveWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ActiveWidgetIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInMenuCreditsWidget::ActiveWidgetChanged(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "ActiveWidgetChanged");

	Params::SHInMenuCreditsWidget_ActiveWidgetChanged Parms{};

	Parms.ActiveWidget = ActiveWidget;
	Parms.ActiveWidgetIndex = ActiveWidgetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInMenuCreditsWidget.Continue
// (Final, Native, Protected, BlueprintCallable)

void USHInMenuCreditsWidget::Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "Continue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInMenuCreditsWidget.Hide
// (Final, Native, Public, BlueprintCallable)

void USHInMenuCreditsWidget::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInMenuCreditsWidget.OnHide
// (Event, Protected, BlueprintEvent)

void USHInMenuCreditsWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHInMenuCreditsWidget.OnShow
// (Event, Protected, BlueprintEvent)

void USHInMenuCreditsWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHInMenuCreditsWidget.Show
// (Final, Native, Public, BlueprintCallable)

void USHInMenuCreditsWidget::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInMenuCreditsWidget", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputBufferCmbSubcomp.ProcessCombatInputModeChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInputBufferCmbSubcomp::ProcessCombatInputModeChangedEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputBufferCmbSubcomp", "ProcessCombatInputModeChangedEvent");

	Params::SHInputBufferCmbSubcomp_ProcessCombatInputModeChangedEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputBufferCmbSubcomp.SHDebug_Character_Combat_InputBuffer_ValuesDebug
// (Final, Exec, Native, Public)

void USHInputBufferCmbSubcomp::SHDebug_Character_Combat_InputBuffer_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputBufferCmbSubcomp", "SHDebug_Character_Combat_InputBuffer_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputReceiver.ProcessBoatForwardInputAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBInputAction*                    InputSource                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputEventState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBInputActionChangeType                 ChangeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHInputReceiver::ProcessBoatForwardInputAction(class UBInputAction* InputSource, class UInputEventState* State, const EBInputActionChangeType ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputReceiver", "ProcessBoatForwardInputAction");

	Params::SHInputReceiver_ProcessBoatForwardInputAction Parms{};

	Parms.InputSource = InputSource;
	Parms.State = State;
	Parms.ChangeType = ChangeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputReceiver.ProcessBoatLeftInputAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBInputAction*                    InputSource                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputEventState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBInputActionChangeType                 ChangeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHInputReceiver::ProcessBoatLeftInputAction(class UBInputAction* InputSource, class UInputEventState* State, const EBInputActionChangeType ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputReceiver", "ProcessBoatLeftInputAction");

	Params::SHInputReceiver_ProcessBoatLeftInputAction Parms{};

	Parms.InputSource = InputSource;
	Parms.State = State;
	Parms.ChangeType = ChangeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputReceiver.ProcessBoatRightInputAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBInputAction*                    InputSource                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputEventState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBInputActionChangeType                 ChangeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHInputReceiver::ProcessBoatRightInputAction(class UBInputAction* InputSource, class UInputEventState* State, const EBInputActionChangeType ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputReceiver", "ProcessBoatRightInputAction");

	Params::SHInputReceiver_ProcessBoatRightInputAction Parms{};

	Parms.InputSource = InputSource;
	Parms.State = State;
	Parms.ChangeType = ChangeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInputReceiver.ProcessDodgeInputAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBInputAction*                    InputSource                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInputEventState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBInputActionChangeType                 ChangeType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHInputReceiver::ProcessDodgeInputAction(class UBInputAction* InputSource, class UInputEventState* State, const EBInputActionChangeType ChangeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInputReceiver", "ProcessDodgeInputAction");

	Params::SHInputReceiver_ProcessDodgeInputAction Parms{};

	Parms.InputSource = InputSource;
	Parms.State = State;
	Parms.ChangeType = ChangeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionGeneric.GetGeneric
// (Native, Public, BlueprintCallable)
// Parameters:
// class USHInteractionGenericComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHInteractionGenericComponent* ISHInteractionGeneric::GetGeneric()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGeneric", "GetGeneric");

	Params::SHInteractionGeneric_GetGeneric Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGeneric.StopGenericInteraction
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHInteractionGenericStopData    StopData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ISHInteractionGeneric::StopGenericInteraction(const struct FSHInteractionGenericStopData& StopData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGeneric", "StopGenericInteraction");

	Params::SHInteractionGeneric_StopGenericInteraction Parms{};

	Parms.StopData = std::move(StopData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionGeneric.GetGenericConfig
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSHInteractionGenericConfig      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHInteractionGenericConfig ISHInteractionGeneric::GetGenericConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGeneric", "GetGenericConfig");

	Params::SHInteractionGeneric_GetGenericConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SHProto.SHInteractionGenericComponent.GrabbedByCharacterBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionGenericComponent::GrabbedByCharacterBP__DelegateSignature(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "GrabbedByCharacterBP__DelegateSignature");

	Params::SHInteractionGenericComponent_GrabbedByCharacterBP__DelegateSignature Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHInteractionGenericComponent.HeldByCharacterBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionGenericComponent::HeldByCharacterBP__DelegateSignature(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "HeldByCharacterBP__DelegateSignature");

	Params::SHInteractionGenericComponent_HeldByCharacterBP__DelegateSignature Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHInteractionGenericComponent.ProcessInputBP__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameBaseInputDevice                    Device                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionGenericComponent::ProcessInputBP__DelegateSignature(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character, const struct FVector2D& Input, EGameBaseInputDevice Device)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "ProcessInputBP__DelegateSignature");

	Params::SHInteractionGenericComponent_ProcessInputBP__DelegateSignature Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;
	Parms.Input = std::move(Input);
	Parms.Device = Device;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHInteractionGenericComponent.ReleasedByCharacterBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionGenericComponent::ReleasedByCharacterBP__DelegateSignature(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "ReleasedByCharacterBP__DelegateSignature");

	Params::SHInteractionGenericComponent_ReleasedByCharacterBP__DelegateSignature Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInteractionGenericComponent.GetBehaviour
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHInteractionGenericBehaviour          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHInteractionGenericBehaviour USHInteractionGenericComponent::GetBehaviour() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "GetBehaviour");

	Params::SHInteractionGenericComponent_GetBehaviour Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGenericComponent.IsClickable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionGenericComponent::IsClickable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "IsClickable");

	Params::SHInteractionGenericComponent_IsClickable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGenericComponent.IsHeldByCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionGenericComponent::IsHeldByCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "IsHeldByCharacter");

	Params::SHInteractionGenericComponent_IsHeldByCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGenericComponent.IsHoldable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionGenericComponent::IsHoldable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "IsHoldable");

	Params::SHInteractionGenericComponent_IsHoldable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionGenericComponent.IsUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionGenericComponent::IsUsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionGenericComponent", "IsUsed");

	Params::SHInteractionGenericComponent_IsUsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.SetFriendActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionIconComponent::SetFriendActor(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "SetFriendActor");

	Params::SHInteractionIconComponent_SetFriendActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionIconComponent.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHInteractionIconState                 NewState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionIconComponent::SetState(const ESHInteractionIconState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "SetState");

	Params::SHInteractionIconComponent_SetState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionIconComponent.CalculateDesiredScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHInteractionIconComponent::CalculateDesiredScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "CalculateDesiredScale");

	Params::SHInteractionIconComponent_CalculateDesiredScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.GetFriendActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHInteractionIconComponent::GetFriendActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "GetFriendActor");

	Params::SHInteractionIconComponent_GetFriendActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.GetObservedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* USHInteractionIconComponent::GetObservedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "GetObservedActor");

	Params::SHInteractionIconComponent_GetObservedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.GetTargetOpacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHInteractionIconComponent::GetTargetOpacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "GetTargetOpacity");

	Params::SHInteractionIconComponent_GetTargetOpacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.HasFriendActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionIconComponent::HasFriendActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "HasFriendActor");

	Params::SHInteractionIconComponent_HasFriendActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionIconComponent.HasObservedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionIconComponent::HasObservedActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionIconComponent", "HasObservedActor");

	Params::SHInteractionIconComponent_HasObservedActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionManagerComponent.BindProximityDetector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UShapeComponent*                  NewProximityDetector                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::BindProximityDetector(const class UShapeComponent* NewProximityDetector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "BindProximityDetector");

	Params::SHInteractionManagerComponent_BindProximityDetector Parms{};

	Parms.NewProximityDetector = NewProximityDetector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.BindVisibilityDetector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHRaycastDetectableComponent*    NewVisibilityDetector                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::BindVisibilityDetector(const class USHRaycastDetectableComponent* NewVisibilityDetector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "BindVisibilityDetector");

	Params::SHInteractionManagerComponent_BindVisibilityDetector Parms{};

	Parms.NewVisibilityDetector = NewVisibilityDetector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHInteractionManagerComponent.InteractionManagerInitializeBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::InteractionManagerInitializeBP__DelegateSignature(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "InteractionManagerInitializeBP__DelegateSignature");

	Params::SHInteractionManagerComponent_InteractionManagerInitializeBP__DelegateSignature Parms{};

	Parms.Manager = Manager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInteractionManagerComponent.InterruptCurrentInteraction
// (Final, Native, Public, BlueprintCallable)

void USHInteractionManagerComponent::InterruptCurrentInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "InterruptCurrentInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.PerformDefaultInitialization
// (Final, Native, Public, BlueprintCallable)

void USHInteractionManagerComponent::PerformDefaultInitialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "PerformDefaultInitialization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "ProcessProximityBeginOverlap");

	Params::SHInteractionManagerComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "ProcessProximityEndOverlap");

	Params::SHInteractionManagerComponent_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.RegisterGeneric
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHRaycastDetectableComponent*    Detectable                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHInteractionIconComponent*      Icon                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USHInteractionIconSlotComponent*>Slots                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionManagerComponent::RegisterGeneric(const class USHInteractionGenericComponent* Generic, const class USHRaycastDetectableComponent* Detectable, const class USHInteractionIconComponent* Icon, const TArray<class USHInteractionIconSlotComponent*>& Slots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "RegisterGeneric");

	Params::SHInteractionManagerComponent_RegisterGeneric Parms{};

	Parms.Generic = Generic;
	Parms.Detectable = Detectable;
	Parms.Icon = Icon;
	Parms.Slots = std::move(Slots);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionManagerComponent.SetDetectionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::SetDetectionEnabled(const bool Enable, const class UObject* Enabler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "SetDetectionEnabled");

	Params::SHInteractionManagerComponent_SetDetectionEnabled Parms{};

	Parms.Enable = Enable;
	Parms.Enabler = Enabler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.SetObjectDetectionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInteractionManagerComponent::SetObjectDetectionEnabled(const class UObject* Object, const bool Enable, const class UObject* Enabler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "SetObjectDetectionEnabled");

	Params::SHInteractionManagerComponent_SetObjectDetectionEnabled Parms{};

	Parms.Object = Object;
	Parms.Enable = Enable;
	Parms.Enabler = Enabler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHInteractionManagerComponent.HasActiveInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionManagerComponent::HasActiveInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "HasActiveInteraction");

	Params::SHInteractionManagerComponent_HasActiveInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionManagerComponent.HasUsableActorNearby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionManagerComponent::HasUsableActorNearby() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "HasUsableActorNearby");

	Params::SHInteractionManagerComponent_HasUsableActorNearby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionManagerComponent.IsDetectionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHInteractionManagerComponent::IsDetectionEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionManagerComponent", "IsDetectionEnabled");

	Params::SHInteractionManagerComponent_IsDetectionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInteractionStarter.TryStartInteraction
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class ISHInteraction>  Interaction                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class ISHInteractionSlot>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class ISHInteractionSlot> ISHInteractionStarter::TryStartInteraction(const TScriptInterface<class ISHInteraction>& Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInteractionStarter", "TryStartInteraction");

	Params::SHInteractionStarter_TryStartInteraction Parms{};

	Parms.Interaction = Interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInventoryCategoryWidget.SetCategoryWithNewItems
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInventoryCategoryWidget::SetCategoryWithNewItems(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInventoryCategoryWidget", "SetCategoryWithNewItems");

	Params::SHInventoryCategoryWidget_SetCategoryWithNewItems Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInventoryCategoryWidget.SetHoveredCategory
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInventoryCategoryWidget::SetHoveredCategory(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInventoryCategoryWidget", "SetHoveredCategory");

	Params::SHInventoryCategoryWidget_SetHoveredCategory Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInventoryCategoryWidget.SetHoveredSubCategory
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHInventoryCategoryWidget::SetHoveredSubCategory(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInventoryCategoryWidget", "SetHoveredSubCategory");

	Params::SHInventoryCategoryWidget_SetHoveredSubCategory Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHInventoryRenderer.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* ASHInventoryRenderer::GetRenderTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInventoryRenderer", "GetRenderTarget");

	Params::SHInventoryRenderer_GetRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInventoryRenderer.GetUserWidgetObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHGameplaySectionBaseWidget*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHGameplaySectionBaseWidget* ASHInventoryRenderer::GetUserWidgetObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInventoryRenderer", "GetUserWidgetObject");

	Params::SHInventoryRenderer_GetUserWidgetObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHInWaterVolume.IsPointWithin
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHInWaterVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHInWaterVolume", "IsPointWithin");

	Params::SHInWaterVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemAnimInterface.InvestigationFlipSettingsChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvestigationFlipPlayRate                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InvestigationFlipStartTime                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InvestigationFlipSide                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InvestigationFlip                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHItemAnimInterface::InvestigationFlipSettingsChanged(float InvestigationFlipPlayRate, float InvestigationFlipStartTime, int32 InvestigationFlipSide, bool InvestigationFlip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "InvestigationFlipSettingsChanged");

	Params::SHItemAnimInterface_InvestigationFlipSettingsChanged Parms{};

	Parms.InvestigationFlipPlayRate = InvestigationFlipPlayRate;
	Parms.InvestigationFlipStartTime = InvestigationFlipStartTime;
	Parms.InvestigationFlipSide = InvestigationFlipSide;
	Parms.InvestigationFlip = InvestigationFlip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.InvestigationInputChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InvestigationAnimationFrame                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHItemAnimInterface::InvestigationInputChanged(float InvestigationAnimationFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "InvestigationInputChanged");

	Params::SHItemAnimInterface_InvestigationInputChanged Parms{};

	Parms.InvestigationAnimationFrame = InvestigationAnimationFrame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.InvestigationTypeSettingChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemInvestigationType                  InvestigationType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHItemAnimInterface::InvestigationTypeSettingChanged(EItemInvestigationType InvestigationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "InvestigationTypeSettingChanged");

	Params::SHItemAnimInterface_InvestigationTypeSettingChanged Parms{};

	Parms.InvestigationType = InvestigationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.PlayIntroInvestigation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ISHItemAnimInterface::PlayIntroInvestigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "PlayIntroInvestigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.PlayMainInvestigation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemInvestigationType                  InvestigationType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHItemAnimInterface::PlayMainInvestigation(EItemInvestigationType InvestigationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "PlayMainInvestigation");

	Params::SHItemAnimInterface_PlayMainInvestigation Parms{};

	Parms.InvestigationType = InvestigationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.PlayOutroInvestigation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ISHItemAnimInterface::PlayOutroInvestigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "PlayOutroInvestigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemAnimInterface.PlayPostInvestigation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void ISHItemAnimInterface::PlayPostInvestigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemAnimInterface", "PlayPostInvestigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemExeCameraManagerComponent.SetCameraMovementBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemExeCameraManagerComponent::SetCameraMovementBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExeCameraManagerComponent", "SetCameraMovementBlocked");

	Params::SHItemExeCameraManagerComponent_SetCameraMovementBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemExeCameraManagerComponent.SetCameraZoomBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemExeCameraManagerComponent::SetCameraZoomBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExeCameraManagerComponent", "SetCameraZoomBlocked");

	Params::SHItemExeCameraManagerComponent_SetCameraZoomBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemExeCameraManagerComponent.IsCameraMovementBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemExeCameraManagerComponent::IsCameraMovementBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExeCameraManagerComponent", "IsCameraMovementBlocked");

	Params::SHItemExeCameraManagerComponent_IsCameraMovementBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemExeCameraManagerComponent.IsCameraZoomBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemExeCameraManagerComponent::IsCameraZoomBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExeCameraManagerComponent", "IsCameraZoomBlocked");

	Params::SHItemExeCameraManagerComponent_IsCameraZoomBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemExecutiveBase.OnExecutiveInitialized
// (Event, Protected, BlueprintEvent)

void ASHItemExecutiveBase::OnExecutiveInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExecutiveBase", "OnExecutiveInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemExecutiveBase.RequestManualAbort
// (Final, Native, Public, BlueprintCallable)

void ASHItemExecutiveBase::RequestManualAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExecutiveBase", "RequestManualAbort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHItemExecutiveBase.SHItemExecutiveBlueprintEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemExecutiveBase*             ExecutivePtr                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemExecutiveBase::SHItemExecutiveBlueprintEvent__DelegateSignature(class ASHItemExecutiveBase* ExecutivePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExecutiveBase", "SHItemExecutiveBlueprintEvent__DelegateSignature");

	Params::SHItemExecutiveBase_SHItemExecutiveBlueprintEvent__DelegateSignature Parms{};

	Parms.ExecutivePtr = ExecutivePtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemExecutiveBase.GetItemContextActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemBase* ASHItemExecutiveBase::GetItemContextActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemExecutiveBase", "GetItemContextActor");

	Params::SHItemExecutiveBase_GetItemContextActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemGrabExecutive.OnGrabStarted
// (Event, Protected, BlueprintEvent)

void ASHItemGrabExecutive::OnGrabStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemGrabExecutive", "OnGrabStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemInvestigationExecutive.HandlePreInvestigationSetupFinish
// (Final, Native, Protected)

void ASHItemInvestigationExecutive::HandlePreInvestigationSetupFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "HandlePreInvestigationSetupFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.OnItemSwitched
// (Event, Protected, BlueprintEvent)

void ASHItemInvestigationExecutive::OnItemSwitched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "OnItemSwitched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemInvestigationExecutive.OnStartInvestigation
// (Event, Protected, BlueprintEvent)

void ASHItemInvestigationExecutive::OnStartInvestigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "OnStartInvestigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemInvestigationExecutive.SetAllActionsBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetAllActionsBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetAllActionsBlocked");

	Params::SHItemInvestigationExecutive_SetAllActionsBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.SetCustomTranscriptData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USHTranscriptData> InCustomTranscriptData                                 (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetCustomTranscriptData(TSoftObjectPtr<class USHTranscriptData> InCustomTranscriptData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetCustomTranscriptData");

	Params::SHItemInvestigationExecutive_SetCustomTranscriptData Parms{};

	Parms.InCustomTranscriptData = InCustomTranscriptData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.SetExitBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetExitBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetExitBlocked");

	Params::SHItemInvestigationExecutive_SetExitBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.SetRotateItemBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetRotateItemBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetRotateItemBlocked");

	Params::SHItemInvestigationExecutive_SetRotateItemBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.SetSwitchItemBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetSwitchItemBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetSwitchItemBlocked");

	Params::SHItemInvestigationExecutive_SetSwitchItemBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemInvestigationExecutive.SetTranscirptBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SetTranscirptBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SetTranscirptBlocked");

	Params::SHItemInvestigationExecutive_SetTranscirptBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHItemInvestigationExecutive.SHItemInvestigationExeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemInvestigationExecutive*    ExecutivePtr                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemInvestigationExecutive::SHItemInvestigationExeEvent__DelegateSignature(class ASHItemInvestigationExecutive* ExecutivePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "SHItemInvestigationExeEvent__DelegateSignature");

	Params::SHItemInvestigationExecutive_SHItemInvestigationExeEvent__DelegateSignature Parms{};

	Parms.ExecutivePtr = ExecutivePtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemInvestigationExecutive.IsAllActionsBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemInvestigationExecutive::IsAllActionsBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "IsAllActionsBlocked");

	Params::SHItemInvestigationExecutive_IsAllActionsBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemInvestigationExecutive.IsExitBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemInvestigationExecutive::IsExitBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "IsExitBlocked");

	Params::SHItemInvestigationExecutive_IsExitBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemInvestigationExecutive.IsRotateItemBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemInvestigationExecutive::IsRotateItemBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "IsRotateItemBlocked");

	Params::SHItemInvestigationExecutive_IsRotateItemBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemInvestigationExecutive.IsSwitchItemBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemInvestigationExecutive::IsSwitchItemBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "IsSwitchItemBlocked");

	Params::SHItemInvestigationExecutive_IsSwitchItemBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemInvestigationExecutive.IsTranscirptBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemInvestigationExecutive::IsTranscirptBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemInvestigationExecutive", "IsTranscirptBlocked");

	Params::SHItemInvestigationExecutive_IsTranscirptBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsContainer.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemsContainer::Interact(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsContainer", "Interact");

	Params::SHItemsContainer_Interact Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsContainer.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemsContainer::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsContainer", "ProcessInteractionManagerInitialized");

	Params::SHItemsContainer_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsContainer.SetDisabledState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInDisabled                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InObject                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemsContainer::SetDisabledState(const bool bInDisabled, const class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsContainer", "SetDisabledState");

	Params::SHItemsContainer_SetDisabledState Parms{};

	Parms.bInDisabled = bInDisabled;
	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsContainer.IsInDisabledState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemsContainer::IsInDisabledState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsContainer", "IsInDisabledState");

	Params::SHItemsContainer_IsInDisabledState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsInvestigationStatisticsValueProcessor.ProcessCollectedOrLevelItemInvestigated
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsInvestigationStatisticsValueProcessor::ProcessCollectedOrLevelItemInvestigated(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsInvestigationStatisticsValueProcessor", "ProcessCollectedOrLevelItemInvestigated");

	Params::SHItemsInvestigationStatisticsValueProcessor_ProcessCollectedOrLevelItemInvestigated Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsInvestigationStatisticsValueProcessor.ProcessEquipmentItemSpawned
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsInvestigationStatisticsValueProcessor::ProcessEquipmentItemSpawned(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsInvestigationStatisticsValueProcessor", "ProcessEquipmentItemSpawned");

	Params::SHItemsInvestigationStatisticsValueProcessor_ProcessEquipmentItemSpawned Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemSpawner.ProcessSpawnedItemCollected
// (Final, Native, Protected)
// Parameters:
// class ASHItem*                          ItemRef                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemSpawner::ProcessSpawnedItemCollected(class ASHItem* ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemSpawner", "ProcessSpawnedItemCollected");

	Params::SHItemSpawner_ProcessSpawnedItemCollected Parms{};

	Parms.ItemRef = ItemRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHItemSpawner.SHItemSpawnerEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemSpawner*                   ItemSpawnerPtr                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemSpawner::SHItemSpawnerEvent__DelegateSignature(class ASHItemSpawner* ItemSpawnerPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemSpawner", "SHItemSpawnerEvent__DelegateSignature");

	Params::SHItemSpawner_SHItemSpawnerEvent__DelegateSignature Parms{};

	Parms.ItemSpawnerPtr = ItemSpawnerPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemSpawner.SpawnRuntimeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASHItem*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItem* ASHItemSpawner::SpawnRuntimeItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemSpawner", "SpawnRuntimeItem");

	Params::SHItemSpawner_SpawnRuntimeItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemSpawner.GetSpawnedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItem*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItem* ASHItemSpawner::GetSpawnedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemSpawner", "GetSpawnedItem");

	Params::SHItemSpawner_GetSpawnedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsPickedUpStatisticsValueProcessor.ProcessItemCollected
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsPickedUpStatisticsValueProcessor::ProcessItemCollected(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsPickedUpStatisticsValueProcessor", "ProcessItemCollected");

	Params::SHItemsPickedUpStatisticsValueProcessor_ProcessItemCollected Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsPickedUpStatisticsValueProcessor.ProcessLevelItemGrabbedOrInvestigated
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayItemsComponent*   ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ItemContext                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsPickedUpStatisticsValueProcessor::ProcessLevelItemGrabbedOrInvestigated(class USHCharacterPlayItemsComponent* ComponentPtr, class FName ItemContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsPickedUpStatisticsValueProcessor", "ProcessLevelItemGrabbedOrInvestigated");

	Params::SHItemsPickedUpStatisticsValueProcessor_ProcessLevelItemGrabbedOrInvestigated Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.ItemContext = ItemContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageStatics.HasItemByConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSHCollectedItemData>     InItems                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSHItemsStorageConfig            ItemsStorageConfig                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStorageStatics::HasItemByConfig(const TArray<struct FSHCollectedItemData>& InItems, const struct FSHItemsStorageConfig& ItemsStorageConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStorageStatics", "HasItemByConfig");

	Params::SHItemsStorageStatics_HasItemByConfig Parms{};

	Parms.InItems = std::move(InItems);
	Parms.ItemsStorageConfig = std::move(ItemsStorageConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStorageStatics.HasPlayerCollectedItemByConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHItemsStorageConfig            ItemsStorageConfig                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStorageStatics::HasPlayerCollectedItemByConfig(class UObject* Context, const struct FSHItemsStorageConfig& ItemsStorageConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHItemsStorageStatics", "HasPlayerCollectedItemByConfig");

	Params::SHItemsStorageStatics_HasPlayerCollectedItemByConfig Parms{};

	Parms.Context = Context;
	Parms.ItemsStorageConfig = std::move(ItemsStorageConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStorageComponent.RetrieveAll
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::RetrieveAll(class ACharacter* InteractingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "RetrieveAll");

	Params::SHItemsStorageComponent_RetrieveAll Parms{};

	Parms.InteractingCharacter = InteractingCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.RetrieveAllByConfig
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHItemsStorageConfig            ItemsStorageConfig                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::RetrieveAllByConfig(class ACharacter* InteractingCharacter, const struct FSHItemsStorageConfig& ItemsStorageConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "RetrieveAllByConfig");

	Params::SHItemsStorageComponent_RetrieveAllByConfig Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.ItemsStorageConfig = std::move(ItemsStorageConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.RetrieveSpecified
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSHCollectedItemData>     ItemsToRetrieve                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::RetrieveSpecified(class ACharacter* InteractingCharacter, const TArray<struct FSHCollectedItemData>& ItemsToRetrieve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "RetrieveSpecified");

	Params::SHItemsStorageComponent_RetrieveSpecified Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.ItemsToRetrieve = std::move(ItemsToRetrieve);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.StoreAll
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     SkipItems                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<ESHItemTypeEnum>                 SkipItemsCategories                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::StoreAll(class ACharacter* InteractingCharacter, const TArray<class FName>& SkipItems, const TArray<ESHItemTypeEnum>& SkipItemsCategories)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "StoreAll");

	Params::SHItemsStorageComponent_StoreAll Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.SkipItems = std::move(SkipItems);
	Parms.SkipItemsCategories = std::move(SkipItemsCategories);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.StoreAllByConfig
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHItemsStorageConfig            ItemsStorageConfig                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::StoreAllByConfig(class ACharacter* InteractingCharacter, const struct FSHItemsStorageConfig& ItemsStorageConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "StoreAllByConfig");

	Params::SHItemsStorageComponent_StoreAllByConfig Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.ItemsStorageConfig = std::move(ItemsStorageConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.StoreSpecified
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSHCollectedItemData>     ItemsToStore                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USHItemsStorageComponent::StoreSpecified(class ACharacter* InteractingCharacter, const TArray<struct FSHCollectedItemData>& ItemsToStore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "StoreSpecified");

	Params::SHItemsStorageComponent_StoreSpecified Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.ItemsToStore = std::move(ItemsToStore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemsStorageComponent.GetCurrentItems
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSHCollectedItemData>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FSHCollectedItemData> USHItemsStorageComponent::GetCurrentItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "GetCurrentItems");

	Params::SHItemsStorageComponent_GetCurrentItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemsStorageComponent.IsStorageEmpty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHItemsStorageComponent::IsStorageEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemsStorageComponent", "IsStorageEmpty");

	Params::SHItemsStorageComponent_IsStorageEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponChainsawAnimsExtensionComponent.ProcessEquipWeaponMontageEndEvent
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     InMontage                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHItemWeaponChainsawAnimsExtensionComponent::ProcessEquipWeaponMontageEndEvent(class UAnimMontage* InMontage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponChainsawAnimsExtensionComponent", "ProcessEquipWeaponMontageEndEvent");

	Params::SHItemWeaponChainsawAnimsExtensionComponent_ProcessEquipWeaponMontageEndEvent Parms{};

	Parms.InMontage = InMontage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHItemWeaponMelee.CalcAttackRowName
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACharacter*                       AttackCandidate                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ASHItemWeaponMelee::CalcAttackRowName(class ACharacter* AttackCandidate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "CalcAttackRowName");

	Params::SHItemWeaponMelee_CalcAttackRowName Parms{};

	Parms.AttackCandidate = AttackCandidate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.OnComboWindowFailed
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnComboWindowFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnComboWindowFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnComboWindowOpened
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnComboWindowOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnComboWindowOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnComboWindowSuccess
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnComboWindowSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnComboWindowSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnMeleeAttackAnyCharacter
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnMeleeAttackAnyCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnMeleeAttackAnyCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnMeleeAttackFinished
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnMeleeAttackFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnMeleeAttackFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnMeleeAttackInterupted
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnMeleeAttackInterupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnMeleeAttackInterupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHItemWeaponMelee.OnMeleeAttackStarted
// (Event, Protected, BlueprintEvent)

void ASHItemWeaponMelee::OnMeleeAttackStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "OnMeleeAttackStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHItemWeaponMelee.SHItemWeaponMeleeWithContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHItemWeaponMelee*               WeaponPtr                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHItemWeaponMelee::SHItemWeaponMeleeWithContextEvent__DelegateSignature(class ASHItemWeaponMelee* WeaponPtr, class AActor* ActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "SHItemWeaponMeleeWithContextEvent__DelegateSignature");

	Params::SHItemWeaponMelee_SHItemWeaponMeleeWithContextEvent__DelegateSignature Parms{};

	Parms.WeaponPtr = WeaponPtr;
	Parms.ActorContext = ActorContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHItemWeaponMelee.GetAttackDataCopy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             AttackRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHCharacterPlayAttackStruct     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSHCharacterPlayAttackStruct ASHItemWeaponMelee::GetAttackDataCopy(class FName AttackRowName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "GetAttackDataCopy");

	Params::SHItemWeaponMelee_GetAttackDataCopy Parms{};

	Parms.AttackRowName = AttackRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.GetCurrentMeleeAttackEnemyTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* ASHItemWeaponMelee::GetCurrentMeleeAttackEnemyTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "GetCurrentMeleeAttackEnemyTarget");

	Params::SHItemWeaponMelee_GetCurrentMeleeAttackEnemyTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.GetLastUsedAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ASHItemWeaponMelee::GetLastUsedAttack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "GetLastUsedAttack");

	Params::SHItemWeaponMelee_GetLastUsedAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.IsOwnerStandingBehind
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponMelee::IsOwnerStandingBehind(class ACharacter* CheckedCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "IsOwnerStandingBehind");

	Params::SHItemWeaponMelee_IsOwnerStandingBehind Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.ShouldUseGroundAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponMelee::ShouldUseGroundAttack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "ShouldUseGroundAttack");

	Params::SHItemWeaponMelee_ShouldUseGroundAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.SlideDistanceCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSlideDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponMelee::SlideDistanceCheck(class ACharacter* CheckedCharacter, float MaxSlideDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "SlideDistanceCheck");

	Params::SHItemWeaponMelee_SlideDistanceCheck Parms{};

	Parms.CheckedCharacter = CheckedCharacter;
	Parms.MaxSlideDistance = MaxSlideDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHItemWeaponMelee.WillKillCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       CheckedCharacter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHItemWeaponMelee::WillKillCharacter(class ACharacter* CheckedCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHItemWeaponMelee", "WillKillCharacter");

	Params::SHItemWeaponMelee_WillKillCharacter Parms{};

	Parms.CheckedCharacter = CheckedCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHJumpIntoHole.ProcessAnimInstStageAdvanced
// (Final, Native, Protected)
// Parameters:
// class USHJumpIntoHoleAnimInstance*      AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessAnimInstStageAdvanced(class USHJumpIntoHoleAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessAnimInstStageAdvanced");

	Params::SHJumpIntoHole_ProcessAnimInstStageAdvanced Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessAnimInstStartedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHJumpIntoHoleAnimInstance*      AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessAnimInstStartedInteraction(class USHJumpIntoHoleAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessAnimInstStartedInteraction");

	Params::SHJumpIntoHole_ProcessAnimInstStartedInteraction Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessFocusableInputActionEvent
// (Final, Native, Protected)
// Parameters:
// ESHFocusableInputActionTypeEnum         InputActionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KeyValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessFocusableInputActionEvent(ESHFocusableInputActionTypeEnum InputActionType, float KeyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessFocusableInputActionEvent");

	Params::SHJumpIntoHole_ProcessFocusableInputActionEvent Parms{};

	Parms.InputActionType = InputActionType;
	Parms.KeyValue = KeyValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessInteractingCharacterCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessInteractingCharacterCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessInteractingCharacterCombatInputModeChanged");

	Params::SHJumpIntoHole_ProcessInteractingCharacterCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessInteractingCharacterReceiveDamage
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessInteractingCharacterReceiveDamage(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessInteractingCharacterReceiveDamage");

	Params::SHJumpIntoHole_ProcessInteractingCharacterReceiveDamage Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessInteractionGenericGrabbed
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessInteractionGenericGrabbed(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessInteractionGenericGrabbed");

	Params::SHJumpIntoHole_ProcessInteractionGenericGrabbed Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessInteractionManagerInitialized");

	Params::SHJumpIntoHole_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessJumpAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessJumpAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessJumpAnimEnd");

	Params::SHJumpIntoHole_ProcessJumpAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessLandAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessLandAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessLandAnimEnd");

	Params::SHJumpIntoHole_ProcessLandAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessLandCameraAnimBlendOutOrEnd
// (Final, Native, Protected)

void ASHJumpIntoHole::ProcessLandCameraAnimBlendOutOrEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessLandCameraAnimBlendOutOrEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessMoveCharacterToSpotFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessMoveCharacterToSpotFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessMoveCharacterToSpotFinished");

	Params::SHJumpIntoHole_ProcessMoveCharacterToSpotFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessProximityBeginOverlap");

	Params::SHJumpIntoHole_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHole.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "ProcessProximityEndOverlap");

	Params::SHJumpIntoHole_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHJumpIntoHole.SHJumpIntoHoleEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHJumpIntoHole*                  Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHJumpIntoHole::SHJumpIntoHoleEvent__DelegateSignature(class ASHJumpIntoHole* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "SHJumpIntoHoleEvent__DelegateSignature");

	Params::SHJumpIntoHole_SHJumpIntoHoleEvent__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHJumpIntoHole.GetCurrentFocusStageIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHJumpIntoHole::GetCurrentFocusStageIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "GetCurrentFocusStageIndex");

	Params::SHJumpIntoHole_GetCurrentFocusStageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHJumpIntoHole.IsInInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHJumpIntoHole::IsInInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHole", "IsInInteraction");

	Params::SHJumpIntoHole_IsInInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHJumpIntoHoleAnimInstance.ApplyFinalStageReached
// (Final, Native, Protected, BlueprintCallable)

void USHJumpIntoHoleAnimInstance::ApplyFinalStageReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "ApplyFinalStageReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHoleAnimInstance.ApplyInteractionStarted
// (Final, Native, Protected, BlueprintCallable)

void USHJumpIntoHoleAnimInstance::ApplyInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "ApplyInteractionStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHoleAnimInstance.ApplyInteractionStartedAndItsFinalStage
// (Final, Native, Protected, BlueprintCallable)

void USHJumpIntoHoleAnimInstance::ApplyInteractionStartedAndItsFinalStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "ApplyInteractionStartedAndItsFinalStage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHJumpIntoHoleAnimInstance.ApplyStageAdvanced
// (Final, Native, Protected, BlueprintCallable)

void USHJumpIntoHoleAnimInstance::ApplyStageAdvanced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "ApplyStageAdvanced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHJumpIntoHoleAnimInstance.SHJumpIntoHoleAnimInstanceEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHJumpIntoHoleAnimInstance*      AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHJumpIntoHoleAnimInstance::SHJumpIntoHoleAnimInstanceEvent__DelegateSignature(class USHJumpIntoHoleAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "SHJumpIntoHoleAnimInstanceEvent__DelegateSignature");

	Params::SHJumpIntoHoleAnimInstance_SHJumpIntoHoleAnimInstanceEvent__DelegateSignature Parms{};

	Parms.AnimInst = AnimInst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHJumpIntoHoleAnimInstance.CanReceiveInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHJumpIntoHoleAnimInstance::CanReceiveInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHJumpIntoHoleAnimInstance", "CanReceiveInput");

	Params::SHJumpIntoHoleAnimInstance_CanReceiveInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLightingChannelsStatics.GetLightingChannelsPack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESHLightingChannelsProfile              Profile                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHLightingChannelsPack          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSHLightingChannelsPack USHLightingChannelsStatics::GetLightingChannelsPack(const ESHLightingChannelsProfile Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHLightingChannelsStatics", "GetLightingChannelsPack");

	Params::SHLightingChannelsStatics_GetLightingChannelsPack Parms{};

	Parms.Profile = Profile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLoadingScreenWidget.OnShowHint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLoadingScreenWidget::OnShowHint(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLoadingScreenWidget", "OnShowHint");

	Params::SHLoadingScreenWidget_OnShowHint Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHLoadingScreenWidget.GetDeathReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameOverCause                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameOverCause USHLoadingScreenWidget::GetDeathReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLoadingScreenWidget", "GetDeathReason");

	Params::SHLoadingScreenWidget_GetDeathReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLoadingScreenWidget.IsDeathReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLoadingScreenWidget::IsDeathReload() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLoadingScreenWidget", "IsDeathReload");

	Params::SHLoadingScreenWidget_IsDeathReload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLocalFogVolumetricActor.OnEnableStateChanged
// (Event, Protected, BlueprintEvent)

void ASHLocalFogVolumetricActor::OnEnableStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocalFogVolumetricActor", "OnEnableStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHLocalFogVolumetricActor.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHLocalFogVolumetricActor::SetEnabled(const bool bInEnabled, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocalFogVolumetricActor", "SetEnabled");

	Params::SHLocalFogVolumetricActor_SetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLocalFogVolumetricActor.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHLocalFogVolumetricActor::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLocalFogVolumetricActor", "IsEnabled");

	Params::SHLocalFogVolumetricActor_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtActorInterface.CanBeLookedAt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ISHLookAtActorInterface::CanBeLookedAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtActorInterface", "CanBeLookedAt");

	Params::SHLookAtActorInterface_CanBeLookedAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLookAtActorInterface.GetLookAtTargetComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* ISHLookAtActorInterface::GetLookAtTargetComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLookAtActorInterface", "GetLookAtTargetComponent");

	Params::SHLookAtActorInterface_GetLookAtTargetComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstance.GetActiveLyingFigureLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLyingFigureLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLyingFigureLocomotionAnimInstance* USHLyingFigureAnimInstance::GetActiveLyingFigureLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstance", "GetActiveLyingFigureLocomotionAnimInstance");

	Params::SHLyingFigureAnimInstance_GetActiveLyingFigureLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstance.GetLyingFigureAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLyingFigureAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLyingFigureAnimInstanceStateData* USHLyingFigureAnimInstance::GetLyingFigureAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstance", "GetLyingFigureAnimInstanceStateData");

	Params::SHLyingFigureAnimInstance_GetLyingFigureAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstance.GetLyingFigureCrawlingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLyingFigureCrawlingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLyingFigureCrawlingLocomotionAnimInstance* USHLyingFigureAnimInstance::GetLyingFigureCrawlingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstance", "GetLyingFigureCrawlingLocomotionAnimInstance");

	Params::SHLyingFigureAnimInstance_GetLyingFigureCrawlingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstance.GetLyingFigureStandingLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHLyingFigureStandingLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHLyingFigureStandingLocomotionAnimInstance* USHLyingFigureAnimInstance::GetLyingFigureStandingLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstance", "GetLyingFigureStandingLocomotionAnimInstance");

	Params::SHLyingFigureAnimInstance_GetLyingFigureStandingLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstanceStateData.GetAreAllowedInaccurateLocomotionAnimationsOfDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InAnimationDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLyingFigureAnimInstanceStateData::GetAreAllowedInaccurateLocomotionAnimationsOfDistance(float InAnimationDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstanceStateData", "GetAreAllowedInaccurateLocomotionAnimationsOfDistance");

	Params::SHLyingFigureAnimInstanceStateData_GetAreAllowedInaccurateLocomotionAnimationsOfDistance Parms{};

	Parms.InAnimationDistance = InAnimationDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstanceStateData.GetAreInaccurateLocomotionAnimationsAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHLyingFigureAnimInstanceStateData::GetAreInaccurateLocomotionAnimationsAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstanceStateData", "GetAreInaccurateLocomotionAnimationsAllowed");

	Params::SHLyingFigureAnimInstanceStateData_GetAreInaccurateLocomotionAnimationsAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstanceStateData.GetCrawlBendPitchAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLyingFigureAnimInstanceStateData::GetCrawlBendPitchAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstanceStateData", "GetCrawlBendPitchAngle");

	Params::SHLyingFigureAnimInstanceStateData_GetCrawlBendPitchAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstanceStateData.GetCrawlBendYawAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLyingFigureAnimInstanceStateData::GetCrawlBendYawAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstanceStateData", "GetCrawlBendYawAngle");

	Params::SHLyingFigureAnimInstanceStateData_GetCrawlBendYawAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureAnimInstanceStateData.GetInaccurateLocomotionAnimationsDistanceAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHLyingFigureAnimInstanceStateData::GetInaccurateLocomotionAnimationsDistanceAccuracy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureAnimInstanceStateData", "GetInaccurateLocomotionAnimationsDistanceAccuracy");

	Params::SHLyingFigureAnimInstanceStateData_GetInaccurateLocomotionAnimationsDistanceAccuracy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.SetStruggle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   ALPHA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::SetStruggle(float ALPHA, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "SetStruggle");

	Params::SHLyingFigureStandingLocomotionAnimInstance_SetStruggle Parms{};

	Parms.ALPHA = ALPHA;
	Parms.PlayRate = PlayRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetSmoothedDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetSmoothedDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetSmoothedDesiredRotationYaw");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetSmoothedDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetSmoothedDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetSmoothedDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocity");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetSmoothedDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetSmoothedDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetSmoothedDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetSmoothedDesiredVelocitySizeAndYaw");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetSmoothedDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetSmoothedLookAt
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetSmoothedLookAt(struct FRotator* OutRotation, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetSmoothedLookAt");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetSmoothedLookAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetSmoothedStruggle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutPlayRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetSmoothedStruggle(float* OutPlayRate, float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetSmoothedStruggle");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetSmoothedStruggle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayRate != nullptr)
		*OutPlayRate = Parms.OutPlayRate;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTargetDesiredRotationYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutYaw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTargetDesiredRotationYaw(float* OutYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTargetDesiredRotationYaw");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTargetDesiredRotationYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYaw != nullptr)
		*OutYaw = Parms.OutYaw;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTargetDesiredVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTargetDesiredVelocity(struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTargetDesiredVelocity");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTargetDesiredVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTargetDesiredVelocitySizeAndYaw
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutVelocitySize                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVelocityYaw                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTargetDesiredVelocitySizeAndYaw(float* OutVelocitySize, float* OutVelocityYaw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTargetDesiredVelocitySizeAndYaw");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTargetDesiredVelocitySizeAndYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVelocitySize != nullptr)
		*OutVelocitySize = Parms.OutVelocitySize;

	if (OutVelocityYaw != nullptr)
		*OutVelocityYaw = Parms.OutVelocityYaw;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTargetLookAtAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTargetLookAtAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTargetLookAtAlpha");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTargetLookAtAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTargetStruggleAlpha
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTargetStruggleAlpha(float* OutAlpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTargetStruggleAlpha");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTargetStruggleAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlpha != nullptr)
		*OutAlpha = Parms.OutAlpha;
}


// Function SHProto.SHLyingFigureStandingLocomotionAnimInstance.GetTransformationToCrawlingAnimation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         InLocalRotation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UAnimSequenceBase*                OutAnimation                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutPlayRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBlendInDuration                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBlendOutDuration                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutAnimaitonRotation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         OutRemainderRotation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    OutUsesDelayedRootRotation                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHLyingFigureStandingLocomotionAnimInstance::GetTransformationToCrawlingAnimation(const struct FRotator& InLocalRotation, class UAnimSequenceBase** OutAnimation, float* OutPlayRate, float* OutBlendInDuration, float* OutBlendOutDuration, struct FRotator* OutAnimaitonRotation, struct FRotator* OutRemainderRotation, bool* OutUsesDelayedRootRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHLyingFigureStandingLocomotionAnimInstance", "GetTransformationToCrawlingAnimation");

	Params::SHLyingFigureStandingLocomotionAnimInstance_GetTransformationToCrawlingAnimation Parms{};

	Parms.InLocalRotation = std::move(InLocalRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAnimation != nullptr)
		*OutAnimation = Parms.OutAnimation;

	if (OutPlayRate != nullptr)
		*OutPlayRate = Parms.OutPlayRate;

	if (OutBlendInDuration != nullptr)
		*OutBlendInDuration = Parms.OutBlendInDuration;

	if (OutBlendOutDuration != nullptr)
		*OutBlendOutDuration = Parms.OutBlendOutDuration;

	if (OutAnimaitonRotation != nullptr)
		*OutAnimaitonRotation = std::move(Parms.OutAnimaitonRotation);

	if (OutRemainderRotation != nullptr)
		*OutRemainderRotation = std::move(Parms.OutRemainderRotation);

	if (OutUsesDelayedRootRotation != nullptr)
		*OutUsesDelayedRootRotation = Parms.OutUsesDelayedRootRotation;
}


// Function SHProto.SHMainMenuWidget.BeginCustomLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FStreamableLevelHandle           LevelHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHMainMenuWidget::BeginCustomLevel(const struct FStreamableLevelHandle& LevelHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMainMenuWidget", "BeginCustomLevel");

	Params::SHMainMenuWidget_BeginCustomLevel Parms{};

	Parms.LevelHandle = std::move(LevelHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMainMenuWidget.BeginGameFromSpawnPoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSpawnPointData                  SpawnPointData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UMovieConfig*                     Movie                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NonSkippableLen                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsNewGame                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMainMenuWidget::BeginGameFromSpawnPoint(const struct FSpawnPointData& SpawnPointData, class UMovieConfig* Movie, float NonSkippableLen, bool IsNewGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMainMenuWidget", "BeginGameFromSpawnPoint");

	Params::SHMainMenuWidget_BeginGameFromSpawnPoint Parms{};

	Parms.SpawnPointData = std::move(SpawnPointData);
	Parms.Movie = Movie;
	Parms.NonSkippableLen = NonSkippableLen;
	Parms.IsNewGame = IsNewGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMainMenuWidget.BeginGameFromSpawnPointHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSpawnPointHandle                SpawnPointHandle                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UMovieConfig*                     Movie                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NonSkippableLen                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsNewGame                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMainMenuWidget::BeginGameFromSpawnPointHandle(const struct FSpawnPointHandle& SpawnPointHandle, class UMovieConfig* Movie, float NonSkippableLen, bool IsNewGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMainMenuWidget", "BeginGameFromSpawnPointHandle");

	Params::SHMainMenuWidget_BeginGameFromSpawnPointHandle Parms{};

	Parms.SpawnPointHandle = std::move(SpawnPointHandle);
	Parms.Movie = Movie;
	Parms.NonSkippableLen = NonSkippableLen;
	Parms.IsNewGame = IsNewGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMainMenuWidget.BeginNewGameFromSpawnPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMovieConfig*                     Movie                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NonSkippableLen                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMainMenuWidget::BeginNewGameFromSpawnPoint(class UMovieConfig* Movie, float NonSkippableLen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMainMenuWidget", "BeginNewGameFromSpawnPoint");

	Params::SHMainMenuWidget_BeginNewGameFromSpawnPoint Parms{};

	Parms.Movie = Movie;
	Parms.NonSkippableLen = NonSkippableLen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMainMenuWidget.OnFocusSpawnPointList
// (Event, Public, BlueprintEvent)

void USHMainMenuWidget::OnFocusSpawnPointList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMainMenuWidget", "OnFocusSpawnPointList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMandarinAnimComponent.ChangeLocomotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ToAggressive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::ChangeLocomotion(bool ToAggressive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "ChangeLocomotion");

	Params::SHMandarinAnimComponent_ChangeLocomotion Parms{};

	Parms.ToAggressive = ToAggressive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.RequestStopOnHit
// (Final, Native, Public, BlueprintCallable)

void USHMandarinAnimComponent::RequestStopOnHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "RequestStopOnHit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.SetHanging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsHanging                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::SetHanging(bool IsHanging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "SetHanging");

	Params::SHMandarinAnimComponent_SetHanging Parms{};

	Parms.IsHanging = IsHanging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.SetLastStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    WasRight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::SetLastStep(bool WasRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "SetLastStep");

	Params::SHMandarinAnimComponent_SetLastStep Parms{};

	Parms.WasRight = WasRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.SetTongueSnapLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::SetTongueSnapLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "SetTongueSnapLocation");

	Params::SHMandarinAnimComponent_SetTongueSnapLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.SetTongueSnapRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::SetTongueSnapRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "SetTongueSnapRotation");

	Params::SHMandarinAnimComponent_SetTongueSnapRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.SetTongueTransformationAlpha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::SetTongueTransformationAlpha(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "SetTongueTransformationAlpha");

	Params::SHMandarinAnimComponent_SetTongueTransformationAlpha Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimComponent.ToggleLegsRagdoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Activate_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMandarinAnimComponent::ToggleLegsRagdoll(bool Activate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimComponent", "ToggleLegsRagdoll");

	Params::SHMandarinAnimComponent_ToggleLegsRagdoll Parms{};

	Parms.Activate_0 = Activate_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMandarinAnimInstanceStateData.IsMovementCanceled
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMandarinAnimInstanceStateData::IsMovementCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinAnimInstanceStateData", "IsMovementCanceled");

	Params::SHMandarinAnimInstanceStateData_IsMovementCanceled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinTransformationState.GetMandarinTransformationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHMandarinTransformationState          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHMandarinTransformationState USHMandarinTransformationState::GetMandarinTransformationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinTransformationState", "GetMandarinTransformationState");

	Params::SHMandarinTransformationState_GetMandarinTransformationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMandarinTransformationState.GetTransformationStateHeightOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHMandarinTransformationState::GetTransformationStateHeightOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMandarinTransformationState", "GetTransformationStateHeightOffset");

	Params::SHMandarinTransformationState_GetTransformationStateHeightOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMannequinAnimInstance.GetMannequinAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMannequinAnimInstanceStateData*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMannequinAnimInstanceStateData* USHMannequinAnimInstance::GetMannequinAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinAnimInstance", "GetMannequinAnimInstanceStateData");

	Params::SHMannequinAnimInstance_GetMannequinAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMannequinAnimInstance.GetMannequinLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHMannequinLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMannequinLocomotionAnimInstance* USHMannequinAnimInstance::GetMannequinLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMannequinAnimInstance", "GetMannequinLocomotionAnimInstance");

	Params::SHMannequinAnimInstance_GetMannequinLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SHProto.SHMapRenderer.SHMapRendererEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHMapRenderer*                   RendererPtr                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMapRenderer::SHMapRendererEvent__DelegateSignature(class ASHMapRenderer* RendererPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMapRenderer", "SHMapRendererEvent__DelegateSignature");

	Params::SHMapRenderer_SHMapRendererEvent__DelegateSignature Parms{};

	Parms.RendererPtr = RendererPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMapRenderer.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* ASHMapRenderer::GetRenderTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMapRenderer", "GetRenderTarget");

	Params::SHMapRenderer_GetRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMapRenderer.GetUserWidgetObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHGameplayMapRenderWidget*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHGameplayMapRenderWidget* ASHMapRenderer::GetUserWidgetObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMapRenderer", "GetUserWidgetObject");

	Params::SHMapRenderer_GetUserWidgetObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaAnimComponent.RefreshAnimGraphs
// (Final, Native, Public, BlueprintCallable)

void USHMariaAnimComponent::RefreshAnimGraphs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaAnimComponent", "RefreshAnimGraphs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaFlashlightReactionAnimSubcomp.BlockAndInterruptFlashlightReactions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaFlashlightReactionAnimSubcomp::BlockAndInterruptFlashlightReactions(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaFlashlightReactionAnimSubcomp", "BlockAndInterruptFlashlightReactions");

	Params::SHMariaFlashlightReactionAnimSubcomp_BlockAndInterruptFlashlightReactions Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaFlashlightReactionAnimSubcomp.BlockFlashlightReactions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaFlashlightReactionAnimSubcomp::BlockFlashlightReactions(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaFlashlightReactionAnimSubcomp", "BlockFlashlightReactions");

	Params::SHMariaFlashlightReactionAnimSubcomp_BlockFlashlightReactions Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaFlashlightReactionAnimSubcomp.GetEyesCoverAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMariaFlashlightReactionAnimSubcomp::GetEyesCoverAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaFlashlightReactionAnimSubcomp", "GetEyesCoverAlpha");

	Params::SHMariaFlashlightReactionAnimSubcomp_GetEyesCoverAlpha Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaInterface.ChangeBlockingAiming
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldAimAt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHMariaInterface::ChangeBlockingAiming(bool bShouldAimAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaInterface", "ChangeBlockingAiming");

	Params::SHMariaInterface_ChangeBlockingAiming Parms{};

	Parms.bShouldAimAt = bShouldAimAt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaLocomotionAnimInstance.GetFlashlightCoverEyesAnimBlendWeigth
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMariaLocomotionAnimInstance::GetFlashlightCoverEyesAnimBlendWeigth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaLocomotionAnimInstance", "GetFlashlightCoverEyesAnimBlendWeigth");

	Params::SHMariaLocomotionAnimInstance_GetFlashlightCoverEyesAnimBlendWeigth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaLookAtAnimInstance.GetFlashlightCoverEyesAnimBlendWeigth
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHMariaLookAtAnimInstance::GetFlashlightCoverEyesAnimBlendWeigth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaLookAtAnimInstance", "GetFlashlightCoverEyesAnimBlendWeigth");

	Params::SHMariaLookAtAnimInstance_GetFlashlightCoverEyesAnimBlendWeigth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaReceivedDamageEndingValueProcessor.ProcessMariaHealthChanged
// (Final, Native, Protected)
// Parameters:
// class UMaiHealth*                       HealthComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PreviousHealthValue                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaReceivedDamageEndingValueProcessor::ProcessMariaHealthChanged(class UMaiHealth* HealthComponent, int32 PreviousHealthValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaReceivedDamageEndingValueProcessor", "ProcessMariaHealthChanged");

	Params::SHMariaReceivedDamageEndingValueProcessor_ProcessMariaHealthChanged Parms{};

	Parms.HealthComponent = HealthComponent;
	Parms.PreviousHealthValue = PreviousHealthValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.GenerateCustomValuesDebug
// (Event, Protected, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> USHMariaVerbalReactionsComponent::GenerateCustomValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "GenerateCustomValuesDebug");

	Params::SHMariaVerbalReactionsComponent_GenerateCustomValuesDebug Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.GetDialogsToPreload
// (Event, Protected, BlueprintEvent)
// Parameters:
// TArray<struct FDialogTalkID>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FDialogTalkID> USHMariaVerbalReactionsComponent::GetDialogsToPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "GetDialogsToPreload");

	Params::SHMariaVerbalReactionsComponent_GetDialogsToPreload Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.HandleMariaInDangerModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USHMariaCombatComponent*          CombatComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::HandleMariaInDangerModeChanged(class USHMariaCombatComponent* CombatComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "HandleMariaInDangerModeChanged");

	Params::SHMariaVerbalReactionsComponent_HandleMariaInDangerModeChanged Parms{};

	Parms.CombatComponent = CombatComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMariaVerbalReactionsComponent.HandlePlayerMeleePrimaryAttackStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombatSubcomponent                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::HandlePlayerMeleePrimaryAttackStarted(class USHMeleeCmbSubcomp* MeleeCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "HandlePlayerMeleePrimaryAttackStarted");

	Params::SHMariaVerbalReactionsComponent_HandlePlayerMeleePrimaryAttackStarted Parms{};

	Parms.MeleeCombatSubcomponent = MeleeCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMariaVerbalReactionsComponent.HandlePlayerMeleeSecondaryAttackStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombatSubcomponent                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::HandlePlayerMeleeSecondaryAttackStarted(class USHMeleeCmbSubcomp* MeleeCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "HandlePlayerMeleeSecondaryAttackStarted");

	Params::SHMariaVerbalReactionsComponent_HandlePlayerMeleeSecondaryAttackStarted Parms{};

	Parms.MeleeCombatSubcomponent = MeleeCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMariaVerbalReactionsComponent.HandlePlayerRangedFireSuccess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::HandlePlayerRangedFireSuccess(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "HandlePlayerRangedFireSuccess");

	Params::SHMariaVerbalReactionsComponent_HandlePlayerRangedFireSuccess Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMariaVerbalReactionsComponent.MarkAsCompleted
// (Final, Native, Public, BlueprintCallable)

void USHMariaVerbalReactionsComponent::MarkAsCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "MarkAsCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.ProcessPlayerMeleePrimaryAttackStarted
// (Final, Native, Protected)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombatSubcomponent                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::ProcessPlayerMeleePrimaryAttackStarted(class USHMeleeCmbSubcomp* MeleeCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "ProcessPlayerMeleePrimaryAttackStarted");

	Params::SHMariaVerbalReactionsComponent_ProcessPlayerMeleePrimaryAttackStarted Parms{};

	Parms.MeleeCombatSubcomponent = MeleeCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.ProcessPlayerMeleeSecondaryAttackStarted
// (Final, Native, Protected)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombatSubcomponent                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::ProcessPlayerMeleeSecondaryAttackStarted(class USHMeleeCmbSubcomp* MeleeCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "ProcessPlayerMeleeSecondaryAttackStarted");

	Params::SHMariaVerbalReactionsComponent_ProcessPlayerMeleeSecondaryAttackStarted Parms{};

	Parms.MeleeCombatSubcomponent = MeleeCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.ProcessPlayerRangedAimPointingActorChanged
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::ProcessPlayerRangedAimPointingActorChanged(class USHRangedCmbSubcomp* RangedCombatSubcomponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "ProcessPlayerRangedAimPointingActorChanged");

	Params::SHMariaVerbalReactionsComponent_ProcessPlayerRangedAimPointingActorChanged Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.ProcessPlayerRangedFireSuccess
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::ProcessPlayerRangedFireSuccess(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "ProcessPlayerRangedFireSuccess");

	Params::SHMariaVerbalReactionsComponent_ProcessPlayerRangedFireSuccess Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.SetDangerModeChangedCommentBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::SetDangerModeChangedCommentBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "SetDangerModeChangedCommentBlocked");

	Params::SHMariaVerbalReactionsComponent_SetDangerModeChangedCommentBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.SetGeneralBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMariaVerbalReactionsComponent::SetGeneralBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "SetGeneralBlocked");

	Params::SHMariaVerbalReactionsComponent_SetGeneralBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMariaVerbalReactionsComponent.AreAllConditionsMeet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::AreAllConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "AreAllConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_AreAllConditionsMeet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.AreCustomConditionsMeet
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::AreCustomConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "AreCustomConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_AreCustomConditionsMeet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsBehaviourStateConditionsMeet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsBehaviourStateConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsBehaviourStateConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_IsBehaviourStateConditionsMeet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsCompleted");

	Params::SHMariaVerbalReactionsComponent_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsCoreDistance2DConditionsMeet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsCoreDistance2DConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsCoreDistance2DConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_IsCoreDistance2DConditionsMeet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsCutsceneStateConditionsMeet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsCutsceneStateConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsCutsceneStateConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_IsCutsceneStateConditionsMeet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsDangerModeChangedCommentBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsDangerModeChangedCommentBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsDangerModeChangedCommentBlocked");

	Params::SHMariaVerbalReactionsComponent_IsDangerModeChangedCommentBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsGeneralBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsGeneralBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsGeneralBlocked");

	Params::SHMariaVerbalReactionsComponent_IsGeneralBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMariaVerbalReactionsComponent.IsPlayerCombatStateConditionsMeet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMariaVerbalReactionsComponent::IsPlayerCombatStateConditionsMeet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMariaVerbalReactionsComponent", "IsPlayerCombatStateConditionsMeet");

	Params::SHMariaVerbalReactionsComponent_IsPlayerCombatStateConditionsMeet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryAnimInstance.K2_OnMaryMovementStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESHMaryAnimInstanceMovementState        InMovementState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMaryAnimInstance::K2_OnMaryMovementStateChanged(ESHMaryAnimInstanceMovementState InMovementState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "K2_OnMaryMovementStateChanged");

	Params::SHMaryAnimInstance_K2_OnMaryMovementStateChanged Parms{};

	Parms.InMovementState = InMovementState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMaryAnimInstance.ResetFaceExpression
// (Final, Native, Public)

void USHMaryAnimInstance::ResetFaceExpression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "ResetFaceExpression");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMaryAnimInstance.SetFaceExpression
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESHMariaBossFaceExpression              Expression                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMaryAnimInstance::SetFaceExpression(const ESHMariaBossFaceExpression Expression, const float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "SetFaceExpression");

	Params::SHMaryAnimInstance_SetFaceExpression Parms{};

	Parms.Expression = Expression;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMaryAnimInstance.GetActiveMaryLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMaryLocomotionAnimInstance*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMaryLocomotionAnimInstance* USHMaryAnimInstance::GetActiveMaryLocomotionAnimInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "GetActiveMaryLocomotionAnimInstance");

	Params::SHMaryAnimInstance_GetActiveMaryLocomotionAnimInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryAnimInstance.GetMaryAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHMaryAnimInstanceStateData*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMaryAnimInstanceStateData* USHMaryAnimInstance::GetMaryAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "GetMaryAnimInstanceStateData");

	Params::SHMaryAnimInstance_GetMaryAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryAnimInstance.GetMaryLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHMaryLocomotionAnimInstance*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMaryLocomotionAnimInstance* USHMaryAnimInstance::GetMaryLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "GetMaryLocomotionAnimInstance");

	Params::SHMaryAnimInstance_GetMaryLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryAnimInstance.GetMarySpiderLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHMarySpiderLocomotionAnimInstance*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHMarySpiderLocomotionAnimInstance* USHMaryAnimInstance::GetMarySpiderLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryAnimInstance", "GetMarySpiderLocomotionAnimInstance");

	Params::SHMaryAnimInstance_GetMarySpiderLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryItemsInvestigationEndingFactor.SHDebug_Character_Endings_MaryItemsInvestigationEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMaryItemsInvestigationEndingFactor::SHDebug_Character_Endings_MaryItemsInvestigationEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryItemsInvestigationEndingFactor", "SHDebug_Character_Endings_MaryItemsInvestigationEndingFactor_SetDebugValue");

	Params::SHMaryItemsInvestigationEndingFactor_SHDebug_Character_Endings_MaryItemsInvestigationEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMaryTransformationState.GetGrabPointSearchOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector USHMaryTransformationState::GetGrabPointSearchOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryTransformationState", "GetGrabPointSearchOffset");

	Params::SHMaryTransformationState_GetGrabPointSearchOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryTransformationState.GetMaryTransformationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHMaryTransformationState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHMaryTransformationState USHMaryTransformationState::GetMaryTransformationState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryTransformationState", "GetMaryTransformationState");

	Params::SHMaryTransformationState_GetMaryTransformationState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryTransformationState.GetShouldRotationBeMaintained
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHMaryTransformationState::GetShouldRotationBeMaintained() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryTransformationState", "GetShouldRotationBeMaintained");

	Params::SHMaryTransformationState_GetShouldRotationBeMaintained Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMaryTransformationState.GetTransformationOverrides
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    OutShouldBeUsed                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHMaryTransformationStateCurves OutCurves                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void USHMaryTransformationState::GetTransformationOverrides(bool* OutShouldBeUsed, struct FSHMaryTransformationStateCurves* OutCurves) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMaryTransformationState", "GetTransformationOverrides");

	Params::SHMaryTransformationState_GetTransformationOverrides Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutShouldBeUsed != nullptr)
		*OutShouldBeUsed = Parms.OutShouldBeUsed;

	if (OutCurves != nullptr)
		*OutCurves = std::move(Parms.OutCurves);
}


// Function SHProto.SHMeatConveyorBase.BindToBossDispatch
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMeatConveyorBase::BindToBossDispatch(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "BindToBossDispatch");

	Params::SHMeatConveyorBase_BindToBossDispatch Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMeatConveyorBase.FinishMovementRoutine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInstant                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMeatConveyorBase::FinishMovementRoutine(const bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "FinishMovementRoutine");

	Params::SHMeatConveyorBase_FinishMovementRoutine Parms{};

	Parms.bInstant = bInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHMeatConveyorBase.SHMeatConveyorBaseBoolContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHMeatConveyorBase*              Conveyor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMeatConveyorBase::SHMeatConveyorBaseBoolContextEvent__DelegateSignature(class ASHMeatConveyorBase* Conveyor, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "SHMeatConveyorBaseBoolContextEvent__DelegateSignature");

	Params::SHMeatConveyorBase_SHMeatConveyorBaseBoolContextEvent__DelegateSignature Parms{};

	Parms.Conveyor = Conveyor;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHMeatConveyorBase.SHMeatConveyorBaseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHMeatConveyorBase*              Conveyor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMeatConveyorBase::SHMeatConveyorBaseEvent__DelegateSignature(class ASHMeatConveyorBase* Conveyor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "SHMeatConveyorBaseEvent__DelegateSignature");

	Params::SHMeatConveyorBase_SHMeatConveyorBaseEvent__DelegateSignature Parms{};

	Parms.Conveyor = Conveyor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMeatConveyorBase.StartMovementRoutine
// (Final, Native, Public, BlueprintCallable)

void ASHMeatConveyorBase::StartMovementRoutine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "StartMovementRoutine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMeatConveyorBase.UnbindFromBossDispatch
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMeatConveyorBase::UnbindFromBossDispatch(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "UnbindFromBossDispatch");

	Params::SHMeatConveyorBase_UnbindFromBossDispatch Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMeatConveyorBase.IsCharacterInWorkArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       InCharacter                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AllowCapsuleTouch                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHMeatConveyorBase::IsCharacterInWorkArea(class ACharacter* InCharacter, bool AllowCapsuleTouch) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "IsCharacterInWorkArea");

	Params::SHMeatConveyorBase_IsCharacterInWorkArea Parms{};

	Parms.InCharacter = InCharacter;
	Parms.AllowCapsuleTouch = AllowCapsuleTouch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMeatConveyorBase.IsInMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHMeatConveyorBase::IsInMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "IsInMotion");

	Params::SHMeatConveyorBase_IsInMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMeatConveyorBase.IsMovementRoutineRequested
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHMeatConveyorBase::IsMovementRoutineRequested() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeatConveyorBase", "IsMovementRoutineRequested");

	Params::SHMeatConveyorBase_IsMovementRoutineRequested Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHMeleeCmbSubcomp.OnMeleeAttackBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMeleeCmbSubcomp::OnMeleeAttackBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeleeCmbSubcomp", "OnMeleeAttackBlendingOut");

	Params::SHMeleeCmbSubcomp_OnMeleeAttackBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMeleeCmbSubcomp.OnMeleeAttackEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMeleeCmbSubcomp::OnMeleeAttackEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeleeCmbSubcomp", "OnMeleeAttackEnd");

	Params::SHMeleeCmbSubcomp_OnMeleeAttackEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMeleeCmbSubcomp.ProcessEquippedWeaponModifiedEvent
// (Final, Native, Protected)
// Parameters:
// class USHWeaponManageCmbSubcomp*        WeaponManager                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMeleeCmbSubcomp::ProcessEquippedWeaponModifiedEvent(class USHWeaponManageCmbSubcomp* WeaponManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeleeCmbSubcomp", "ProcessEquippedWeaponModifiedEvent");

	Params::SHMeleeCmbSubcomp_ProcessEquippedWeaponModifiedEvent Parms{};

	Parms.WeaponManager = WeaponManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHMeleeCmbSubcomp.SHMeleeCombatWeaponContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombatSubcomponent                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMeleeCmbSubcomp::SHMeleeCombatWeaponContextEvent__DelegateSignature(class USHMeleeCmbSubcomp* MeleeCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMeleeCmbSubcomp", "SHMeleeCombatWeaponContextEvent__DelegateSignature");

	Params::SHMeleeCmbSubcomp_SHMeleeCombatWeaponContextEvent__DelegateSignature Parms{};

	Parms.MeleeCombatSubcomponent = MeleeCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHMenuTutorialWidget.Back
// (Native, Public, BlueprintCallable)

void USHMenuTutorialWidget::Back()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "Back");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMenuTutorialWidget.BP_OnBack
// (Event, Public, BlueprintEvent)

void USHMenuTutorialWidget::BP_OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "BP_OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMenuTutorialWidget.Hide
// (Native, Public, BlueprintCallable)

void USHMenuTutorialWidget::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMenuTutorialWidget.OnHide
// (Event, Public, BlueprintEvent)

void USHMenuTutorialWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMenuTutorialWidget.OnShow
// (Event, Public, BlueprintEvent)

void USHMenuTutorialWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHMenuTutorialWidget.Show
// (Native, Public, BlueprintCallable)

void USHMenuTutorialWidget::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMenuTutorialWidget", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMiniInventoryWidget.OnAnimFinished
// (Final, Native, Protected)

void USHMiniInventoryWidget::OnAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMiniInventoryWidget", "OnAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMiniInventoryWidget.OnItemMoveNameAndDescriptionUpdate
// (Final, Native, Protected, BlueprintCallable)

void USHMiniInventoryWidget::OnItemMoveNameAndDescriptionUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMiniInventoryWidget", "OnItemMoveNameAndDescriptionUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMiniInventoryWidget.OnItemMoveZOrderUpdate
// (Final, Native, Protected, BlueprintCallable)

void USHMiniInventoryWidget::OnItemMoveZOrderUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMiniInventoryWidget", "OnItemMoveZOrderUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMovementObstacleDetection.SHDebug_Character_MovementObstacleDetection_DrawDebug
// (Final, Exec, Native, Protected)

void USHMovementObstacleDetection::SHDebug_Character_MovementObstacleDetection_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMovementObstacleDetection", "SHDebug_Character_MovementObstacleDetection_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMovementObstacleDetection.SHDebug_Character_MovementObstacleDetection_Enabled
// (Final, Exec, Native, Protected)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMovementObstacleDetection::SHDebug_Character_MovementObstacleDetection_Enabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMovementObstacleDetection", "SHDebug_Character_MovementObstacleDetection_Enabled");

	Params::SHMovementObstacleDetection_SHDebug_Character_MovementObstacleDetection_Enabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMovementObstacleDetection.SHDebug_Character_MovementObstacleDetection_ValuesDebug
// (Final, Exec, Native, Protected)

void USHMovementObstacleDetection::SHDebug_Character_MovementObstacleDetection_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMovementObstacleDetection", "SHDebug_Character_MovementObstacleDetection_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMovingWheelStaticMeshComponent.ProcessPushingFinishedOrInterupted
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMovingWheelStaticMeshComponent::ProcessPushingFinishedOrInterupted(class USHPushableComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMovingWheelStaticMeshComponent", "ProcessPushingFinishedOrInterupted");

	Params::SHMovingWheelStaticMeshComponent_ProcessPushingFinishedOrInterupted Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMovingWheelStaticMeshComponent.ProcessPushingStarted
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHMovingWheelStaticMeshComponent::ProcessPushingStarted(class USHPushableComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMovingWheelStaticMeshComponent", "ProcessPushingStarted");

	Params::SHMovingWheelStaticMeshComponent_ProcessPushingStarted Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHMusicRTPCVolume.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHMusicRTPCVolume::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHMusicRTPCVolume", "SetEnabled");

	Params::SHMusicRTPCVolume_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNiagaraVolumeCutoutComponent.SetCutOutDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDisable                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHNiagaraVolumeCutoutComponent::SetCutOutDisabled(const bool IsDisable, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNiagaraVolumeCutoutComponent", "SetCutOutDisabled");

	Params::SHNiagaraVolumeCutoutComponent_SetCutOutDisabled Parms{};

	Parms.IsDisable = IsDisable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHNiagaraVolumeCutoutComponent.IsCutOutDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHNiagaraVolumeCutoutComponent::IsCutOutDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNiagaraVolumeCutoutComponent", "IsCutOutDisabled");

	Params::SHNiagaraVolumeCutoutComponent_IsCutOutDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNiagaraVolumeCutoutComponent.IsCutOutDisabledBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHNiagaraVolumeCutoutComponent::IsCutOutDisabledBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNiagaraVolumeCutoutComponent", "IsCutOutDisabledBy");

	Params::SHNiagaraVolumeCutoutComponent_IsCutOutDisabledBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNurseAnimInstance.GetNurseAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHNurseAnimInstanceStateData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHNurseAnimInstanceStateData* USHNurseAnimInstance::GetNurseAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNurseAnimInstance", "GetNurseAnimInstanceStateData");

	Params::SHNurseAnimInstance_GetNurseAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNurseAnimInstance.GetNurseLocomotionAnimInstance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHNurseLocomotionAnimInstance*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHNurseLocomotionAnimInstance* USHNurseAnimInstance::GetNurseLocomotionAnimInstance(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNurseAnimInstance", "GetNurseLocomotionAnimInstance");

	Params::SHNurseAnimInstance_GetNurseLocomotionAnimInstance Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHNurseLocomotionAnimInstance.GetNurseAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHNurseAnimInstanceStateData*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHNurseAnimInstanceStateData* USHNurseLocomotionAnimInstance::GetNurseAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHNurseLocomotionAnimInstance", "GetNurseAnimInstanceStateData");

	Params::SHNurseLocomotionAnimInstance_GetNurseAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPHAnimInstance.SetLookAtEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewLookAtEnable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPHAnimInstance::SetLookAtEnable(bool NewLookAtEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHAnimInstance", "SetLookAtEnable");

	Params::SHPHAnimInstance_SetLookAtEnable Parms{};

	Parms.NewLookAtEnable = NewLookAtEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPHAnimInstance.SetMovementSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPHAnimInstance::SetMovementSpeedMultiplier(float NewSpeed, float Time, float BlendInTime, float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHAnimInstance", "SetMovementSpeedMultiplier");

	Params::SHPHAnimInstance_SetMovementSpeedMultiplier Parms{};

	Parms.NewSpeed = NewSpeed;
	Parms.Time = Time;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPHAnimInstance.GetPHAnimInstanceStateData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHPHAnimInstanceStateData*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHPHAnimInstanceStateData* USHPHAnimInstance::GetPHAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHAnimInstance", "GetPHAnimInstanceStateData");

	Params::SHPHAnimInstance_GetPHAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPHLocomotionAnimInstance.SetLookAtAngle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LookAtTargetLocation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPHLocomotionAnimInstance::SetLookAtAngle(const struct FVector& LookAtTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHLocomotionAnimInstance", "SetLookAtAngle");

	Params::SHPHLocomotionAnimInstance_SetLookAtAngle Parms{};

	Parms.LookAtTargetLocation = std::move(LookAtTargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPHLocomotionAnimInstance.SetLookAtEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewLookAtEnable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPHLocomotionAnimInstance::SetLookAtEnable(bool NewLookAtEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHLocomotionAnimInstance", "SetLookAtEnable");

	Params::SHPHLocomotionAnimInstance_SetLookAtEnable Parms{};

	Parms.NewLookAtEnable = NewLookAtEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPHLocomotionAnimInstance.SetMovementSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMovementSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPHLocomotionAnimInstance::SetMovementSpeedMultiplier(float NewMovementSpeed, float Time, float BlendInTime, float BlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHLocomotionAnimInstance", "SetMovementSpeedMultiplier");

	Params::SHPHLocomotionAnimInstance_SetMovementSpeedMultiplier Parms{};

	Parms.NewMovementSpeed = NewMovementSpeed;
	Parms.Time = Time;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPHLocomotionAnimInstance.GetPHAnimInstanceStateData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHPHAnimInstanceStateData*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHPHAnimInstanceStateData* USHPHLocomotionAnimInstance::GetPHAnimInstanceStateData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPHLocomotionAnimInstance", "GetPHAnimInstanceStateData");

	Params::SHPHLocomotionAnimInstance_GetPHAnimInstanceStateData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPlayerHealingExcessEndingValueProcessor.ProcessHealthValueChangedDetailed
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayHealthComponent*  HealthComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChangeDelta                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlayerHealingExcessEndingValueProcessor::ProcessHealthValueChangedDetailed(class USHCharacterPlayHealthComponent* HealthComponent, float ChangeDelta, float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlayerHealingExcessEndingValueProcessor", "ProcessHealthValueChangedDetailed");

	Params::SHPlayerHealingExcessEndingValueProcessor_ProcessHealthValueChangedDetailed Parms{};

	Parms.HealthComponent = HealthComponent;
	Parms.ChangeDelta = ChangeDelta;
	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPlaythroughHealingExcessEndingFactor.SHDebug_Character_Endings_PlaythroughHealingExcessEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPlaythroughHealingExcessEndingFactor::SHDebug_Character_Endings_PlaythroughHealingExcessEndingFactor_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPlaythroughHealingExcessEndingFactor", "SHDebug_Character_Endings_PlaythroughHealingExcessEndingFactor_SetDebugValue");

	Params::SHPlaythroughHealingExcessEndingFactor_SHDebug_Character_Endings_PlaythroughHealingExcessEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPostprocessingCtrl.ApplyHDRPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MinLuminance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MidLuminance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxLuminance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Brightness                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   UIBrightness                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   UIContrast                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPostprocessingCtrl::ApplyHDRPreview(float MinLuminance, float MidLuminance, float MaxLuminance, float Brightness, float UIBrightness, float UIContrast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPostprocessingCtrl", "ApplyHDRPreview");

	Params::SHPostprocessingCtrl_ApplyHDRPreview Parms{};

	Parms.MinLuminance = MinLuminance;
	Parms.MidLuminance = MidLuminance;
	Parms.MaxLuminance = MaxLuminance;
	Parms.Brightness = Brightness;
	Parms.UIBrightness = UIBrightness;
	Parms.UIContrast = UIContrast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPostprocessingCtrl.ShowHDRSettingsPP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPostprocessingCtrl::ShowHDRSettingsPP(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPostprocessingCtrl", "ShowHDRSettingsPP");

	Params::SHPostprocessingCtrl_ShowHDRSettingsPP Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPrisonGallowPuzzleEndingFactor.SHDebug_Character_Endings_Factors_PrisonGallowPuzzle_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPrisonGallowPuzzleEndingFactor::SHDebug_Character_Endings_Factors_PrisonGallowPuzzle_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPrisonGallowPuzzleEndingFactor", "SHDebug_Character_Endings_Factors_PrisonGallowPuzzle_SetDebugValue");

	Params::SHPrisonGallowPuzzleEndingFactor_SHDebug_Character_Endings_Factors_PrisonGallowPuzzle_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProtoCurveUtils.AddCurveValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHProtoCurveUtils::AddCurveValue(class UCurveFloat* Curve, float Value, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHProtoCurveUtils", "AddCurveValue");

	Params::SHProtoCurveUtils_AddCurveValue Parms{};

	Parms.Curve = Curve;
	Parms.Value = Value;
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProtoCurveUtils.AddVectorCurveValue
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCurveVector*                     Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHProtoCurveUtils::AddVectorCurveValue(class UCurveVector* Curve, const struct FVector& Value, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHProtoCurveUtils", "AddVectorCurveValue");

	Params::SHProtoCurveUtils_AddVectorCurveValue Parms{};

	Parms.Curve = Curve;
	Parms.Value = std::move(Value);
	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProtoCurveUtils.ClearCurveValues
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveBase*                       Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHProtoCurveUtils::ClearCurveValues(class UCurveBase* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHProtoCurveUtils", "ClearCurveValues");

	Params::SHProtoCurveUtils_ClearCurveValues Parms{};

	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHProtoCurveUtils.GetMaxTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHProtoCurveUtils::GetMaxTime(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHProtoCurveUtils", "GetMaxTime");

	Params::SHProtoCurveUtils_GetMaxTime Parms{};

	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHProtoCurveUtils.GetMinTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      Curve                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USHProtoCurveUtils::GetMinTime(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHProtoCurveUtils", "GetMinTime");

	Params::SHProtoCurveUtils_GetMinTime Parms{};

	Parms.Curve = Curve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPukePuddle.HandleApplyDamage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharacter*                       DamagedCharacter                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPukePuddle::HandleApplyDamage(class ACharacter* DamagedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPukePuddle", "HandleApplyDamage");

	Params::SHPukePuddle_HandleApplyDamage Parms{};

	Parms.DamagedCharacter = DamagedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPukePuddle.IsPuddleDamageActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHPukePuddle::IsPuddleDamageActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPukePuddle", "IsPuddleDamageActive");

	Params::SHPukePuddle_IsPuddleDamageActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USphereComponent*                 InProximitySphere                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMeshComponent*                   InMainMesh                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::Initialize(class USphereComponent* InProximitySphere, class UMeshComponent* InMainMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "Initialize");

	Params::SHPushableComponent_Initialize Parms{};

	Parms.InProximitySphere = InProximitySphere;
	Parms.InMainMesh = InMainMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASHCharacterPlay*                 InInteractingCharacter                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::Interact(class ASHCharacterPlay* InInteractingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "Interact");

	Params::SHPushableComponent_Interact Parms{};

	Parms.InInteractingCharacter = InInteractingCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ManualFinishRequest
// (Final, Native, Public, BlueprintCallable)

void USHPushableComponent::ManualFinishRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ManualFinishRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessAnimInstFinishedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessAnimInstFinishedInteraction(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessAnimInstFinishedInteraction");

	Params::SHPushableComponent_ProcessAnimInstFinishedInteraction Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessAnimInstFiredFinishInteraction
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessAnimInstFiredFinishInteraction(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessAnimInstFiredFinishInteraction");

	Params::SHPushableComponent_ProcessAnimInstFiredFinishInteraction Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessAnimInstStartedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessAnimInstStartedInteraction(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessAnimInstStartedInteraction");

	Params::SHPushableComponent_ProcessAnimInstStartedInteraction Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessAnimInstStartedMovement
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessAnimInstStartedMovement(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessAnimInstStartedMovement");

	Params::SHPushableComponent_ProcessAnimInstStartedMovement Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessAnimInstStoppedMovement
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessAnimInstStoppedMovement(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessAnimInstStoppedMovement");

	Params::SHPushableComponent_ProcessAnimInstStoppedMovement Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessInteractingCharacterCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessInteractingCharacterCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessInteractingCharacterCombatInputModeChanged");

	Params::SHPushableComponent_ProcessInteractingCharacterCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessInteractingCharacterReceiveDamage
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessInteractingCharacterReceiveDamage(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessInteractingCharacterReceiveDamage");

	Params::SHPushableComponent_ProcessInteractingCharacterReceiveDamage Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessLookAtRotationAbsoluteEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessLookAtRotationAbsoluteEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessLookAtRotationAbsoluteEnd");

	Params::SHPushableComponent_ProcessLookAtRotationAbsoluteEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessMovementSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessMovementSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessMovementSnapEnd");

	Params::SHPushableComponent_ProcessMovementSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessProximityBeginOverlap");

	Params::SHPushableComponent_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessProximityEndOverlap");

	Params::SHPushableComponent_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.ProcessSlideSnapEnd
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::ProcessSlideSnapEnd(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "ProcessSlideSnapEnd");

	Params::SHPushableComponent_ProcessSlideSnapEnd Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.SetComponentBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::SetComponentBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "SetComponentBlocked");

	Params::SHPushableComponent_SetComponentBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHPushableComponent.SHPushableComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHPushableComponent*             Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::SHPushableComponentEvent__DelegateSignature(class USHPushableComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "SHPushableComponentEvent__DelegateSignature");

	Params::SHPushableComponent_SHPushableComponentEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPushableComponent.TeleportAbsolute
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLoc                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableComponent::TeleportAbsolute(const struct FVector& InWorldLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "TeleportAbsolute");

	Params::SHPushableComponent_TeleportAbsolute Parms{};

	Parms.InWorldLoc = std::move(InWorldLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableComponent.GetInteractingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHCharacterPlay*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHCharacterPlay* USHPushableComponent::GetInteractingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "GetInteractingCharacter");

	Params::SHPushableComponent_GetInteractingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.GetLinkedAnimGraphInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHPushingObjectAnimInstance*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHPushingObjectAnimInstance* USHPushableComponent::GetLinkedAnimGraphInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "GetLinkedAnimGraphInstance");

	Params::SHPushableComponent_GetLinkedAnimGraphInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.GetOwnerMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMeshComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMeshComponent* USHPushableComponent::GetOwnerMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "GetOwnerMesh");

	Params::SHPushableComponent_GetOwnerMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.IsComponentBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHPushableComponent::IsComponentBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "IsComponentBlocked");

	Params::SHPushableComponent_IsComponentBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.IsInInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHPushableComponent::IsInInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "IsInInteraction");

	Params::SHPushableComponent_IsInInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableComponent.IsInteractingCharacterStandingOnOwnerMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHPushableComponent::IsInteractingCharacterStandingOnOwnerMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableComponent", "IsInteractingCharacterStandingOnOwnerMesh");

	Params::SHPushableComponent_IsInteractingCharacterStandingOnOwnerMesh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushableObjectDragComponent.ProcessMovementStartedEvent
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableObjectDragComponent::ProcessMovementStartedEvent(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableObjectDragComponent", "ProcessMovementStartedEvent");

	Params::SHPushableObjectDragComponent_ProcessMovementStartedEvent Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushableObjectDragComponent.ProcessMovementStoppedEvent
// (Final, Native, Protected)
// Parameters:
// class USHPushingObjectAnimInstance*     AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableObjectDragComponent::ProcessMovementStoppedEvent(class USHPushingObjectAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableObjectDragComponent", "ProcessMovementStoppedEvent");

	Params::SHPushableObjectDragComponent_ProcessMovementStoppedEvent Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHPushableObjectDragComponent.SHPushableObjectDragComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHPushableObjectDragComponent*   Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushableObjectDragComponent::SHPushableObjectDragComponentEvent__DelegateSignature(class USHPushableObjectDragComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableObjectDragComponent", "SHPushableObjectDragComponentEvent__DelegateSignature");

	Params::SHPushableObjectDragComponent_SHPushableObjectDragComponentEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPushableRangeClampActor.RelayAppliedManagedActorState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInDesiredSpotState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstantApply                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPushableRangeClampActor::RelayAppliedManagedActorState(bool bIsInDesiredSpotState, bool bInstantApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableRangeClampActor", "RelayAppliedManagedActorState");

	Params::SHPushableRangeClampActor_RelayAppliedManagedActorState Parms{};

	Parms.bIsInDesiredSpotState = bIsInDesiredSpotState;
	Parms.bInstantApply = bInstantApply;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHPushableRangeClampActor.SHPushableRangeClampEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHPushableRangeClampActor*       ActorPtr                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHPushableRangeClampActor::SHPushableRangeClampEvent__DelegateSignature(class ASHPushableRangeClampActor* ActorPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableRangeClampActor", "SHPushableRangeClampEvent__DelegateSignature");

	Params::SHPushableRangeClampActor_SHPushableRangeClampEvent__DelegateSignature Parms{};

	Parms.ActorPtr = ActorPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHPushableRangeClampActor.IsManagedActorOutOfRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHPushableRangeClampActor::IsManagedActorOutOfRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushableRangeClampActor", "IsManagedActorOutOfRange");

	Params::SHPushableRangeClampActor_IsManagedActorOutOfRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPushingObjectAnimInstance.ApplyAnyMovementStarted
// (Final, Native, Protected, BlueprintCallable)

void USHPushingObjectAnimInstance::ApplyAnyMovementStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "ApplyAnyMovementStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushingObjectAnimInstance.ApplyInteractionFinished
// (Final, Native, Protected, BlueprintCallable)

void USHPushingObjectAnimInstance::ApplyInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "ApplyInteractionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushingObjectAnimInstance.ApplyInteractionFinishFired
// (Final, Native, Protected, BlueprintCallable)

void USHPushingObjectAnimInstance::ApplyInteractionFinishFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "ApplyInteractionFinishFired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushingObjectAnimInstance.ApplyInteractionStarted
// (Final, Native, Protected, BlueprintCallable)

void USHPushingObjectAnimInstance::ApplyInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "ApplyInteractionStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushingObjectAnimInstance.ApplyMovementStopped
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          StoppedMovementInput                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPushingObjectAnimInstance::ApplyMovementStopped(const struct FVector& StoppedMovementInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "ApplyMovementStopped");

	Params::SHPushingObjectAnimInstance_ApplyMovementStopped Parms{};

	Parms.StoppedMovementInput = std::move(StoppedMovementInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPushingObjectAnimInstance.OnAbortedBP
// (Event, Public, BlueprintEvent)

void USHPushingObjectAnimInstance::OnAbortedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "OnAbortedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHPushingObjectAnimInstance.GetBlockedInputValue
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USHPushingObjectAnimInstance::GetBlockedInputValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPushingObjectAnimInstance", "GetBlockedInputValue");

	Params::SHPushingObjectAnimInstance_GetBlockedInputValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHPuzzleStatics.GetLadyJusticePuzzlePossibleVariations
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                                   StartValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<float, class FString>              SolutionValueToName                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// TArray<float>                           Weights                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void USHPuzzleStatics::GetLadyJusticePuzzlePossibleVariations(const float StartValue, const TMap<float, class FString>& SolutionValueToName, const TArray<float>& Weights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHPuzzleStatics", "GetLadyJusticePuzzlePossibleVariations");

	Params::SHPuzzleStatics_GetLadyJusticePuzzlePossibleVariations Parms{};

	Parms.StartValue = StartValue;
	Parms.SolutionValueToName = std::move(SolutionValueToName);
	Parms.Weights = std::move(Weights);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHPyramidHeadBossFightOutcomeEndingFactor.SHDebug_Character_Endings_Factors_PyramidHeadBossFightOutcome_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHPyramidHeadBossFightOutcomeEndingFactor::SHDebug_Character_Endings_Factors_PyramidHeadBossFightOutcome_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHPyramidHeadBossFightOutcomeEndingFactor", "SHDebug_Character_Endings_Factors_PyramidHeadBossFightOutcome_SetDebugValue");

	Params::SHPyramidHeadBossFightOutcomeEndingFactor_SHDebug_Character_Endings_Factors_PyramidHeadBossFightOutcome_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRadio.SetEnemyIgnored
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InEnemyPawn                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShouldBeIgnored                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHRadio::SetEnemyIgnored(class APawn* InEnemyPawn, const bool bInShouldBeIgnored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRadio", "SetEnemyIgnored");

	Params::SHRadio_SetEnemyIgnored Parms{};

	Parms.InEnemyPawn = InEnemyPawn;
	Parms.bInShouldBeIgnored = bInShouldBeIgnored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRadio.SHDebug_Character_Items_Radio_DrawDebug
// (Final, Exec, Native, Protected)

void ASHRadio::SHDebug_Character_Items_Radio_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRadio", "SHDebug_Character_Items_Radio_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRadio.SHDebug_Character_Items_Radio_ValuesDebug
// (Final, Exec, Native, Protected)

void ASHRadio::SHDebug_Character_Items_Radio_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRadio", "SHDebug_Character_Items_Radio_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedAutoAimCmbSubcomp.SHDebug_Character_Combat_AutoAim_Magnet_DrawDebug
// (Final, Exec, Native, Protected)

void USHRangedAutoAimCmbSubcomp::SHDebug_Character_Combat_AutoAim_Magnet_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedAutoAimCmbSubcomp", "SHDebug_Character_Combat_AutoAim_Magnet_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedAutoAimCmbSubcomp.SHDebug_Character_Combat_AutoAim_Magnet_ValuesDebug
// (Final, Exec, Native, Protected)

void USHRangedAutoAimCmbSubcomp::SHDebug_Character_Combat_AutoAim_Magnet_ValuesDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedAutoAimCmbSubcomp", "SHDebug_Character_Combat_AutoAim_Magnet_ValuesDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.OnRangedFireEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::OnRangedFireEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "OnRangedFireEnd");

	Params::SHRangedCmbSubcomp_OnRangedFireEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.OnRangedReloadEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::OnRangedReloadEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "OnRangedReloadEnd");

	Params::SHRangedCmbSubcomp_OnRangedReloadEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.OnRangedSingleActionPrepareEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::OnRangedSingleActionPrepareEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "OnRangedSingleActionPrepareEnd");

	Params::SHRangedCmbSubcomp_OnRangedSingleActionPrepareEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.ProcessEquippedWeaponModifiedEvent
// (Final, Native, Protected)
// Parameters:
// class USHWeaponManageCmbSubcomp*        WeaponManager                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::ProcessEquippedWeaponModifiedEvent(class USHWeaponManageCmbSubcomp* WeaponManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "ProcessEquippedWeaponModifiedEvent");

	Params::SHRangedCmbSubcomp_ProcessEquippedWeaponModifiedEvent Parms{};

	Parms.WeaponManager = WeaponManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.ProcessIsInSprintChangeEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayMovementComponent*ComponentRef                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::ProcessIsInSprintChangeEvent(class USHCharacterPlayMovementComponent* ComponentRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "ProcessIsInSprintChangeEvent");

	Params::SHRangedCmbSubcomp_ProcessIsInSprintChangeEvent Parms{};

	Parms.ComponentRef = ComponentRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.ProcessSprintRequestedChangeEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayMovementComponent*ComponentRef                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::ProcessSprintRequestedChangeEvent(class USHCharacterPlayMovementComponent* ComponentRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "ProcessSprintRequestedChangeEvent");

	Params::SHRangedCmbSubcomp_ProcessSprintRequestedChangeEvent Parms{};

	Parms.ComponentRef = ComponentRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.RequestManualFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::RequestManualFire(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "RequestManualFire");

	Params::SHRangedCmbSubcomp_RequestManualFire Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRangedCmbSubcomp.SHDebug_Character_Combat_ForceRangedAim
// (Final, Exec, Native, Public)

void USHRangedCmbSubcomp::SHDebug_Character_Combat_ForceRangedAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "SHDebug_Character_Combat_ForceRangedAim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHRangedCmbSubcomp.SHRangedCombatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::SHRangedCombatEvent__DelegateSignature(class USHRangedCmbSubcomp* RangedCombatSubcomponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "SHRangedCombatEvent__DelegateSignature");

	Params::SHRangedCmbSubcomp_SHRangedCombatEvent__DelegateSignature Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHRangedCmbSubcomp.SHRangedCombatWeaponContextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRangedCmbSubcomp::SHRangedCombatWeaponContextEvent__DelegateSignature(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "SHRangedCombatWeaponContextEvent__DelegateSignature");

	Params::SHRangedCmbSubcomp_SHRangedCombatWeaponContextEvent__DelegateSignature Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHRangedCmbSubcomp.GetEquippedRangedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHItemWeaponRanged*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHItemWeaponRanged* USHRangedCmbSubcomp::GetEquippedRangedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "GetEquippedRangedWeapon");

	Params::SHRangedCmbSubcomp_GetEquippedRangedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRangedCmbSubcomp.IsInRangedAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRangedCmbSubcomp::IsInRangedAim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedCmbSubcomp", "IsInRangedAim");

	Params::SHRangedCmbSubcomp_IsInRangedAim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRollinWheelStaticMeshComponent.SetDisabled
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             DummyComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRollinWheelStaticMeshComponent::SetDisabled(class USHPushableComponent* DummyComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRollinWheelStaticMeshComponent", "SetDisabled");

	Params::SHRollinWheelStaticMeshComponent_SetDisabled Parms{};

	Parms.DummyComp = DummyComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRollinWheelStaticMeshComponent.SetEnabled
// (Final, Native, Protected)
// Parameters:
// class USHPushableComponent*             DummyComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRollinWheelStaticMeshComponent::SetEnabled(class USHPushableComponent* DummyComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRollinWheelStaticMeshComponent", "SetEnabled");

	Params::SHRollinWheelStaticMeshComponent_SetEnabled Parms{};

	Parms.DummyComp = DummyComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateableComponent.OnActorHitApplyRotate
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void USHRotateableComponent::OnActorHitApplyRotate(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateableComponent", "OnActorHitApplyRotate");

	Params::SHRotateableComponent_OnActorHitApplyRotate Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateableComponent.RegisterComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             InRotateableMeshComponent                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlaneSideDetectionComponent*     InSHPlaneSideDetectionComponent                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRotateableComponent::RegisterComponents(class UStaticMeshComponent* InRotateableMeshComponent, class UPlaneSideDetectionComponent* InSHPlaneSideDetectionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateableComponent", "RegisterComponents");

	Params::SHRotateableComponent_RegisterComponents Parms{};

	Parms.InRotateableMeshComponent = InRotateableMeshComponent;
	Parms.InSHPlaneSideDetectionComponent = InSHPlaneSideDetectionComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateInPlaceAnimInstance.OnInitializeValues
// (Final, Native, Protected, BlueprintCallable)

void USHRotateInPlaceAnimInstance::OnInitializeValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "OnInitializeValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateInPlaceAnimInstance.OnRotateInPlaceStartNative
// (Final, Native, Protected, BlueprintCallable)

void USHRotateInPlaceAnimInstance::OnRotateInPlaceStartNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "OnRotateInPlaceStartNative");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateInPlaceAnimInstance.OnRotateInPlaceStopNative
// (Final, Native, Protected, BlueprintCallable)

void USHRotateInPlaceAnimInstance::OnRotateInPlaceStopNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "OnRotateInPlaceStopNative");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateInPlaceAnimInstance.SetUseControllerRotationYaw
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    Use                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHRotateInPlaceAnimInstance::SetUseControllerRotationYaw(bool Use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "SetUseControllerRotationYaw");

	Params::SHRotateInPlaceAnimInstance_SetUseControllerRotationYaw Parms{};

	Parms.Use = Use;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHRotateInPlaceAnimInstance.CanBeUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRotateInPlaceAnimInstance::CanBeUsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "CanBeUsed");

	Params::SHRotateInPlaceAnimInstance_CanBeUsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRotateInPlaceAnimInstance.IsBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRotateInPlaceAnimInstance::IsBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "IsBlocked");

	Params::SHRotateInPlaceAnimInstance_IsBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRotateInPlaceAnimInstance.IsCutscenePlaying
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRotateInPlaceAnimInstance::IsCutscenePlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "IsCutscenePlaying");

	Params::SHRotateInPlaceAnimInstance_IsCutscenePlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRotateInPlaceAnimInstance.IsStopImmediatelyRequested
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHRotateInPlaceAnimInstance::IsStopImmediatelyRequested() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRotateInPlaceAnimInstance", "IsStopImmediatelyRequested");

	Params::SHRotateInPlaceAnimInstance_IsStopImmediatelyRequested Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSavePoint.ExitInteractionRequest
// (Final, Native, Public, BlueprintCallable)

void ASHSavePoint::ExitInteractionRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ExitInteractionRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.ManualInteractRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SkipMoveToSpot                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::ManualInteractRequest(class ASHCharacterPlay* Character, bool SkipMoveToSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ManualInteractRequest");

	Params::SHSavePoint_ManualInteractRequest Parms{};

	Parms.Character = Character;
	Parms.SkipMoveToSpot = SkipMoveToSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.OnInteractionEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    WasAborted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::OnInteractionEnded(bool WasAborted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "OnInteractionEnded");

	Params::SHSavePoint_OnInteractionEnded Parms{};

	Parms.WasAborted = WasAborted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSavePoint.OnInteractionStarted
// (Event, Protected, BlueprintEvent)

void ASHSavePoint::OnInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "OnInteractionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSavePoint.OnSetupStarted
// (Event, Protected, BlueprintEvent)

void ASHSavePoint::OnSetupStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "OnSetupStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSavePoint.ProcessCombatInputModeChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::ProcessCombatInputModeChangedEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ProcessCombatInputModeChangedEvent");

	Params::SHSavePoint_ProcessCombatInputModeChangedEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ProcessInteractionManagerInitialized");

	Params::SHSavePoint_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.ProcessMovementSnapFinish
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::ProcessMovementSnapFinish(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ProcessMovementSnapFinish");

	Params::SHSavePoint_ProcessMovementSnapFinish Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHSavePoint::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ProcessProximityBeginOverlap");

	Params::SHSavePoint_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSavePoint.ProcessReceiveDamageEvent
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::ProcessReceiveDamageEvent(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "ProcessReceiveDamageEvent");

	Params::SHSavePoint_ProcessReceiveDamageEvent Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHSavePoint.SHSavePointActorEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHSavePoint*                     Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSavePoint::SHSavePointActorEvent__DelegateSignature(class ASHSavePoint* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSavePoint", "SHSavePointActorEvent__DelegateSignature");

	Params::SHSavePoint_SHSavePointActorEvent__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSaveSlotWidget.GetGameSlotInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameSaveSlotInfo                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameSaveSlotInfo USHSaveSlotWidget::GetGameSlotInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSaveSlotWidget", "GetGameSlotInfo");

	Params::SHSaveSlotWidget_GetGameSlotInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSearchFocus.ProcessAnimInstStageAdvanced
// (Final, Native, Protected)
// Parameters:
// class USHSearchFocusAnimInstance*       AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessAnimInstStageAdvanced(class USHSearchFocusAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessAnimInstStageAdvanced");

	Params::SHSearchFocus_ProcessAnimInstStageAdvanced Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessAnimInstStartedInteraction
// (Final, Native, Protected)
// Parameters:
// class USHSearchFocusAnimInstance*       AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessAnimInstStartedInteraction(class USHSearchFocusAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessAnimInstStartedInteraction");

	Params::SHSearchFocus_ProcessAnimInstStartedInteraction Parms{};

	Parms.AnimInst = AnimInst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessFocusableInputActionEvent
// (Final, Native, Protected)
// Parameters:
// ESHFocusableInputActionTypeEnum         InputActionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KeyValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessFocusableInputActionEvent(ESHFocusableInputActionTypeEnum InputActionType, float KeyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessFocusableInputActionEvent");

	Params::SHSearchFocus_ProcessFocusableInputActionEvent Parms{};

	Parms.InputActionType = InputActionType;
	Parms.KeyValue = KeyValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessInteractingCharacterCombatInputModeChanged
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessInteractingCharacterCombatInputModeChanged(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessInteractingCharacterCombatInputModeChanged");

	Params::SHSearchFocus_ProcessInteractingCharacterCombatInputModeChanged Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessInteractingCharacterReceiveDamage
// (Final, Native, Protected)
// Parameters:
// class USHCharacterPlayCombatComponent*  CombatComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessInteractingCharacterReceiveDamage(class USHCharacterPlayCombatComponent* CombatComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessInteractingCharacterReceiveDamage");

	Params::SHSearchFocus_ProcessInteractingCharacterReceiveDamage Parms{};

	Parms.CombatComp = CombatComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessInteractionGenericGrabbed
// (Final, Native, Protected)
// Parameters:
// class USHInteractionGenericComponent*   Generic                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCharacterPlay*                 Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessInteractionGenericGrabbed(class USHInteractionGenericComponent* Generic, class ASHCharacterPlay* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessInteractionGenericGrabbed");

	Params::SHSearchFocus_ProcessInteractionGenericGrabbed Parms{};

	Parms.Generic = Generic;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessInteractionManagerInitialized");

	Params::SHSearchFocus_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessMoveCharacterToSpotFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessMoveCharacterToSpotFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessMoveCharacterToSpotFinished");

	Params::SHSearchFocus_ProcessMoveCharacterToSpotFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessProximityBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromSweep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessProximityBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessProximityBeginOverlap");

	Params::SHSearchFocus_ProcessProximityBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.FromSweep = FromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSearchFocus.ProcessProximityEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::ProcessProximityEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "ProcessProximityEndOverlap");

	Params::SHSearchFocus_ProcessProximityEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHSearchFocus.SHSearchFocusBlueprintEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHSearchFocus*                   ActorPtr                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSearchFocus::SHSearchFocusBlueprintEvent__DelegateSignature(class ASHSearchFocus* ActorPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "SHSearchFocusBlueprintEvent__DelegateSignature");

	Params::SHSearchFocus_SHSearchFocusBlueprintEvent__DelegateSignature Parms{};

	Parms.ActorPtr = ActorPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSearchFocus.GetCurrentFocusStageIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASHSearchFocus::GetCurrentFocusStageIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "GetCurrentFocusStageIndex");

	Params::SHSearchFocus_GetCurrentFocusStageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSearchFocus.IsInInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHSearchFocus::IsInInteraction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSearchFocus", "IsInInteraction");

	Params::SHSearchFocus_IsInInteraction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSecondaryTargetComponent.AssignRuntimeSecondaryAttackRowName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InRowName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSecondaryTargetComponent::AssignRuntimeSecondaryAttackRowName(const class FName& InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSecondaryTargetComponent", "AssignRuntimeSecondaryAttackRowName");

	Params::SHSecondaryTargetComponent_AssignRuntimeSecondaryAttackRowName Parms{};

	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSecondaryTargetComponent.MarkAsCompleted
// (Final, Native, Public, BlueprintCallable)

void USHSecondaryTargetComponent::MarkAsCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSecondaryTargetComponent", "MarkAsCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSecondaryTargetComponent.SetDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSecondaryTargetComponent::SetDisabled(const bool InDisabled, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSecondaryTargetComponent", "SetDisabled");

	Params::SHSecondaryTargetComponent_SetDisabled Parms{};

	Parms.InDisabled = InDisabled;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSecondaryTargetComponent.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSecondaryTargetComponent::IsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSecondaryTargetComponent", "IsCompleted");

	Params::SHSecondaryTargetComponent_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSecondaryTargetComponent.IsDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSecondaryTargetComponent::IsDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSecondaryTargetComponent", "IsDisabled");

	Params::SHSecondaryTargetComponent_IsDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.ItemsNotificationsVisualizationWidget.Update
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemsNotificationsVisualizationWidget::Update(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemsNotificationsVisualizationWidget", "Update");

	Params::ItemsNotificationsVisualizationWidget_Update Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.GameplayChallengeApply
// (Final, Native, Protected, BlueprintCallable)

void USHSettingOptionsPanel::GameplayChallengeApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GameplayChallengeApply");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSettingOptionsPanel.OnShowInteractionIconVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowInteractionIconVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowInteractionIconVisualization");

	Params::SHSettingOptionsPanel_OnShowInteractionIconVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowItemsNotificationsVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowItemsNotificationsVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowItemsNotificationsVisualization");

	Params::SHSettingOptionsPanel_OnShowItemsNotificationsVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowReticleVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowReticleVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowReticleVisualization");

	Params::SHSettingOptionsPanel_OnShowReticleVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowStruggleIconVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowStruggleIconVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowStruggleIconVisualization");

	Params::SHSettingOptionsPanel_OnShowStruggleIconVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowTranscriptionVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowTranscriptionVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowTranscriptionVisualization");

	Params::SHSettingOptionsPanel_OnShowTranscriptionVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowTraversalIconVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowTraversalIconVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowTraversalIconVisualization");

	Params::SHSettingOptionsPanel_OnShowTraversalIconVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnShowTutorialsVisualization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::OnShowTutorialsVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnShowTutorialsVisualization");

	Params::SHSettingOptionsPanel_OnShowTutorialsVisualization Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateInteractionIconVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateInteractionIconVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateInteractionIconVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateReticleVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateReticleVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateReticleVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateStruggleIconVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateStruggleIconVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateStruggleIconVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateTranscriptionVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateTranscriptionVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateTranscriptionVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateTraversalIconVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateTraversalIconVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateTraversalIconVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateTutorialsVisualization
// (Event, Protected, BlueprintEvent)

void USHSettingOptionsPanel::OnUpdateTutorialsVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateTutorialsVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.ShowItemsNotificationsVisualization
// (Final, Native, Protected)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSettingOptionsPanel::ShowItemsNotificationsVisualization(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "ShowItemsNotificationsVisualization");

	Params::SHSettingOptionsPanel_ShowItemsNotificationsVisualization Parms{};

	Parms.Show_0 = Show_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSettingOptionsPanel.GetInteractionIconData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FInteractionIconData             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInteractionIconData USHSettingOptionsPanel::GetInteractionIconData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetInteractionIconData");

	Params::SHSettingOptionsPanel_GetInteractionIconData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetItemsNotificationsData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSettingOptionsPanel::GetItemsNotificationsData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetItemsNotificationsData");

	Params::SHSettingOptionsPanel_GetItemsNotificationsData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetReticleData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FReticleData                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FReticleData USHSettingOptionsPanel::GetReticleData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetReticleData");

	Params::SHSettingOptionsPanel_GetReticleData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetStruggleIconData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FStruggleInputData               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FStruggleInputData USHSettingOptionsPanel::GetStruggleIconData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetStruggleIconData");

	Params::SHSettingOptionsPanel_GetStruggleIconData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetTranscriptionFontInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo USHSettingOptionsPanel::GetTranscriptionFontInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetTranscriptionFontInfo");

	Params::SHSettingOptionsPanel_GetTranscriptionFontInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetTraversalIconData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTraversalIconData               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTraversalIconData USHSettingOptionsPanel::GetTraversalIconData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetTraversalIconData");

	Params::SHSettingOptionsPanel_GetTraversalIconData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.GetTutorialsData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTutorialsData                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTutorialsData USHSettingOptionsPanel::GetTutorialsData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "GetTutorialsData");

	Params::SHSettingOptionsPanel_GetTutorialsData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSettingOptionsPanel.OnUpdateItemsNotificationsVisualization
// (Event, Protected, BlueprintEvent, Const)

void USHSettingOptionsPanel::OnUpdateItemsNotificationsVisualization() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "OnUpdateItemsNotificationsVisualization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHSettingOptionsPanel.UpdateItemsNotificationsVisualization
// (Final, Native, Protected, Const)

void USHSettingOptionsPanel::UpdateItemsNotificationsVisualization() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingOptionsPanel", "UpdateItemsNotificationsVisualization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSettingsWidget.OnDlcDataUpdatedHandle
// (Final, Native, Public, BlueprintCallable)

void USHSettingsWidget::OnDlcDataUpdatedHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSettingsWidget", "OnDlcDataUpdatedHandle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSimulatedWaterActor.AddEffect
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ESimulatedWaterEffectType               InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InVeclocity                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHSimulatedWaterActor::AddEffect(const ESimulatedWaterEffectType InType, const struct FVector& InPosition, const float InRadius, const struct FVector& InVeclocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "AddEffect");

	Params::SHSimulatedWaterActor_AddEffect Parms{};

	Parms.InType = InType;
	Parms.InPosition = std::move(InPosition);
	Parms.InRadius = InRadius;
	Parms.InVeclocity = std::move(InVeclocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSimulatedWaterActor.SetWaterSimulationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSimulatedWaterActor::SetWaterSimulationEnabled(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "SetWaterSimulationEnabled");

	Params::SHSimulatedWaterActor_SetWaterSimulationEnabled Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSimulatedWaterActor.GetDynamicInstanceMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* ASHSimulatedWaterActor::GetDynamicInstanceMaterial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "GetDynamicInstanceMaterial");

	Params::SHSimulatedWaterActor_GetDynamicInstanceMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSimulatedWaterActor.GetWaterDepthByCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       InCharacter                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHSimulatedWaterActor::GetWaterDepthByCharacter(const class ACharacter* InCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "GetWaterDepthByCharacter");

	Params::SHSimulatedWaterActor_GetWaterDepthByCharacter Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSimulatedWaterActor.GetWaterDepthByLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHSimulatedWaterActor::GetWaterDepthByLocation(const struct FVector& InLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "GetWaterDepthByLocation");

	Params::SHSimulatedWaterActor_GetWaterDepthByLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSimulatedWaterActor.GetWaterSimulationEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHSimulatedWaterActor::GetWaterSimulationEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "GetWaterSimulationEnabled");

	Params::SHSimulatedWaterActor_GetWaterSimulationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSimulatedWaterActor.GetWaterWorldAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASHSimulatedWaterActor::GetWaterWorldAltitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSimulatedWaterActor", "GetWaterWorldAltitude");

	Params::SHSimulatedWaterActor_GetWaterWorldAltitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSlidingDoor.ProcessDoorAlphaChanged
// (Final, Native, Protected)
// Parameters:
// class USHDoorMovementBaseComponent*     MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSlidingDoor::ProcessDoorAlphaChanged(class USHDoorMovementBaseComponent* MovementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoor", "ProcessDoorAlphaChanged");

	Params::SHSlidingDoor_ProcessDoorAlphaChanged Parms{};

	Parms.MovementComponent = MovementComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoor.ProcessInteractionManagerInitialized
// (Final, Native, Protected)
// Parameters:
// class USHInteractionManagerComponent*   Manager                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSlidingDoor::ProcessInteractionManagerInitialized(class USHInteractionManagerComponent* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoor", "ProcessInteractionManagerInitialized");

	Params::SHSlidingDoor_ProcessInteractionManagerInitialized Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoorAnimationsComponent.MovementSnapFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::MovementSnapFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "MovementSnapFinished");

	Params::SHSlidingDoorAnimationsComponent_MovementSnapFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoorAnimationsComponent.OnLockedAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::OnLockedAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "OnLockedAnimEnd");

	Params::SHSlidingDoorAnimationsComponent_OnLockedAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoorAnimationsComponent.OnOpenAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::OnOpenAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "OnOpenAnimEnd");

	Params::SHSlidingDoorAnimationsComponent_OnOpenAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoorAnimationsComponent.PutCharacterOnSpotFinished
// (Final, Native, Protected)
// Parameters:
// bool                                    WasCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::PutCharacterOnSpotFinished(bool WasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "PutCharacterOnSpotFinished");

	Params::SHSlidingDoorAnimationsComponent_PutCharacterOnSpotFinished Parms{};

	Parms.WasCompleted = WasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHSlidingDoorAnimationsComponent.SHSlidingDoorAnimationEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHSlidingDoorAnimationsComponent*Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::SHSlidingDoorAnimationEvent__DelegateSignature(class USHSlidingDoorAnimationsComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "SHSlidingDoorAnimationEvent__DelegateSignature");

	Params::SHSlidingDoorAnimationsComponent_SHSlidingDoorAnimationEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHSlidingDoorAnimationsComponent.SHSlidingDoorAnimationEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHSlidingDoorAnimationsComponent*Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorAnimationsComponent::SHSlidingDoorAnimationEventBP__DelegateSignature(class USHSlidingDoorAnimationsComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorAnimationsComponent", "SHSlidingDoorAnimationEventBP__DelegateSignature");

	Params::SHSlidingDoorAnimationsComponent_SHSlidingDoorAnimationEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSlidingDoorMovementComponent.OverrideDoorAlpha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDoorAlpha                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorMovementComponent::OverrideDoorAlpha(float InDoorAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "OverrideDoorAlpha");

	Params::SHSlidingDoorMovementComponent_OverrideDoorAlpha Parms{};

	Parms.InDoorAlpha = InDoorAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSlidingDoorMovementComponent.RequestPlayCurveMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*                      InCurve                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSlidingDoorMovementComponent::RequestPlayCurveMovement(class UCurveFloat* InCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "RequestPlayCurveMovement");

	Params::SHSlidingDoorMovementComponent_RequestPlayCurveMovement Parms{};

	Parms.InCurve = InCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHSlidingDoorMovementComponent.RequestPlayDefaultOpenMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHSlidingDoorMovementComponent::RequestPlayDefaultOpenMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "RequestPlayDefaultOpenMovement");

	Params::SHSlidingDoorMovementComponent_RequestPlayDefaultOpenMovement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SHProto.SHSlidingDoorMovementComponent.SHSlidingDoorMovementEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHSlidingDoorMovementComponent*  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorMovementComponent::SHSlidingDoorMovementEvent__DelegateSignature(class USHSlidingDoorMovementComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "SHSlidingDoorMovementEvent__DelegateSignature");

	Params::SHSlidingDoorMovementComponent_SHSlidingDoorMovementEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHSlidingDoorMovementComponent.SHSlidingDoorMovementEventBP__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHSlidingDoorMovementComponent*  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHSlidingDoorMovementComponent::SHSlidingDoorMovementEventBP__DelegateSignature(class USHSlidingDoorMovementComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "SHSlidingDoorMovementEventBP__DelegateSignature");

	Params::SHSlidingDoorMovementComponent_SHSlidingDoorMovementEventBP__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHSlidingDoorMovementComponent.StopCurveMovement
// (Final, Native, Public, BlueprintCallable)

void USHSlidingDoorMovementComponent::StopCurveMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSlidingDoorMovementComponent", "StopCurveMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHStealthModeCmbSubcomp.SetAllowStealthModeWhenBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Allow                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHStealthModeCmbSubcomp::SetAllowStealthModeWhenBlocked(const bool Allow, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStealthModeCmbSubcomp", "SetAllowStealthModeWhenBlocked");

	Params::SHStealthModeCmbSubcomp_SetAllowStealthModeWhenBlocked Parms{};

	Parms.Allow = Allow;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHStealthModeCmbSubcomp.SetStealthModeBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Blocked                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHStealthModeCmbSubcomp::SetStealthModeBlocked(const bool Blocked, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStealthModeCmbSubcomp", "SetStealthModeBlocked");

	Params::SHStealthModeCmbSubcomp_SetStealthModeBlocked Parms{};

	Parms.Blocked = Blocked;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHStealthModeCmbSubcomp.IsInStealthMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHStealthModeCmbSubcomp::IsInStealthMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStealthModeCmbSubcomp", "IsInStealthMode");

	Params::SHStealthModeCmbSubcomp_IsInStealthMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStealthModeCmbSubcomp.IsStealthModeBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHStealthModeCmbSubcomp::IsStealthModeBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStealthModeCmbSubcomp", "IsStealthModeBlocked");

	Params::SHStealthModeCmbSubcomp_IsStealthModeBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStealthModeCmbSubcomp.IsStealthModeWhenBlockedAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHStealthModeCmbSubcomp::IsStealthModeWhenBlockedAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStealthModeCmbSubcomp", "IsStealthModeWhenBlockedAllowed");

	Params::SHStealthModeCmbSubcomp_IsStealthModeWhenBlockedAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHStompedDeadEnemiesEndingValueProcessor.ProcessDeadEnemyDamaged
// (Final, Native, Protected)
// Parameters:
// class ASHItemWeaponMelee*               MeleeWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamagedActorContext                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHStompedDeadEnemiesEndingValueProcessor::ProcessDeadEnemyDamaged(class ASHItemWeaponMelee* MeleeWeapon, class AActor* DamagedActorContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStompedDeadEnemiesEndingValueProcessor", "ProcessDeadEnemyDamaged");

	Params::SHStompedDeadEnemiesEndingValueProcessor_ProcessDeadEnemyDamaged Parms{};

	Parms.MeleeWeapon = MeleeWeapon;
	Parms.DamagedActorContext = DamagedActorContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHStompedDeadEnemiesEndingValueProcessor.ProcessPrimaryAttackStarted
// (Final, Native, Protected)
// Parameters:
// class USHMeleeCmbSubcomp*               MeleeCombat                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHStompedDeadEnemiesEndingValueProcessor::ProcessPrimaryAttackStarted(class USHMeleeCmbSubcomp* MeleeCombat, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStompedDeadEnemiesEndingValueProcessor", "ProcessPrimaryAttackStarted");

	Params::SHStompedDeadEnemiesEndingValueProcessor_ProcessPrimaryAttackStarted Parms{};

	Parms.MeleeCombat = MeleeCombat;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHStressCmbSubcomp.ProcessRangedFireSuccess
// (Final, Native, Protected)
// Parameters:
// class USHRangedCmbSubcomp*              RangedCombatSubcomponent                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHItemWeapon*                    ItemWeaponContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHStressCmbSubcomp::ProcessRangedFireSuccess(class USHRangedCmbSubcomp* RangedCombatSubcomponent, class ASHItemWeapon* ItemWeaponContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHStressCmbSubcomp", "ProcessRangedFireSuccess");

	Params::SHStressCmbSubcomp_ProcessRangedFireSuccess Parms{};

	Parms.RangedCombatSubcomponent = RangedCombatSubcomponent;
	Parms.ItemWeaponContext = ItemWeaponContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmVolume.SetColorShape
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           ShapeColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Opacity                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DisplayShadedVolume                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHSwarmVolume::SetColorShape(const struct FColor& ShapeColor, float Opacity, bool DisplayShadedVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmVolume", "SetColorShape");

	Params::SHSwarmVolume_SetColorShape Parms{};

	Parms.ShapeColor = std::move(ShapeColor);
	Parms.Opacity = Opacity;
	Parms.DisplayShadedVolume = DisplayShadedVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHSwarmVolume.IsPointWithin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHSwarmVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHSwarmVolume", "IsPointWithin");

	Params::SHSwarmVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_ComplexCapsuleTraceByChannel
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FRotator                         OutHitRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHalfHeight                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHeightScalar                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleFromHalfHeight                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleToHalfHeight                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InFromLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InToLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InFromRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         InDeltaRotation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCollisionPullbackTime                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         InTraceChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_ComplexCapsuleTraceByChannel(struct FHitResult* OutHitResult, struct FRotator* OutHitRotation, float* OutHitCapsuleHalfHeight, float* OutHitCapsuleHeightScalar, class UObject* InWorldContext, float InCapsuleRadius, float InCapsuleFromHalfHeight, float InCapsuleToHalfHeight, const struct FVector& InFromLocation, const struct FVector& InToLocation, const struct FRotator& InFromRotation, const struct FRotator& InDeltaRotation, float InRotationPrecisionAngle, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, float InCollisionPullbackTime, ETraceTypeQuery InTraceChannel, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_ComplexCapsuleTraceByChannel");

	Params::SHTraceHelperStatics_K2_ComplexCapsuleTraceByChannel Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleFromHalfHeight = InCapsuleFromHalfHeight;
	Parms.InCapsuleToHalfHeight = InCapsuleToHalfHeight;
	Parms.InFromLocation = std::move(InFromLocation);
	Parms.InToLocation = std::move(InToLocation);
	Parms.InFromRotation = std::move(InFromRotation);
	Parms.InDeltaRotation = std::move(InDeltaRotation);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InCollisionPullbackTime = InCollisionPullbackTime;
	Parms.InTraceChannel = InTraceChannel;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutHitRotation != nullptr)
		*OutHitRotation = std::move(Parms.OutHitRotation);

	if (OutHitCapsuleHalfHeight != nullptr)
		*OutHitCapsuleHalfHeight = Parms.OutHitCapsuleHalfHeight;

	if (OutHitCapsuleHeightScalar != nullptr)
		*OutHitCapsuleHeightScalar = Parms.OutHitCapsuleHeightScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_ComplexCapsuleTraceByComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FRotator                         OutHitRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHalfHeight                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHeightScalar                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCapsuleComponent*                InCapsuleComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadiusIncrease                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeightIncrease                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleToHalfHeight                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InToLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InToDeltaRotation                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCollisionPullbackTime                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_ComplexCapsuleTraceByComponent(struct FHitResult* OutHitResult, struct FRotator* OutHitRotation, float* OutHitCapsuleHalfHeight, float* OutHitCapsuleHeightScalar, class UCapsuleComponent* InCapsuleComponent, float InCapsuleRadiusIncrease, float InCapsuleHalfHeightIncrease, float InCapsuleToHalfHeight, const struct FVector& InToLocation, const struct FRotator& InToDeltaRotation, float InRotationPrecisionAngle, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, float InCollisionPullbackTime, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_ComplexCapsuleTraceByComponent");

	Params::SHTraceHelperStatics_K2_ComplexCapsuleTraceByComponent Parms{};

	Parms.InCapsuleComponent = InCapsuleComponent;
	Parms.InCapsuleRadiusIncrease = InCapsuleRadiusIncrease;
	Parms.InCapsuleHalfHeightIncrease = InCapsuleHalfHeightIncrease;
	Parms.InCapsuleToHalfHeight = InCapsuleToHalfHeight;
	Parms.InToLocation = std::move(InToLocation);
	Parms.InToDeltaRotation = std::move(InToDeltaRotation);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InCollisionPullbackTime = InCollisionPullbackTime;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutHitRotation != nullptr)
		*OutHitRotation = std::move(Parms.OutHitRotation);

	if (OutHitCapsuleHalfHeight != nullptr)
		*OutHitCapsuleHalfHeight = Parms.OutHitCapsuleHalfHeight;

	if (OutHitCapsuleHeightScalar != nullptr)
		*OutHitCapsuleHeightScalar = Parms.OutHitCapsuleHeightScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_ComplexCapsuleTraceByProfile
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FRotator                         OutHitRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHalfHeight                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutHitCapsuleHeightScalar                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleFromHalfHeight                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleToHalfHeight                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InFromLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InToLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InFromRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         InDeltaRotation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCollisionPullbackTime                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCollisionProfileName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_ComplexCapsuleTraceByProfile(struct FHitResult* OutHitResult, struct FRotator* OutHitRotation, float* OutHitCapsuleHalfHeight, float* OutHitCapsuleHeightScalar, class UObject* InWorldContext, float InCapsuleRadius, float InCapsuleFromHalfHeight, float InCapsuleToHalfHeight, const struct FVector& InFromLocation, const struct FVector& InToLocation, const struct FRotator& InFromRotation, const struct FRotator& InDeltaRotation, float InRotationPrecisionAngle, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, float InCollisionPullbackTime, class FName InCollisionProfileName, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_ComplexCapsuleTraceByProfile");

	Params::SHTraceHelperStatics_K2_ComplexCapsuleTraceByProfile Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleFromHalfHeight = InCapsuleFromHalfHeight;
	Parms.InCapsuleToHalfHeight = InCapsuleToHalfHeight;
	Parms.InFromLocation = std::move(InFromLocation);
	Parms.InToLocation = std::move(InToLocation);
	Parms.InFromRotation = std::move(InFromRotation);
	Parms.InDeltaRotation = std::move(InDeltaRotation);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InCollisionPullbackTime = InCollisionPullbackTime;
	Parms.InCollisionProfileName = InCollisionProfileName;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutHitRotation != nullptr)
		*OutHitRotation = std::move(Parms.OutHitRotation);

	if (OutHitCapsuleHalfHeight != nullptr)
		*OutHitCapsuleHalfHeight = Parms.OutHitCapsuleHalfHeight;

	if (OutHitCapsuleHeightScalar != nullptr)
		*OutHitCapsuleHeightScalar = Parms.OutHitCapsuleHeightScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_RotateCapsuleOutOfCollisionByChannel
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeight                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationAnchorHeightScalar                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMinimumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMaximumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSnapBackToCollision                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         InTraceChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_RotateCapsuleOutOfCollisionByChannel(struct FHitResult* OutHitResult, struct FVector* OutLocation, struct FRotator* OutRotation, class UObject* InWorldContext, float InCapsuleRadius, float InCapsuleHalfHeight, float InRotationAnchorHeightScalar, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector2D& InPullbackRotationMinimumAngles, const struct FVector2D& InPullbackRotationMaximumAngles, float InRotationPrecisionAngle, bool InSnapBackToCollision, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, ETraceTypeQuery InTraceChannel, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_RotateCapsuleOutOfCollisionByChannel");

	Params::SHTraceHelperStatics_K2_RotateCapsuleOutOfCollisionByChannel Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleHalfHeight = InCapsuleHalfHeight;
	Parms.InRotationAnchorHeightScalar = InRotationAnchorHeightScalar;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InPullbackRotationMinimumAngles = std::move(InPullbackRotationMinimumAngles);
	Parms.InPullbackRotationMaximumAngles = std::move(InPullbackRotationMaximumAngles);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InSnapBackToCollision = InSnapBackToCollision;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InTraceChannel = InTraceChannel;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_RotateCapsuleOutOfCollisionByComponent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UCapsuleComponent*                InCapsuleComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadiusIncrease                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeightIncrease                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationAnchorHeightScalar                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMinimumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMaximumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSnapBackToCollision                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_RotateCapsuleOutOfCollisionByComponent(struct FHitResult* OutHitResult, struct FVector* OutLocation, struct FRotator* OutRotation, class UCapsuleComponent* InCapsuleComponent, float InCapsuleRadiusIncrease, float InCapsuleHalfHeightIncrease, float InRotationAnchorHeightScalar, const struct FVector2D& InPullbackRotationMinimumAngles, const struct FVector2D& InPullbackRotationMaximumAngles, float InRotationPrecisionAngle, bool InSnapBackToCollision, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_RotateCapsuleOutOfCollisionByComponent");

	Params::SHTraceHelperStatics_K2_RotateCapsuleOutOfCollisionByComponent Parms{};

	Parms.InCapsuleComponent = InCapsuleComponent;
	Parms.InCapsuleRadiusIncrease = InCapsuleRadiusIncrease;
	Parms.InCapsuleHalfHeightIncrease = InCapsuleHalfHeightIncrease;
	Parms.InRotationAnchorHeightScalar = InRotationAnchorHeightScalar;
	Parms.InPullbackRotationMinimumAngles = std::move(InPullbackRotationMinimumAngles);
	Parms.InPullbackRotationMaximumAngles = std::move(InPullbackRotationMaximumAngles);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InSnapBackToCollision = InSnapBackToCollision;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_RotateCapsuleOutOfCollisionByProfile
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeight                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationAnchorHeightScalar                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMinimumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InPullbackRotationMaximumAngles                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRotationPrecisionAngle                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSnapBackToCollision                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTraceDensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCollisionProfileName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_RotateCapsuleOutOfCollisionByProfile(struct FHitResult* OutHitResult, struct FVector* OutLocation, struct FRotator* OutRotation, class UObject* InWorldContext, float InCapsuleRadius, float InCapsuleHalfHeight, float InRotationAnchorHeightScalar, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector2D& InPullbackRotationMinimumAngles, const struct FVector2D& InPullbackRotationMaximumAngles, float InRotationPrecisionAngle, bool InSnapBackToCollision, float InTraceDensity, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, class FName InCollisionProfileName, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_RotateCapsuleOutOfCollisionByProfile");

	Params::SHTraceHelperStatics_K2_RotateCapsuleOutOfCollisionByProfile Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleHalfHeight = InCapsuleHalfHeight;
	Parms.InRotationAnchorHeightScalar = InRotationAnchorHeightScalar;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InPullbackRotationMinimumAngles = std::move(InPullbackRotationMinimumAngles);
	Parms.InPullbackRotationMaximumAngles = std::move(InPullbackRotationMaximumAngles);
	Parms.InRotationPrecisionAngle = InRotationPrecisionAngle;
	Parms.InSnapBackToCollision = InSnapBackToCollision;
	Parms.InTraceDensity = InTraceDensity;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InCollisionProfileName = InCollisionProfileName;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_TraceSphereAlongCapsuleByChannel
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   OutSignedCollisionDistanceScalar                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            InRotation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeight                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleAnchorHeightScalar                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         InTraceChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_TraceSphereAlongCapsuleByChannel(struct FHitResult* OutHitResult, float* OutSignedCollisionDistanceScalar, class UObject* InWorldContext, const struct FVector& InLocation, const struct FQuat& InRotation, float InCapsuleRadius, float InCapsuleHalfHeight, float InCapsuleAnchorHeightScalar, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, ETraceTypeQuery InTraceChannel, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_TraceSphereAlongCapsuleByChannel");

	Params::SHTraceHelperStatics_K2_TraceSphereAlongCapsuleByChannel Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleHalfHeight = InCapsuleHalfHeight;
	Parms.InCapsuleAnchorHeightScalar = InCapsuleAnchorHeightScalar;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InTraceChannel = InTraceChannel;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutSignedCollisionDistanceScalar != nullptr)
		*OutSignedCollisionDistanceScalar = Parms.OutSignedCollisionDistanceScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_TraceSphereAlongCapsuleByComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   OutSignedCollisionDistanceScalar                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCapsuleComponent*                InCapsuleComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadiusIncrease                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeightIncrease                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleAnchorHeightScalar                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         InTraceChannel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_TraceSphereAlongCapsuleByComponent(struct FHitResult* OutHitResult, float* OutSignedCollisionDistanceScalar, class UCapsuleComponent* InCapsuleComponent, float InCapsuleRadiusIncrease, float InCapsuleHalfHeightIncrease, float InCapsuleAnchorHeightScalar, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, ETraceTypeQuery InTraceChannel, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_TraceSphereAlongCapsuleByComponent");

	Params::SHTraceHelperStatics_K2_TraceSphereAlongCapsuleByComponent Parms{};

	Parms.InCapsuleComponent = InCapsuleComponent;
	Parms.InCapsuleRadiusIncrease = InCapsuleRadiusIncrease;
	Parms.InCapsuleHalfHeightIncrease = InCapsuleHalfHeightIncrease;
	Parms.InCapsuleAnchorHeightScalar = InCapsuleAnchorHeightScalar;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InTraceChannel = InTraceChannel;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutSignedCollisionDistanceScalar != nullptr)
		*OutSignedCollisionDistanceScalar = Parms.OutSignedCollisionDistanceScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraceHelperStatics.K2_TraceSphereAlongCapsuleByProfile
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   OutSignedCollisionDistanceScalar                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            InRotation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleHalfHeight                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCapsuleAnchorHeightScalar                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTopTraceHeightScalar                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBottomTraceHeightScalar                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCollisionProfileName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTraceComplex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   InActorsToIgnore                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InDrawDebugDuration                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraceHelperStatics::K2_TraceSphereAlongCapsuleByProfile(struct FHitResult* OutHitResult, float* OutSignedCollisionDistanceScalar, class UObject* InWorldContext, const struct FVector& InLocation, const struct FQuat& InRotation, float InCapsuleRadius, float InCapsuleHalfHeight, float InCapsuleAnchorHeightScalar, float InTopTraceHeightScalar, float InBottomTraceHeightScalar, class FName InCollisionProfileName, bool InTraceComplex, const TArray<class AActor*>& InActorsToIgnore, float InDrawDebugDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHTraceHelperStatics", "K2_TraceSphereAlongCapsuleByProfile");

	Params::SHTraceHelperStatics_K2_TraceSphereAlongCapsuleByProfile Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleHalfHeight = InCapsuleHalfHeight;
	Parms.InCapsuleAnchorHeightScalar = InCapsuleAnchorHeightScalar;
	Parms.InTopTraceHeightScalar = InTopTraceHeightScalar;
	Parms.InBottomTraceHeightScalar = InBottomTraceHeightScalar;
	Parms.InCollisionProfileName = InCollisionProfileName;
	Parms.InTraceComplex = InTraceComplex;
	Parms.InActorsToIgnore = std::move(InActorsToIgnore);
	Parms.InDrawDebugDuration = InDrawDebugDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutSignedCollisionDistanceScalar != nullptr)
		*OutSignedCollisionDistanceScalar = Parms.OutSignedCollisionDistanceScalar;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraversalClimbAnimInstance.BroadcastEndOfTraversal
// (Final, Native, Protected, BlueprintCallable)

void USHTraversalClimbAnimInstance::BroadcastEndOfTraversal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbAnimInstance", "BroadcastEndOfTraversal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalClimbAnimInstance.SetupEventBP
// (Event, Public, BlueprintEvent)

void USHTraversalClimbAnimInstance::SetupEventBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbAnimInstance", "SetupEventBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SHProto.SHTraversalClimbAnimInstance.IsOnLowerFloor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHTraversalClimbAnimInstance::IsOnLowerFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalClimbAnimInstance", "IsOnLowerFloor");

	Params::SHTraversalClimbAnimInstance_IsOnLowerFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHTraversalIconBaseManager.ProcessObstacleProximityFoundCharacterEvent
// (Final, Native, Protected)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalIconBaseManager::ProcessObstacleProximityFoundCharacterEvent(class USHTraversalBaseComponent* InTraversalComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "ProcessObstacleProximityFoundCharacterEvent");

	Params::SHTraversalIconBaseManager_ProcessObstacleProximityFoundCharacterEvent Parms{};

	Parms.InTraversalComponent = InTraversalComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalIconBaseManager.ProcessObstacleProximityLostCharacterEvent
// (Final, Native, Protected)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalIconBaseManager::ProcessObstacleProximityLostCharacterEvent(class USHTraversalBaseComponent* InTraversalComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "ProcessObstacleProximityLostCharacterEvent");

	Params::SHTraversalIconBaseManager_ProcessObstacleProximityLostCharacterEvent Parms{};

	Parms.InTraversalComponent = InTraversalComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalIconBaseManager.ProcessObstacleTraversalUnavailableChangedEvent
// (Final, Native, Protected)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalIconBaseManager::ProcessObstacleTraversalUnavailableChangedEvent(class USHTraversalBaseComponent* InTraversalComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "ProcessObstacleTraversalUnavailableChangedEvent");

	Params::SHTraversalIconBaseManager_ProcessObstacleTraversalUnavailableChangedEvent Parms{};

	Parms.InTraversalComponent = InTraversalComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalIconBaseManager.RegisterRequisites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USHTraversalBaseComponent*        InTraversalComponent                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHInteractionIconComponent*      InIconComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalIconBaseManager::RegisterRequisites(class USHTraversalBaseComponent* InTraversalComponent, class USHInteractionIconComponent* InIconComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "RegisterRequisites");

	Params::SHTraversalIconBaseManager_RegisterRequisites Parms{};

	Parms.InTraversalComponent = InTraversalComponent;
	Parms.InIconComponent = InIconComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalIconBaseManager.ResetForcedIconState
// (Final, Native, Public, BlueprintCallable)

void USHTraversalIconBaseManager::ResetForcedIconState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "ResetForcedIconState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalIconBaseManager.SetForcedIconState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESHInteractionIconState                 InForcedState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalIconBaseManager::SetForcedIconState(ESHInteractionIconState InForcedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalIconBaseManager", "SetForcedIconState");

	Params::SHTraversalIconBaseManager_SetForcedIconState Parms{};

	Parms.InForcedState = InForcedState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalCustomObstacle.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class USplineComponent*>         InEdgeSplines                                          (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASHTraversalCustomObstacle::Initialize(const TArray<class USplineComponent*>& InEdgeSplines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalCustomObstacle", "Initialize");

	Params::SHTraversalCustomObstacle_Initialize Parms{};

	Parms.InEdgeSplines = std::move(InEdgeSplines);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.AddFriendActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::AddFriendActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "AddFriendActor");

	Params::SHTraversalObstacleComponent_AddFriendActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.ProcessTraversalAnimBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::ProcessTraversalAnimBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "ProcessTraversalAnimBlendingOut");

	Params::SHTraversalObstacleComponent_ProcessTraversalAnimBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.ProcessTraversalAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::ProcessTraversalAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "ProcessTraversalAnimEnd");

	Params::SHTraversalObstacleComponent_ProcessTraversalAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.RegisterAboveFlashlightLookAtComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InLookAtComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::RegisterAboveFlashlightLookAtComponent(class USceneComponent* InLookAtComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "RegisterAboveFlashlightLookAtComponent");

	Params::SHTraversalObstacleComponent_RegisterAboveFlashlightLookAtComponent Parms{};

	Parms.InLookAtComponent = InLookAtComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.RegisterBelowFlashlightLookAtComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  InLookAtComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::RegisterBelowFlashlightLookAtComponent(class USceneComponent* InLookAtComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "RegisterBelowFlashlightLookAtComponent");

	Params::SHTraversalObstacleComponent_RegisterBelowFlashlightLookAtComponent Parms{};

	Parms.InLookAtComponent = InLookAtComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleComponent.RemoveFriendActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::RemoveFriendActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "RemoveFriendActor");

	Params::SHTraversalObstacleComponent_RemoveFriendActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHTraversalObstacleComponent.SHObstacleComponentEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESHDetectionSide                        DetectionSide                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::SHObstacleComponentEvent__DelegateSignature(ESHDetectionSide DetectionSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "SHObstacleComponentEvent__DelegateSignature");

	Params::SHTraversalObstacleComponent_SHObstacleComponentEvent__DelegateSignature Parms{};

	Parms.DetectionSide = DetectionSide;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalObstacleComponent.SHObstacleEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalObstacleComponent*    ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::SHObstacleEvent__DelegateSignature(class USHTraversalObstacleComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "SHObstacleEvent__DelegateSignature");

	Params::SHTraversalObstacleComponent_SHObstacleEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalObstacleComponent.SHObstacleWithCameraAnimExeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalObstacleComponent*    ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASHCameraAnimationExecutive*      CameraAnimExe                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::SHObstacleWithCameraAnimExeEvent__DelegateSignature(class USHTraversalObstacleComponent* ComponentPtr, class ASHCameraAnimationExecutive* CameraAnimExe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "SHObstacleWithCameraAnimExeEvent__DelegateSignature");

	Params::SHTraversalObstacleComponent_SHObstacleWithCameraAnimExeEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.CameraAnimExe = CameraAnimExe;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHTraversalObstacleComponent.SHObstacleWithSideEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalObstacleComponent*    ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHDetectionSide                        DetectionSide                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleComponent::SHObstacleWithSideEvent__DelegateSignature(class USHTraversalObstacleComponent* ComponentPtr, ESHDetectionSide DetectionSide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleComponent", "SHObstacleWithSideEvent__DelegateSignature");

	Params::SHTraversalObstacleComponent_SHObstacleWithSideEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;
	Parms.DetectionSide = DetectionSide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalObstacleExtendedComponent.ProcessMovementSnapFinish
// (Final, Native, Protected)
// Parameters:
// bool                                    bWasCompleted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleExtendedComponent::ProcessMovementSnapFinish(bool bWasCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleExtendedComponent", "ProcessMovementSnapFinish");

	Params::SHTraversalObstacleExtendedComponent_ProcessMovementSnapFinish Parms{};

	Parms.bWasCompleted = bWasCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleExtendedComponent.ProcessTraversalAnimBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleExtendedComponent::ProcessTraversalAnimBlendingOut(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleExtendedComponent", "ProcessTraversalAnimBlendingOut");

	Params::SHTraversalObstacleExtendedComponent_ProcessTraversalAnimBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHTraversalObstacleExtendedComponent.ProcesTraversalAnimEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESHAnimEndType                          AnimEndType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleExtendedComponent::ProcesTraversalAnimEnd(class UAnimMontage* Montage, ESHAnimEndType AnimEndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleExtendedComponent", "ProcesTraversalAnimEnd");

	Params::SHTraversalObstacleExtendedComponent_ProcesTraversalAnimEnd Parms{};

	Parms.Montage = Montage;
	Parms.AnimEndType = AnimEndType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHTraversalObstacleExtendedComponent.SHObstacleExtendedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHTraversalObstacleExtendedComponent*ComponentPtr                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHTraversalObstacleExtendedComponent::SHObstacleExtendedEvent__DelegateSignature(class USHTraversalObstacleExtendedComponent* ComponentPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleExtendedComponent", "SHObstacleExtendedEvent__DelegateSignature");

	Params::SHTraversalObstacleExtendedComponent_SHObstacleExtendedEvent__DelegateSignature Parms{};

	Parms.ComponentPtr = ComponentPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHTraversalObstacleExtendedComponent.GetCurrentStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESHTraversalObstacleExtendedStage       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESHTraversalObstacleExtendedStage USHTraversalObstacleExtendedComponent::GetCurrentStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHTraversalObstacleExtendedComponent", "GetCurrentStage");

	Params::SHTraversalObstacleExtendedComponent_GetCurrentStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHUfoEndingFactor.SHDebug_Character_Endings_Factors_UFOEnding_DrawDebug
// (Final, Exec, Native, Public)

void USHUfoEndingFactor::SHDebug_Character_Endings_Factors_UFOEnding_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUfoEndingFactor", "SHDebug_Character_Endings_Factors_UFOEnding_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHUfoEndingFactor.SHDebug_Character_Endings_Factors_UFOEnding_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InInteractionIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHUfoEndingFactor::SHDebug_Character_Endings_Factors_UFOEnding_SetDebugValue(int32 InInteractionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUfoEndingFactor", "SHDebug_Character_Endings_Factors_UFOEnding_SetDebugValue");

	Params::SHUfoEndingFactor_SHDebug_Character_Endings_Factors_UFOEnding_SetDebugValue Parms{};

	Parms.InInteractionIndex = InInteractionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHUfoEndingInteractionArea.IsCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHUfoEndingInteractionArea::IsCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUfoEndingInteractionArea", "IsCompleted");

	Params::SHUfoEndingInteractionArea_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHUfoEndingInteractionArea.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Enabler                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHUfoEndingInteractionArea::SetEnabled(const class UObject* Enabler, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUfoEndingInteractionArea", "SetEnabled");

	Params::SHUfoEndingInteractionArea_SetEnabled Parms{};

	Parms.Enabler = Enabler;
	Parms.InEnabled = InEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHUserButton.BP_OnLockedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHUserButton::BP_OnLockedChanged(bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUserButton", "BP_OnLockedChanged");

	Params::SHUserButton_BP_OnLockedChanged Parms{};

	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHUserButton.SetDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void USHUserButton::SetDisplayName(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUserButton", "SetDisplayName");

	Params::SHUserButton_SetDisplayName Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHUserButton.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsLocked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHUserButton::SetLocked(bool bInIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUserButton", "SetLocked");

	Params::SHUserButton_SetLocked Parms{};

	Parms.bInIsLocked = bInIsLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHUserButton.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHUserButton::IsLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHUserButton", "IsLocked");

	Params::SHUserButton_IsLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionFinishBegin
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionFinishBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionFinishBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionFinished
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionFirstPhaseEnded
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionFirstPhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionFirstPhaseEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionFirstPhaseStarted
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionFirstPhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionFirstPhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionSecondPhaseEnded
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionSecondPhaseEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionSecondPhaseEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionSecondPhaseStarted
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionSecondPhaseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionSecondPhaseStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveAnimInstance.ApplyInteractionStarted
// (Final, Native, Protected, BlueprintCallable)

void USHValveAnimInstance::ApplyInteractionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "ApplyInteractionStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHValveAnimInstance.SHValveAnimInstanceEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHValveAnimInstance*             AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHValveAnimInstance::SHValveAnimInstanceEvent__DelegateSignature(class USHValveAnimInstance* AnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "SHValveAnimInstanceEvent__DelegateSignature");

	Params::SHValveAnimInstance_SHValveAnimInstanceEvent__DelegateSignature Parms{};

	Parms.AnimInst = AnimInst;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHValveAnimInstance.SHValveAnimInstanceProgressPhaseChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHValveAnimInstance*             AnimInst                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PhaseNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasStarted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHValveAnimInstance::SHValveAnimInstanceProgressPhaseChangeEvent__DelegateSignature(class USHValveAnimInstance* AnimInst, int32 PhaseNumber, bool bHasStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "SHValveAnimInstanceProgressPhaseChangeEvent__DelegateSignature");

	Params::SHValveAnimInstance_SHValveAnimInstanceProgressPhaseChangeEvent__DelegateSignature Parms{};

	Parms.AnimInst = AnimInst;
	Parms.PhaseNumber = PhaseNumber;
	Parms.bHasStarted = bHasStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHValveAnimInstance.CanReceiveInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHValveAnimInstance::CanReceiveInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveAnimInstance", "CanReceiveInput");

	Params::SHValveAnimInstance_CanReceiveInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHValveWithRequiredItem.ProcessFocusableItemSelectedEvent
// (Final, Native, Protected)
// Parameters:
// class FName                             InItemName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValveWithRequiredItem::ProcessFocusableItemSelectedEvent(class FName InItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveWithRequiredItem", "ProcessFocusableItemSelectedEvent");

	Params::SHValveWithRequiredItem_ProcessFocusableItemSelectedEvent Parms{};

	Parms.InItemName = InItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHValveWithRequiredItem.ProcessRequiredItemAdded
// (Event, Protected, BlueprintEvent)

void ASHValveWithRequiredItem::ProcessRequiredItemAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveWithRequiredItem", "ProcessRequiredItemAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SHProto.SHValveWithRequiredItem.ValveRequiredItemEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASHValveWithRequiredItem*         ValveWithRequiredItem                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHValveWithRequiredItem::ValveRequiredItemEvent__DelegateSignature(class ASHValveWithRequiredItem* ValveWithRequiredItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveWithRequiredItem", "ValveRequiredItemEvent__DelegateSignature");

	Params::SHValveWithRequiredItem_ValveRequiredItemEvent__DelegateSignature Parms{};

	Parms.ValveWithRequiredItem = ValveWithRequiredItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHValveWithRequiredItem.HasAddedRequiredItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHValveWithRequiredItem::HasAddedRequiredItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHValveWithRequiredItem", "HasAddedRequiredItem");

	Params::SHValveWithRequiredItem_HasAddedRequiredItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHVehicleComponent.ClearAccumulatedMovement
// (Final, Native, Public, BlueprintCallable)

void USHVehicleComponent::ClearAccumulatedMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "ClearAccumulatedMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHVehicleComponent.GetInInstant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHVehicleSpotComponent*          PassengerSpot                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHVehicleComponent::GetInInstant(class ACharacter* InteractingCharacter, class USHVehicleSpotComponent* PassengerSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "GetInInstant");

	Params::SHVehicleComponent_GetInInstant Parms{};

	Parms.InteractingCharacter = InteractingCharacter;
	Parms.PassengerSpot = PassengerSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHVehicleComponent.GetOutInstant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHVehicleComponent::GetOutInstant(class ACharacter* InteractingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "GetOutInstant");

	Params::SHVehicleComponent_GetOutInstant Parms{};

	Parms.InteractingCharacter = InteractingCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHVehicleComponent.Initialize
// (Final, Native, Public, BlueprintCallable)

void USHVehicleComponent::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SHProto.SHVehicleComponent.SHVehicleEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHVehicleComponent*              VehiclePtr                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHVehicleComponent::SHVehicleEvent__DelegateSignature(class USHVehicleComponent* VehiclePtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "SHVehicleEvent__DelegateSignature");

	Params::SHVehicleComponent_SHVehicleEvent__DelegateSignature Parms{};

	Parms.VehiclePtr = VehiclePtr;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SHProto.SHVehicleComponent.SHVehicleSpotEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USHVehicleComponent*              VehiclePtr                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USHVehicleSpotComponent*          VehicleSpotPtr                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHVehicleComponent::SHVehicleSpotEvent__DelegateSignature(class USHVehicleComponent* VehiclePtr, class USHVehicleSpotComponent* VehicleSpotPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "SHVehicleSpotEvent__DelegateSignature");

	Params::SHVehicleComponent_SHVehicleSpotEvent__DelegateSignature Parms{};

	Parms.VehiclePtr = VehiclePtr;
	Parms.VehicleSpotPtr = VehicleSpotPtr;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SHProto.SHVehicleComponent.TeleportVehicle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InWorldLoc                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InWorldRot                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USHVehicleComponent::TeleportVehicle(const struct FVector& InWorldLoc, const struct FRotator& InWorldRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "TeleportVehicle");

	Params::SHVehicleComponent_TeleportVehicle Parms{};

	Parms.InWorldLoc = std::move(InWorldLoc);
	Parms.InWorldRot = std::move(InWorldRot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHVehicleComponent.GetMovementProcessor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USHVehicleMovementProcessor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USHVehicleMovementProcessor* USHVehicleComponent::GetMovementProcessor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleComponent", "GetMovementProcessor");

	Params::SHVehicleComponent_GetMovementProcessor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHVehicleSpotComponent.GetInteractingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharacter* USHVehicleSpotComponent::GetInteractingCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHVehicleSpotComponent", "GetInteractingCharacter");

	Params::SHVehicleSpotComponent_GetInteractingCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterInteractionComponent.AddSimpleWaterInteraction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Requester                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSHXWaterIntersection            InWaterIntersection                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHWaterInteractionComponent::AddSimpleWaterInteraction(const class UObject* Requester, const struct FSHXWaterIntersection& InWaterIntersection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SHWaterInteractionComponent", "AddSimpleWaterInteraction");

	Params::SHWaterInteractionComponent_AddSimpleWaterInteraction Parms{};

	Parms.Requester = Requester;
	Parms.InWaterIntersection = std::move(InWaterIntersection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWaterInteractionComponent.AddWaterInteraction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSHXWaterIntersection            InWaterIntersection                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USHWaterInteractionComponent::AddWaterInteraction(const struct FSHXWaterIntersection& InWaterIntersection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterInteractionComponent", "AddWaterInteraction");

	Params::SHWaterInteractionComponent_AddWaterInteraction Parms{};

	Parms.InWaterIntersection = std::move(InWaterIntersection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWaterInteractionComponent.SetWaterInteractionBlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsBlock                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWaterInteractionComponent::SetWaterInteractionBlocked(const bool IsBlock, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterInteractionComponent", "SetWaterInteractionBlocked");

	Params::SHWaterInteractionComponent_SetWaterInteractionBlocked Parms{};

	Parms.IsBlock = IsBlock;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWaterInteractionComponent.GetCurrentIntersections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FSHXWaterIntersection>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FSHXWaterIntersection> USHWaterInteractionComponent::GetCurrentIntersections() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterInteractionComponent", "GetCurrentIntersections");

	Params::SHWaterInteractionComponent_GetCurrentIntersections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterInteractionComponent.IsWaterInteractionBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWaterInteractionComponent::IsWaterInteractionBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterInteractionComponent", "IsWaterInteractionBlocked");

	Params::SHWaterInteractionComponent_IsWaterInteractionBlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterInteractionComponent.IsWaterInteractionBlockedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWaterInteractionComponent::IsWaterInteractionBlockedBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterInteractionComponent", "IsWaterInteractionBlockedBy");

	Params::SHWaterInteractionComponent_IsWaterInteractionBlockedBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterManagerComponent.SHDebug_WaterInteraction_DrawDebug
// (Final, Exec, Native, Public)

void USHWaterManagerComponent::SHDebug_WaterInteraction_DrawDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterManagerComponent", "SHDebug_WaterInteraction_DrawDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWaterManagerComponent.GetSimulatingWaterVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASHWaterVolume*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASHWaterVolume* USHWaterManagerComponent::GetSimulatingWaterVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterManagerComponent", "GetSimulatingWaterVolume");

	Params::SHWaterManagerComponent_GetSimulatingWaterVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterVolume.DisableRuntimeSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDisable                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASHWaterVolume::DisableRuntimeSimulation(const bool IsDisable, const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterVolume", "DisableRuntimeSimulation");

	Params::SHWaterVolume_DisableRuntimeSimulation Parms{};

	Parms.IsDisable = IsDisable;
	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWaterVolume.IsPointWithin
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHWaterVolume::IsPointWithin(const struct FVector& Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterVolume", "IsPointWithin");

	Params::SHWaterVolume_IsPointWithin Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterVolume.IsRuntimeSimulationDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHWaterVolume::IsRuntimeSimulationDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterVolume", "IsRuntimeSimulationDisabled");

	Params::SHWaterVolume_IsRuntimeSimulationDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWaterVolume.IsRuntimeSimulationDisabledBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASHWaterVolume::IsRuntimeSimulationDisabledBy(const class UObject* Object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWaterVolume", "IsRuntimeSimulationDisabledBy");

	Params::SHWaterVolume_IsRuntimeSimulationDisabledBy Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHWeaponAnimInstance.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USHWeaponAnimInstance::IsAiming() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWeaponAnimInstance", "IsAiming");

	Params::SHWeaponAnimInstance_IsAiming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SHProto.SHRangedWeaponAnimInterface.SetOutOfAmmo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ISHRangedWeaponAnimInterface::SetOutOfAmmo(bool InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHRangedWeaponAnimInterface", "SetOutOfAmmo");

	Params::SHRangedWeaponAnimInterface_SetOutOfAmmo Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWestCityFWInteractedAllAtHeavensNightEndingFactor.SHDebug_Character_Endings_WestCityFWInteractedAllAtHeavensNightEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWestCityFWInteractedAllAtHeavensNightEndingFactor::SHDebug_Character_Endings_WestCityFWInteractedAllAtHeavensNightEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWestCityFWInteractedAllAtHeavensNightEndingFactor", "SHDebug_Character_Endings_WestCityFWInteractedAllAtHeavensNightEndingFactor_SetDebugValue");

	Params::SHWestCityFWInteractedAllAtHeavensNightEndingFactor_SHDebug_Character_Endings_WestCityFWInteractedAllAtHeavensNightEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWestCityFWMariaInteractionsEndingFactor.SHDebug_Character_Endings_WestCityFWMariaInteractionsEndingFactor_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWestCityFWMariaInteractionsEndingFactor::SHDebug_Character_Endings_WestCityFWMariaInteractionsEndingFactor_SetDebugValue(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWestCityFWMariaInteractionsEndingFactor", "SHDebug_Character_Endings_WestCityFWMariaInteractionsEndingFactor_SetDebugValue");

	Params::SHWestCityFWMariaInteractionsEndingFactor_SHDebug_Character_Endings_WestCityFWMariaInteractionsEndingFactor_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SHProto.SHWoodsideCoinPuzzleEndingFactor.SHDebug_Character_Endings_Factors_WoodsideCoinPuzzle_SetDebugValue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USHWoodsideCoinPuzzleEndingFactor::SHDebug_Character_Endings_Factors_WoodsideCoinPuzzle_SetDebugValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SHWoodsideCoinPuzzleEndingFactor", "SHDebug_Character_Endings_Factors_WoodsideCoinPuzzle_SetDebugValue");

	Params::SHWoodsideCoinPuzzleEndingFactor_SHDebug_Character_Endings_Factors_WoodsideCoinPuzzle_SetDebugValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

