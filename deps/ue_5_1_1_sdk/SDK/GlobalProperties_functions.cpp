#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalProperties

#include "Basic.hpp"

#include "GlobalProperties_classes.hpp"
#include "GlobalProperties_parameters.hpp"


namespace SDK
{

// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedBools
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleBool>NewBools                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::AddObservedBools(const TArray<struct FGlobalPropertyHandleBool>& NewBools)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "AddObservedBools");

	Params::GlobalPropertiesEventsComponent_AddObservedBools Parms{};

	Parms.NewBools = std::move(NewBools);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedFloats
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleFloat>NewFloats                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::AddObservedFloats(const TArray<struct FGlobalPropertyHandleFloat>& NewFloats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "AddObservedFloats");

	Params::GlobalPropertiesEventsComponent_AddObservedFloats Parms{};

	Parms.NewFloats = std::move(NewFloats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedInts
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleInt> NewInts                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::AddObservedInts(const TArray<struct FGlobalPropertyHandleInt>& NewInts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "AddObservedInts");

	Params::GlobalPropertiesEventsComponent_AddObservedInts Parms{};

	Parms.NewInts = std::move(NewInts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.BoolValueChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UGlobalPropertiesEventsComponent* Events                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleBool        Property                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::BoolValueChanged__DelegateSignature(class UGlobalPropertiesEventsComponent* Events, const struct FGlobalPropertyHandleBool& Property, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "BoolValueChanged__DelegateSignature");

	Params::GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature Parms{};

	Parms.Events = Events;
	Parms.Property = std::move(Property);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.FloatValueChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UGlobalPropertiesEventsComponent* Events                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Property                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::FloatValueChanged__DelegateSignature(class UGlobalPropertiesEventsComponent* Events, const struct FGlobalPropertyHandleFloat& Property, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "FloatValueChanged__DelegateSignature");

	Params::GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature Parms{};

	Parms.Events = Events;
	Parms.Property = std::move(Property);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.IntValueChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UGlobalPropertiesEventsComponent* Events                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Property                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::IntValueChanged__DelegateSignature(class UGlobalPropertiesEventsComponent* Events, const struct FGlobalPropertyHandleInt& Property, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "IntValueChanged__DelegateSignature");

	Params::GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature Parms{};

	Parms.Events = Events;
	Parms.Property = std::move(Property);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedBools
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleBool>NewBools                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::SetObservedBools(const TArray<struct FGlobalPropertyHandleBool>& NewBools)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "SetObservedBools");

	Params::GlobalPropertiesEventsComponent_SetObservedBools Parms{};

	Parms.NewBools = std::move(NewBools);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedFloats
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleFloat>NewFloats                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::SetObservedFloats(const TArray<struct FGlobalPropertyHandleFloat>& NewFloats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "SetObservedFloats");

	Params::GlobalPropertiesEventsComponent_SetObservedFloats Parms{};

	Parms.NewFloats = std::move(NewFloats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedInts
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGlobalPropertyHandleInt> NewInts                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGlobalPropertiesEventsComponent::SetObservedInts(const TArray<struct FGlobalPropertyHandleInt>& NewInts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalPropertiesEventsComponent", "SetObservedInts");

	Params::GlobalPropertiesEventsComponent_SetObservedInts Parms{};

	Parms.NewInts = std::move(NewInts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.AddToGlobalFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGlobalPropertiesStaticLibrary::AddToGlobalFloat(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "AddToGlobalFloat");

	Params::GlobalPropertiesStaticLibrary_AddToGlobalFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.AddToGlobalInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGlobalPropertiesStaticLibrary::AddToGlobalInt(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "AddToGlobalInt");

	Params::GlobalPropertiesStaticLibrary_AddToGlobalInt Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.DivideGlobalFloatBy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGlobalPropertiesStaticLibrary::DivideGlobalFloatBy(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "DivideGlobalFloatBy");

	Params::GlobalPropertiesStaticLibrary_DivideGlobalFloatBy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.DivideGlobalIntBy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGlobalPropertiesStaticLibrary::DivideGlobalIntBy(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "DivideGlobalIntBy");

	Params::GlobalPropertiesStaticLibrary_DivideGlobalIntBy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleBool        Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGlobalPropertiesStaticLibrary::GetGlobalBool(class UObject* WorldContextObject, const struct FGlobalPropertyHandleBool& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "GetGlobalBool");

	Params::GlobalPropertiesStaticLibrary_GetGlobalBool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGlobalPropertiesStaticLibrary::GetGlobalFloat(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "GetGlobalFloat");

	Params::GlobalPropertiesStaticLibrary_GetGlobalFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGlobalPropertiesStaticLibrary::GetGlobalInt(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "GetGlobalInt");

	Params::GlobalPropertiesStaticLibrary_GetGlobalInt Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.MultiplyGlobalFloatBy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGlobalPropertiesStaticLibrary::MultiplyGlobalFloatBy(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "MultiplyGlobalFloatBy");

	Params::GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.MultiplyGlobalIntBy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGlobalPropertiesStaticLibrary::MultiplyGlobalIntBy(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "MultiplyGlobalIntBy");

	Params::GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.ResetGlobalProperties
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGlobalPropertiesSheet*           Sheet                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesStaticLibrary::ResetGlobalProperties(class UObject* WorldContextObject, const class UGlobalPropertiesSheet* Sheet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "ResetGlobalProperties");

	Params::GlobalPropertiesStaticLibrary_ResetGlobalProperties Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Sheet = Sheet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleBool        Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesStaticLibrary::SetGlobalBool(class UObject* WorldContextObject, const struct FGlobalPropertyHandleBool& Handle, const bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "SetGlobalBool");

	Params::GlobalPropertiesStaticLibrary_SetGlobalBool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesStaticLibrary::SetGlobalFloat(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle, const float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "SetGlobalFloat");

	Params::GlobalPropertiesStaticLibrary_SetGlobalFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGlobalPropertiesStaticLibrary::SetGlobalInt(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle, const int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "SetGlobalInt");

	Params::GlobalPropertiesStaticLibrary_SetGlobalInt Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.SubtractFromGlobalFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleFloat       Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGlobalPropertiesStaticLibrary::SubtractFromGlobalFloat(class UObject* WorldContextObject, const struct FGlobalPropertyHandleFloat& Handle, const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "SubtractFromGlobalFloat");

	Params::GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.SubtractFromGlobalInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleInt         Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGlobalPropertiesStaticLibrary::SubtractFromGlobalInt(class UObject* WorldContextObject, const struct FGlobalPropertyHandleInt& Handle, const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "SubtractFromGlobalInt");

	Params::GlobalPropertiesStaticLibrary_SubtractFromGlobalInt Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GlobalProperties.GlobalPropertiesStaticLibrary.ToggleGlobalBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGlobalPropertyHandleBool        Handle                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGlobalPropertiesStaticLibrary::ToggleGlobalBool(class UObject* WorldContextObject, const struct FGlobalPropertyHandleBool& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalPropertiesStaticLibrary", "ToggleGlobalBool");

	Params::GlobalPropertiesStaticLibrary_ToggleGlobalBool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

