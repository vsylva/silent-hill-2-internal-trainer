#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineMeshEx

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct SplineMeshEx.MeshSegmentInfo
// 0x0090 (0x0090 - 0x0000)
struct FMeshSegmentInfo final
{
public:
	class UStaticMesh*                            Shape;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalTransform;                                    // 0x0010(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CollisionLocalOffset;                              // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MeshSpacing;                                       // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthOfMesh;                                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMeshSegmentInfo) == 0x000010, "Wrong alignment on FMeshSegmentInfo");
static_assert(sizeof(FMeshSegmentInfo) == 0x000090, "Wrong size on FMeshSegmentInfo");
static_assert(offsetof(FMeshSegmentInfo, Shape) == 0x000000, "Member 'FMeshSegmentInfo::Shape' has a wrong offset!");
static_assert(offsetof(FMeshSegmentInfo, LocalTransform) == 0x000010, "Member 'FMeshSegmentInfo::LocalTransform' has a wrong offset!");
static_assert(offsetof(FMeshSegmentInfo, CollisionLocalOffset) == 0x000070, "Member 'FMeshSegmentInfo::CollisionLocalOffset' has a wrong offset!");
static_assert(offsetof(FMeshSegmentInfo, MeshSpacing) == 0x000088, "Member 'FMeshSegmentInfo::MeshSpacing' has a wrong offset!");
static_assert(offsetof(FMeshSegmentInfo, LengthOfMesh) == 0x00008C, "Member 'FMeshSegmentInfo::LengthOfMesh' has a wrong offset!");

}

