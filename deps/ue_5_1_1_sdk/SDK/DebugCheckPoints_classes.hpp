#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DebugCheckPoints

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DebugCheckPoints_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class DebugCheckPoints.DebugCheckPointIndicator
// 0x0010 (0x02C0 - 0x02B0)
class ADebugCheckPointIndicator final : public AActor
{
public:
	uint8                                         Pad_2B0[0x10];                                     // 0x02B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveDataUpdated(const class FText& Text, EDebugCheckPointStatus Status);
	void ReceiveDisabled();
	void ReceiveEnabled();
	void ReceiveStatusUpdated(EDebugCheckPointStatus Status);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointIndicator">();
	}
	static class ADebugCheckPointIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADebugCheckPointIndicator>();
	}
};
static_assert(alignof(ADebugCheckPointIndicator) == 0x000008, "Wrong alignment on ADebugCheckPointIndicator");
static_assert(sizeof(ADebugCheckPointIndicator) == 0x0002C0, "Wrong size on ADebugCheckPointIndicator");

// Class DebugCheckPoints.DebugCheckPointsManagerComponent
// 0x00B0 (0x0150 - 0x00A0)
class UDebugCheckPointsManagerComponent final : public UActorComponent
{
public:
	class UDebugCheckPointsPanel*                 DebugWidget;                                       // 0x00A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x28];                                      // 0x00A8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGuid, class ADebugCheckPointIndicator*> Indicators;                                        // 0x00D0(0x0050)(Protected, NativeAccessSpecifierProtected)
	class ADebugCheckPointIndicator*              LastSelected;                                      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_128[0x28];                                     // 0x0128(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointsManagerComponent">();
	}
	static class UDebugCheckPointsManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugCheckPointsManagerComponent>();
	}
};
static_assert(alignof(UDebugCheckPointsManagerComponent) == 0x000008, "Wrong alignment on UDebugCheckPointsManagerComponent");
static_assert(sizeof(UDebugCheckPointsManagerComponent) == 0x000150, "Wrong size on UDebugCheckPointsManagerComponent");
static_assert(offsetof(UDebugCheckPointsManagerComponent, DebugWidget) == 0x0000A0, "Member 'UDebugCheckPointsManagerComponent::DebugWidget' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsManagerComponent, Indicators) == 0x0000D0, "Member 'UDebugCheckPointsManagerComponent::Indicators' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsManagerComponent, LastSelected) == 0x000120, "Member 'UDebugCheckPointsManagerComponent::LastSelected' has a wrong offset!");

// Class DebugCheckPoints.DebugCheckPointsPanel
// 0x00C0 (0x0338 - 0x0278)
class UDebugCheckPointsPanel final : public UUserWidget
{
public:
	uint8                                         Pad_278[0xC0];                                     // 0x0278(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointsPanel">();
	}
	static class UDebugCheckPointsPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugCheckPointsPanel>();
	}
};
static_assert(alignof(UDebugCheckPointsPanel) == 0x000008, "Wrong alignment on UDebugCheckPointsPanel");
static_assert(sizeof(UDebugCheckPointsPanel) == 0x000338, "Wrong size on UDebugCheckPointsPanel");

// Class DebugCheckPoints.DebugCheckPointsSettings
// 0x0098 (0x00D0 - 0x0038)
class UDebugCheckPointsSettings final : public UDeveloperSettings
{
public:
	TSoftClassPtr<class UClass>                   DebugCheckPointsWidgetClass;                       // 0x0038(0x0030)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bImplicitlyLoadMainPersistentLevel;                // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutputFilePath;                                    // 0x0070(0x0010)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          _bNoNCPlugin;                                      // 0x0080(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseNCServer;                                      // 0x0081(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCompressedMegaFile;                               // 0x0082(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NCSubdirectory;                                    // 0x0088(0x0010)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ERedmineProject                               RedmineProjectID;                                  // 0x0098(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   IndicatorClass;                                    // 0x00A0(0x0030)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointsSettings">();
	}
	static class UDebugCheckPointsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugCheckPointsSettings>();
	}
};
static_assert(alignof(UDebugCheckPointsSettings) == 0x000008, "Wrong alignment on UDebugCheckPointsSettings");
static_assert(sizeof(UDebugCheckPointsSettings) == 0x0000D0, "Wrong size on UDebugCheckPointsSettings");
static_assert(offsetof(UDebugCheckPointsSettings, DebugCheckPointsWidgetClass) == 0x000038, "Member 'UDebugCheckPointsSettings::DebugCheckPointsWidgetClass' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, bImplicitlyLoadMainPersistentLevel) == 0x000068, "Member 'UDebugCheckPointsSettings::bImplicitlyLoadMainPersistentLevel' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, OutputFilePath) == 0x000070, "Member 'UDebugCheckPointsSettings::OutputFilePath' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, _bNoNCPlugin) == 0x000080, "Member 'UDebugCheckPointsSettings::_bNoNCPlugin' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, bUseNCServer) == 0x000081, "Member 'UDebugCheckPointsSettings::bUseNCServer' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, bCompressedMegaFile) == 0x000082, "Member 'UDebugCheckPointsSettings::bCompressedMegaFile' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, NCSubdirectory) == 0x000088, "Member 'UDebugCheckPointsSettings::NCSubdirectory' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, RedmineProjectID) == 0x000098, "Member 'UDebugCheckPointsSettings::RedmineProjectID' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsSettings, IndicatorClass) == 0x0000A0, "Member 'UDebugCheckPointsSettings::IndicatorClass' has a wrong offset!");

// Class DebugCheckPoints.LocalEditorDebugCheckPointsSettings
// 0x0018 (0x0040 - 0x0028)
class ULocalEditorDebugCheckPointsSettings final : public UObject
{
public:
	EPlatformTarget                               PlatformTarget;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RedmineSecurityToken;                              // 0x0030(0x0010)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LocalEditorDebugCheckPointsSettings">();
	}
	static class ULocalEditorDebugCheckPointsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULocalEditorDebugCheckPointsSettings>();
	}
};
static_assert(alignof(ULocalEditorDebugCheckPointsSettings) == 0x000008, "Wrong alignment on ULocalEditorDebugCheckPointsSettings");
static_assert(sizeof(ULocalEditorDebugCheckPointsSettings) == 0x000040, "Wrong size on ULocalEditorDebugCheckPointsSettings");
static_assert(offsetof(ULocalEditorDebugCheckPointsSettings, PlatformTarget) == 0x000028, "Member 'ULocalEditorDebugCheckPointsSettings::PlatformTarget' has a wrong offset!");
static_assert(offsetof(ULocalEditorDebugCheckPointsSettings, RedmineSecurityToken) == 0x000030, "Member 'ULocalEditorDebugCheckPointsSettings::RedmineSecurityToken' has a wrong offset!");

// Class DebugCheckPoints.DebugCheckPointsStatics
// 0x0000 (0x0028 - 0x0028)
class UDebugCheckPointsStatics final : public UBlueprintFunctionLibrary
{
public:
	static void HideCheckPoints(class UObject* WorldContextObject);
	static void HideCheckPointsPanel(class UObject* WorldContextObject);
	static void HideDebugCheckPointsWidget(class UObject* WorldContextObject);
	static void ShowCheckPoints(class UObject* WorldContextObject);
	static void ShowCheckPointsPanel(class UObject* WorldContextObject);
	static bool ShowDebugCheckPointsWidget(class UObject* WorldContextObject, const class FString& Description);
	static void ToggleCheckPoints(class UObject* WorldContextObject);
	static void ToggleCheckPointsPanel(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointsStatics">();
	}
	static class UDebugCheckPointsStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugCheckPointsStatics>();
	}
};
static_assert(alignof(UDebugCheckPointsStatics) == 0x000008, "Wrong alignment on UDebugCheckPointsStatics");
static_assert(sizeof(UDebugCheckPointsStatics) == 0x000028, "Wrong size on UDebugCheckPointsStatics");

// Class DebugCheckPoints.DebugCheckPointsWidget
// 0x0288 (0x0500 - 0x0278)
class alignas(0x10) UDebugCheckPointsWidget final : public UUserWidget
{
public:
	class UEditableTextBox*                       Descritpion_etx;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                              CreateIssue_cb;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                              PerfRaport_cb;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBButton*                               Submit_but;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBButton*                               Back_but;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBButton*                               Cancel_but;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A8[0x10];                                     // 0x02A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IssuesId;                                          // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BC[0x244];                                    // 0x02BC(0x0244)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Back();
	void OnScreenShotReady();
	void OnSubmiting();
	void Submit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DebugCheckPointsWidget">();
	}
	static class UDebugCheckPointsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDebugCheckPointsWidget>();
	}
};
static_assert(alignof(UDebugCheckPointsWidget) == 0x000010, "Wrong alignment on UDebugCheckPointsWidget");
static_assert(sizeof(UDebugCheckPointsWidget) == 0x000500, "Wrong size on UDebugCheckPointsWidget");
static_assert(offsetof(UDebugCheckPointsWidget, Descritpion_etx) == 0x000278, "Member 'UDebugCheckPointsWidget::Descritpion_etx' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, CreateIssue_cb) == 0x000280, "Member 'UDebugCheckPointsWidget::CreateIssue_cb' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, PerfRaport_cb) == 0x000288, "Member 'UDebugCheckPointsWidget::PerfRaport_cb' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, Submit_but) == 0x000290, "Member 'UDebugCheckPointsWidget::Submit_but' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, Back_but) == 0x000298, "Member 'UDebugCheckPointsWidget::Back_but' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, Cancel_but) == 0x0002A0, "Member 'UDebugCheckPointsWidget::Cancel_but' has a wrong offset!");
static_assert(offsetof(UDebugCheckPointsWidget, IssuesId) == 0x0002B8, "Member 'UDebugCheckPointsWidget::IssuesId' has a wrong offset!");

}

