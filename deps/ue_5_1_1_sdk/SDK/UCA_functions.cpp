#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UCA

#include "Basic.hpp"

#include "UCA_classes.hpp"
#include "UCA_parameters.hpp"


namespace SDK
{

// Function UCA.UCADebugCounterItemWidget.OnInit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Name_0                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Type                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUCADebugCounterItemWidget::OnInit(const class FText& Name_0, const class FText& Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugCounterItemWidget", "OnInit");

	Params::UCADebugCounterItemWidget_OnInit Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Type = std::move(Type);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UCA.UCADebugCounterItemWidget.OnRefresh
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUCADebugCounterItemWidget::OnRefresh(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugCounterItemWidget", "OnRefresh");

	Params::UCADebugCounterItemWidget_OnRefresh Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UCA.UCADebugAchvItemWidget.OnInit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Name_0                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    SinglePlaythrough                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Threshold                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSimple                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCADebugAchvItemWidget::OnInit(const class FText& Name_0, bool SinglePlaythrough, int32 Threshold, bool IsSimple)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugAchvItemWidget", "OnInit");

	Params::UCADebugAchvItemWidget_OnInit Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.SinglePlaythrough = SinglePlaythrough;
	Parms.Threshold = Threshold;
	Parms.IsSimple = IsSimple;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UCA.UCADebugAchvItemWidget.OnRefresh
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Progress                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    IsUnlocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCADebugAchvItemWidget::OnRefresh(const class FText& Progress, bool IsUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugAchvItemWidget", "OnRefresh");

	Params::UCADebugAchvItemWidget_OnRefresh Parms{};

	Parms.Progress = std::move(Progress);
	Parms.IsUnlocked = IsUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UCA.UCADebugWidget.OnRefresh
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUCADebugWidget::OnRefresh(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugWidget", "OnRefresh");

	Params::UCADebugWidget_OnRefresh Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UCA.UCADebugWidget.GetOnlineSystemInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUCADebugWidget::GetOnlineSystemInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UCADebugWidget", "GetOnlineSystemInfo");

	Params::UCADebugWidget_GetOnlineSystemInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UCA.UCAStatics.AddAchievementCollectionGuid
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCollectionHandle                Collection                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::AddAchievementCollectionGuid(const class UObject* WorldContextObject, const struct FCollectionHandle& Collection, const struct FGuid& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "AddAchievementCollectionGuid");

	Params::UCAStatics_AddAchievementCollectionGuid Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Collection = std::move(Collection);
	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.AddAchievementCollectionGuidFromActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCollectionHandle                Collection                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::AddAchievementCollectionGuidFromActor(const class UObject* WorldContextObject, const struct FCollectionHandle& Collection, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "AddAchievementCollectionGuidFromActor");

	Params::UCAStatics_AddAchievementCollectionGuidFromActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Collection = std::move(Collection);
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.AddAchievementCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCounterHandle                   Counter                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Delta                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::AddAchievementCounter(const class UObject* WorldContextObject, const struct FCounterHandle& Counter, const int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "AddAchievementCounter");

	Params::UCAStatics_AddAchievementCounter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Counter = std::move(Counter);
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.EndActivity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActivityHandle                  Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EActivityOutcome                        Outcome                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::EndActivity(const class UObject* WorldContextObject, const struct FActivityHandle& Handle, EActivityOutcome Outcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "EndActivity");

	Params::UCAStatics_EndActivity Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.Outcome = Outcome;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.IncrementAchievementCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCounterHandle                   Counter                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::IncrementAchievementCounter(const class UObject* WorldContextObject, const struct FCounterHandle& Counter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "IncrementAchievementCounter");

	Params::UCAStatics_IncrementAchievementCounter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Counter = std::move(Counter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.ResumeActivity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActivityHandle                  Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::ResumeActivity(const class UObject* WorldContextObject, const struct FActivityHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "ResumeActivity");

	Params::UCAStatics_ResumeActivity Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.SetActivityAvailability
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActivityHandle                  Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::SetActivityAvailability(const class UObject* WorldContextObject, const struct FActivityHandle& Handle, const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "SetActivityAvailability");

	Params::UCAStatics_SetActivityAvailability Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.SetActualZone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActivityZoneHandle              Zone                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::SetActualZone(const class UObject* WorldContextObject, const struct FActivityZoneHandle& Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "SetActualZone");

	Params::UCAStatics_SetActualZone Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Zone = std::move(Zone);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.StartActivity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActivityHandle                  Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::StartActivity(const class UObject* WorldContextObject, const struct FActivityHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "StartActivity");

	Params::UCAStatics_StartActivity Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.TerminateActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::TerminateActivity(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "TerminateActivity");

	Params::UCAStatics_TerminateActivity Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UCA.UCAStatics.UnlockAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAchievementHandle               Achievement                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUCAStatics::UnlockAchievement(const class UObject* WorldContextObject, const struct FAchievementHandle& Achievement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UCAStatics", "UnlockAchievement");

	Params::UCAStatics_UnlockAchievement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Achievement = std::move(Achievement);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

