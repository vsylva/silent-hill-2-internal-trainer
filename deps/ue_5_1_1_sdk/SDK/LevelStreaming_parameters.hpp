#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelStreaming

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "LevelStreaming_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LevelStreaming.LevelStreamingActorSerializerDefault.DynamicActorOnBeginPlay
// 0x0008 (0x0008 - 0x0000)
struct LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay) == 0x000008, "Wrong alignment on LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay");
static_assert(sizeof(LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay) == 0x000008, "Wrong size on LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay");
static_assert(offsetof(LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay, Actor) == 0x000000, "Member 'LevelStreamingActorSerializerDefault_DynamicActorOnBeginPlay::Actor' has a wrong offset!");

// Function LevelStreaming.LevelStreamingDataLayerSubsystem.OnDataLayerRuntimeStateChanged
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged final
{
public:
	class UDataLayerInstance*                     DataLayer;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDataLayerRuntimeState                        State;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged) == 0x000008, "Wrong alignment on LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged");
static_assert(sizeof(LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged) == 0x000010, "Wrong size on LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged");
static_assert(offsetof(LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged, DataLayer) == 0x000000, "Member 'LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged::DataLayer' has a wrong offset!");
static_assert(offsetof(LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged, State) == 0x000008, "Member 'LevelStreamingDataLayerSubsystem_OnDataLayerRuntimeStateChanged::State' has a wrong offset!");

// Function LevelStreaming.LevelStreamingDebugWidget.SelectNextLineColor
// 0x00D0 (0x00D0 - 0x0000)
struct LevelStreamingDebugWidget_SelectNextLineColor final
{
public:
	struct FStreamableLevelBatch                  PreviousBatch;                                     // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatch                  NextBatch;                                         // 0x0048(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLinearColor                           CurrentColor;                                      // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FirstColor;                                        // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SecondColor;                                       // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x00C0(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingDebugWidget_SelectNextLineColor) == 0x000008, "Wrong alignment on LevelStreamingDebugWidget_SelectNextLineColor");
static_assert(sizeof(LevelStreamingDebugWidget_SelectNextLineColor) == 0x0000D0, "Wrong size on LevelStreamingDebugWidget_SelectNextLineColor");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, PreviousBatch) == 0x000000, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::PreviousBatch' has a wrong offset!");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, NextBatch) == 0x000048, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::NextBatch' has a wrong offset!");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, CurrentColor) == 0x000090, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::CurrentColor' has a wrong offset!");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, FirstColor) == 0x0000A0, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::FirstColor' has a wrong offset!");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, SecondColor) == 0x0000B0, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::SecondColor' has a wrong offset!");
static_assert(offsetof(LevelStreamingDebugWidget_SelectNextLineColor, ReturnValue) == 0x0000C0, "Member 'LevelStreamingDebugWidget_SelectNextLineColor::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingEventsComponent.GetBatchesStatus
// 0x0002 (0x0002 - 0x0000)
struct LevelStreamingEventsComponent_GetBatchesStatus final
{
public:
	EStreamableLevelStatus                        OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingEventsComponent_GetBatchesStatus) == 0x000001, "Wrong alignment on LevelStreamingEventsComponent_GetBatchesStatus");
static_assert(sizeof(LevelStreamingEventsComponent_GetBatchesStatus) == 0x000002, "Wrong size on LevelStreamingEventsComponent_GetBatchesStatus");
static_assert(offsetof(LevelStreamingEventsComponent_GetBatchesStatus, OutStatus) == 0x000000, "Member 'LevelStreamingEventsComponent_GetBatchesStatus::OutStatus' has a wrong offset!");
static_assert(offsetof(LevelStreamingEventsComponent_GetBatchesStatus, ReturnValue) == 0x000001, "Member 'LevelStreamingEventsComponent_GetBatchesStatus::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingEventsComponent.GetLevelsStatus
// 0x0002 (0x0002 - 0x0000)
struct LevelStreamingEventsComponent_GetLevelsStatus final
{
public:
	EStreamableLevelStatus                        OutStatus;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingEventsComponent_GetLevelsStatus) == 0x000001, "Wrong alignment on LevelStreamingEventsComponent_GetLevelsStatus");
static_assert(sizeof(LevelStreamingEventsComponent_GetLevelsStatus) == 0x000002, "Wrong size on LevelStreamingEventsComponent_GetLevelsStatus");
static_assert(offsetof(LevelStreamingEventsComponent_GetLevelsStatus, OutStatus) == 0x000000, "Member 'LevelStreamingEventsComponent_GetLevelsStatus::OutStatus' has a wrong offset!");
static_assert(offsetof(LevelStreamingEventsComponent_GetLevelsStatus, ReturnValue) == 0x000001, "Member 'LevelStreamingEventsComponent_GetLevelsStatus::ReturnValue' has a wrong offset!");

// DelegateFunction LevelStreaming.LevelStreamingEventsComponent.StatusChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingEventsComponent_StatusChanged__DelegateSignature final
{
public:
	class ULevelStreamingEventsComponent*         Events;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStreamableLevelStatus                        Status;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingEventsComponent_StatusChanged__DelegateSignature) == 0x000008, "Wrong alignment on LevelStreamingEventsComponent_StatusChanged__DelegateSignature");
static_assert(sizeof(LevelStreamingEventsComponent_StatusChanged__DelegateSignature) == 0x000010, "Wrong size on LevelStreamingEventsComponent_StatusChanged__DelegateSignature");
static_assert(offsetof(LevelStreamingEventsComponent_StatusChanged__DelegateSignature, Events) == 0x000000, "Member 'LevelStreamingEventsComponent_StatusChanged__DelegateSignature::Events' has a wrong offset!");
static_assert(offsetof(LevelStreamingEventsComponent_StatusChanged__DelegateSignature, Status) == 0x000008, "Member 'LevelStreamingEventsComponent_StatusChanged__DelegateSignature::Status' has a wrong offset!");

// Function LevelStreaming.LevelStreamingManager.OnActorEndPlay
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingManager_OnActorEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingManager_OnActorEndPlay) == 0x000008, "Wrong alignment on LevelStreamingManager_OnActorEndPlay");
static_assert(sizeof(LevelStreamingManager_OnActorEndPlay) == 0x000010, "Wrong size on LevelStreamingManager_OnActorEndPlay");
static_assert(offsetof(LevelStreamingManager_OnActorEndPlay, Actor) == 0x000000, "Member 'LevelStreamingManager_OnActorEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(LevelStreamingManager_OnActorEndPlay, EndPlayReason) == 0x000008, "Member 'LevelStreamingManager_OnActorEndPlay::EndPlayReason' has a wrong offset!");

// Function LevelStreaming.LevelStreamingManager.OnActorEndPlayDynamic
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingManager_OnActorEndPlayDynamic final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingManager_OnActorEndPlayDynamic) == 0x000008, "Wrong alignment on LevelStreamingManager_OnActorEndPlayDynamic");
static_assert(sizeof(LevelStreamingManager_OnActorEndPlayDynamic) == 0x000010, "Wrong size on LevelStreamingManager_OnActorEndPlayDynamic");
static_assert(offsetof(LevelStreamingManager_OnActorEndPlayDynamic, Actor) == 0x000000, "Member 'LevelStreamingManager_OnActorEndPlayDynamic::Actor' has a wrong offset!");
static_assert(offsetof(LevelStreamingManager_OnActorEndPlayDynamic, EndPlayReason) == 0x000008, "Member 'LevelStreamingManager_OnActorEndPlayDynamic::EndPlayReason' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreLevelBatchHandlesEqual
// 0x0014 (0x0014 - 0x0000)
struct LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual final
{
public:
	struct FStreamableLevelBatchHandle            A;                                                 // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            B;                                                 // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual) == 0x000004, "Wrong alignment on LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual) == 0x000014, "Wrong size on LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual, B) == 0x000008, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreLevelBatchHandlesNotEqual
// 0x0014 (0x0014 - 0x0000)
struct LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual final
{
public:
	struct FStreamableLevelBatchHandle            A;                                                 // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            B;                                                 // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual) == 0x000004, "Wrong alignment on LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual) == 0x000014, "Wrong size on LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual, B) == 0x000008, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreLevelBatchHandlesNotEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreLevelHandlesEqual
// 0x0014 (0x0014 - 0x0000)
struct LevelStreamingStaticLibrary_AreLevelHandlesEqual final
{
public:
	struct FStreamableLevelHandle                 A;                                                 // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 B;                                                 // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreLevelHandlesEqual) == 0x000004, "Wrong alignment on LevelStreamingStaticLibrary_AreLevelHandlesEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreLevelHandlesEqual) == 0x000014, "Wrong size on LevelStreamingStaticLibrary_AreLevelHandlesEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesEqual, B) == 0x000008, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesEqual, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreLevelHandlesNotEqual
// 0x0014 (0x0014 - 0x0000)
struct LevelStreamingStaticLibrary_AreLevelHandlesNotEqual final
{
public:
	struct FStreamableLevelHandle                 A;                                                 // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 B;                                                 // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreLevelHandlesNotEqual) == 0x000004, "Wrong alignment on LevelStreamingStaticLibrary_AreLevelHandlesNotEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreLevelHandlesNotEqual) == 0x000014, "Wrong size on LevelStreamingStaticLibrary_AreLevelHandlesNotEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesNotEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesNotEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesNotEqual, B) == 0x000008, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesNotEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreLevelHandlesNotEqual, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreLevelHandlesNotEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreRequestHandlesEqual
// 0x0028 (0x0028 - 0x0000)
struct LevelStreamingStaticLibrary_AreRequestHandlesEqual final
{
public:
	struct FLevelStreamingRequestHandle           A;                                                 // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLevelStreamingRequestHandle           B;                                                 // 0x0010(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreRequestHandlesEqual) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_AreRequestHandlesEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreRequestHandlesEqual) == 0x000028, "Wrong size on LevelStreamingStaticLibrary_AreRequestHandlesEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesEqual, B) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesEqual, ReturnValue) == 0x000020, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.AreRequestHandlesNotEqual
// 0x0028 (0x0028 - 0x0000)
struct LevelStreamingStaticLibrary_AreRequestHandlesNotEqual final
{
public:
	struct FLevelStreamingRequestHandle           A;                                                 // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLevelStreamingRequestHandle           B;                                                 // 0x0010(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_AreRequestHandlesNotEqual) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_AreRequestHandlesNotEqual");
static_assert(sizeof(LevelStreamingStaticLibrary_AreRequestHandlesNotEqual) == 0x000028, "Wrong size on LevelStreamingStaticLibrary_AreRequestHandlesNotEqual");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesNotEqual, A) == 0x000000, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesNotEqual::A' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesNotEqual, B) == 0x000010, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesNotEqual::B' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_AreRequestHandlesNotEqual, ReturnValue) == 0x000020, "Member 'LevelStreamingStaticLibrary_AreRequestHandlesNotEqual::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.CacheWorldState
// 0x0008 (0x0008 - 0x0000)
struct LevelStreamingStaticLibrary_CacheWorldState final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_CacheWorldState) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_CacheWorldState");
static_assert(sizeof(LevelStreamingStaticLibrary_CacheWorldState) == 0x000008, "Wrong size on LevelStreamingStaticLibrary_CacheWorldState");
static_assert(offsetof(LevelStreamingStaticLibrary_CacheWorldState, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_CacheWorldState::WorldContextObject' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ConvertBatchHandleToString
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_ConvertBatchHandleToString final
{
public:
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ConvertBatchHandleToString) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ConvertBatchHandleToString");
static_assert(sizeof(LevelStreamingStaticLibrary_ConvertBatchHandleToString) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_ConvertBatchHandleToString");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertBatchHandleToString, BatchHandle) == 0x000000, "Member 'LevelStreamingStaticLibrary_ConvertBatchHandleToString::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertBatchHandleToString, ReturnValue) == 0x000008, "Member 'LevelStreamingStaticLibrary_ConvertBatchHandleToString::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ConvertLevelHandleToLevel
// 0x0088 (0x0088 - 0x0000)
struct LevelStreamingStaticLibrary_ConvertLevelHandleToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FStreamableLevel                       OutLevel;                                          // 0x0010(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          OutIsValid;                                        // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ConvertLevelHandleToLevel");
static_assert(sizeof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel) == 0x000088, "Wrong size on LevelStreamingStaticLibrary_ConvertLevelHandleToLevel");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevel::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel, OutLevel) == 0x000010, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevel::OutLevel' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevel, OutIsValid) == 0x000080, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevel::OutIsValid' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ConvertLevelHandleToLevelState
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UStreamableLevelState*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState");
static_assert(sizeof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToLevelState::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ConvertLevelHandleToString
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_ConvertLevelHandleToString final
{
public:
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ConvertLevelHandleToString) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ConvertLevelHandleToString");
static_assert(sizeof(LevelStreamingStaticLibrary_ConvertLevelHandleToString) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_ConvertLevelHandleToString");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToString, LevelHandle) == 0x000000, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToString::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertLevelHandleToString, ReturnValue) == 0x000008, "Member 'LevelStreamingStaticLibrary_ConvertLevelHandleToString::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ConvertRequestHandleToString
// 0x0020 (0x0020 - 0x0000)
struct LevelStreamingStaticLibrary_ConvertRequestHandleToString final
{
public:
	struct FLevelStreamingRequestHandle           RequestHandle;                                     // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ConvertRequestHandleToString) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ConvertRequestHandleToString");
static_assert(sizeof(LevelStreamingStaticLibrary_ConvertRequestHandleToString) == 0x000020, "Wrong size on LevelStreamingStaticLibrary_ConvertRequestHandleToString");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertRequestHandleToString, RequestHandle) == 0x000000, "Member 'LevelStreamingStaticLibrary_ConvertRequestHandleToString::RequestHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ConvertRequestHandleToString, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_ConvertRequestHandleToString::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.FindActorBatchState
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_FindActorBatchState final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStreamableLevelBatchState*             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_FindActorBatchState) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_FindActorBatchState");
static_assert(sizeof(LevelStreamingStaticLibrary_FindActorBatchState) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_FindActorBatchState");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorBatchState, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_FindActorBatchState::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorBatchState, Actor) == 0x000008, "Member 'LevelStreamingStaticLibrary_FindActorBatchState::Actor' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorBatchState, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_FindActorBatchState::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.FindActorLevelState
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_FindActorLevelState final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStreamableLevelState*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_FindActorLevelState) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_FindActorLevelState");
static_assert(sizeof(LevelStreamingStaticLibrary_FindActorLevelState) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_FindActorLevelState");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorLevelState, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_FindActorLevelState::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorLevelState, Actor) == 0x000008, "Member 'LevelStreamingStaticLibrary_FindActorLevelState::Actor' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_FindActorLevelState, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_FindActorLevelState::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.GetAllBatchStates
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_GetAllBatchStates final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStreamableLevelBatchState*>     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_GetAllBatchStates) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_GetAllBatchStates");
static_assert(sizeof(LevelStreamingStaticLibrary_GetAllBatchStates) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_GetAllBatchStates");
static_assert(offsetof(LevelStreamingStaticLibrary_GetAllBatchStates, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_GetAllBatchStates::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_GetAllBatchStates, ReturnValue) == 0x000008, "Member 'LevelStreamingStaticLibrary_GetAllBatchStates::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.GetAllLevelStates
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_GetAllLevelStates final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStreamableLevelState*>          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_GetAllLevelStates) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_GetAllLevelStates");
static_assert(sizeof(LevelStreamingStaticLibrary_GetAllLevelStates) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_GetAllLevelStates");
static_assert(offsetof(LevelStreamingStaticLibrary_GetAllLevelStates, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_GetAllLevelStates::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_GetAllLevelStates, ReturnValue) == 0x000008, "Member 'LevelStreamingStaticLibrary_GetAllLevelStates::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.HideStreamedBatch
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_HideStreamedBatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_HideStreamedBatch) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_HideStreamedBatch");
static_assert(sizeof(LevelStreamingStaticLibrary_HideStreamedBatch) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_HideStreamedBatch");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedBatch, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_HideStreamedBatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedBatch, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_HideStreamedBatch::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedBatch, Priority) == 0x000010, "Member 'LevelStreamingStaticLibrary_HideStreamedBatch::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.HideStreamedLevel
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_HideStreamedLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_HideStreamedLevel) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_HideStreamedLevel");
static_assert(sizeof(LevelStreamingStaticLibrary_HideStreamedLevel) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_HideStreamedLevel");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedLevel, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_HideStreamedLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedLevel, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_HideStreamedLevel::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_HideStreamedLevel, Priority) == 0x000010, "Member 'LevelStreamingStaticLibrary_HideStreamedLevel::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.IsActorBatchLoadedVisible
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_IsActorBatchLoadedVisible final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_IsActorBatchLoadedVisible) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_IsActorBatchLoadedVisible");
static_assert(sizeof(LevelStreamingStaticLibrary_IsActorBatchLoadedVisible) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_IsActorBatchLoadedVisible");
static_assert(offsetof(LevelStreamingStaticLibrary_IsActorBatchLoadedVisible, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_IsActorBatchLoadedVisible::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_IsActorBatchLoadedVisible, Actor) == 0x000008, "Member 'LevelStreamingStaticLibrary_IsActorBatchLoadedVisible::Actor' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_IsActorBatchLoadedVisible, ReturnValue) == 0x000010, "Member 'LevelStreamingStaticLibrary_IsActorBatchLoadedVisible::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.RemoveRuntimeActorFromDatabase
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase");
static_assert(sizeof(LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase) == 0x000010, "Wrong size on LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase");
static_assert(offsetof(LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase, Actor) == 0x000008, "Member 'LevelStreamingStaticLibrary_RemoveRuntimeActorFromDatabase::Actor' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ResetStreamedBatchTransform
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingStaticLibrary_ResetStreamedBatchTransform final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ResetStreamedBatchTransform) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ResetStreamedBatchTransform");
static_assert(sizeof(LevelStreamingStaticLibrary_ResetStreamedBatchTransform) == 0x000010, "Wrong size on LevelStreamingStaticLibrary_ResetStreamedBatchTransform");
static_assert(offsetof(LevelStreamingStaticLibrary_ResetStreamedBatchTransform, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ResetStreamedBatchTransform::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ResetStreamedBatchTransform, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ResetStreamedBatchTransform::BatchHandle' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ResetStreamedLevelTransform
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingStaticLibrary_ResetStreamedLevelTransform final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ResetStreamedLevelTransform) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ResetStreamedLevelTransform");
static_assert(sizeof(LevelStreamingStaticLibrary_ResetStreamedLevelTransform) == 0x000010, "Wrong size on LevelStreamingStaticLibrary_ResetStreamedLevelTransform");
static_assert(offsetof(LevelStreamingStaticLibrary_ResetStreamedLevelTransform, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ResetStreamedLevelTransform::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ResetStreamedLevelTransform, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ResetStreamedLevelTransform::LevelHandle' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.SetStreamedBatchTransform
// 0x00A0 (0x00A0 - 0x0000)
struct LevelStreamingStaticLibrary_SetStreamedBatchTransform final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  Pivot;                                             // 0x0070(0x0030)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_SetStreamedBatchTransform) == 0x000010, "Wrong alignment on LevelStreamingStaticLibrary_SetStreamedBatchTransform");
static_assert(sizeof(LevelStreamingStaticLibrary_SetStreamedBatchTransform) == 0x0000A0, "Wrong size on LevelStreamingStaticLibrary_SetStreamedBatchTransform");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedBatchTransform, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_SetStreamedBatchTransform::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedBatchTransform, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_SetStreamedBatchTransform::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedBatchTransform, Transform) == 0x000010, "Member 'LevelStreamingStaticLibrary_SetStreamedBatchTransform::Transform' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedBatchTransform, Pivot) == 0x000070, "Member 'LevelStreamingStaticLibrary_SetStreamedBatchTransform::Pivot' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.SetStreamedLevelTransform
// 0x00A0 (0x00A0 - 0x0000)
struct LevelStreamingStaticLibrary_SetStreamedLevelTransform final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class AActor>                  Pivot;                                             // 0x0070(0x0030)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_SetStreamedLevelTransform) == 0x000010, "Wrong alignment on LevelStreamingStaticLibrary_SetStreamedLevelTransform");
static_assert(sizeof(LevelStreamingStaticLibrary_SetStreamedLevelTransform) == 0x0000A0, "Wrong size on LevelStreamingStaticLibrary_SetStreamedLevelTransform");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedLevelTransform, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_SetStreamedLevelTransform::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedLevelTransform, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_SetStreamedLevelTransform::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedLevelTransform, Transform) == 0x000010, "Member 'LevelStreamingStaticLibrary_SetStreamedLevelTransform::Transform' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamedLevelTransform, Pivot) == 0x000070, "Member 'LevelStreamingStaticLibrary_SetStreamedLevelTransform::Pivot' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.SetStreamingIntegrationSpeed
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStreamingIntegrationSpeed                    Speed;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed");
static_assert(sizeof(LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed) == 0x000010, "Wrong size on LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed, Speed) == 0x000008, "Member 'LevelStreamingStaticLibrary_SetStreamingIntegrationSpeed::Speed' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ShowStreamedBatch
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_ShowStreamedBatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          LoadIfUnloaded;                                    // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ShowStreamedBatch) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ShowStreamedBatch");
static_assert(sizeof(LevelStreamingStaticLibrary_ShowStreamedBatch) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_ShowStreamedBatch");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedBatch, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ShowStreamedBatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedBatch, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ShowStreamedBatch::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedBatch, LoadIfUnloaded) == 0x000010, "Member 'LevelStreamingStaticLibrary_ShowStreamedBatch::LoadIfUnloaded' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedBatch, Priority) == 0x000014, "Member 'LevelStreamingStaticLibrary_ShowStreamedBatch::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.ShowStreamedLevel
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_ShowStreamedLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          LoadIfUnloaded;                                    // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_ShowStreamedLevel) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_ShowStreamedLevel");
static_assert(sizeof(LevelStreamingStaticLibrary_ShowStreamedLevel) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_ShowStreamedLevel");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedLevel, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_ShowStreamedLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedLevel, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_ShowStreamedLevel::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedLevel, LoadIfUnloaded) == 0x000010, "Member 'LevelStreamingStaticLibrary_ShowStreamedLevel::LoadIfUnloaded' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_ShowStreamedLevel, Priority) == 0x000014, "Member 'LevelStreamingStaticLibrary_ShowStreamedLevel::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.StartBatchStreaming
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_StartBatchStreaming final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          MakeVisible;                                       // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_StartBatchStreaming) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_StartBatchStreaming");
static_assert(sizeof(LevelStreamingStaticLibrary_StartBatchStreaming) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_StartBatchStreaming");
static_assert(offsetof(LevelStreamingStaticLibrary_StartBatchStreaming, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_StartBatchStreaming::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartBatchStreaming, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_StartBatchStreaming::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartBatchStreaming, MakeVisible) == 0x000010, "Member 'LevelStreamingStaticLibrary_StartBatchStreaming::MakeVisible' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartBatchStreaming, Priority) == 0x000014, "Member 'LevelStreamingStaticLibrary_StartBatchStreaming::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.StartLevelStreaming
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_StartLevelStreaming final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          MakeVisible;                                       // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_StartLevelStreaming) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_StartLevelStreaming");
static_assert(sizeof(LevelStreamingStaticLibrary_StartLevelStreaming) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_StartLevelStreaming");
static_assert(offsetof(LevelStreamingStaticLibrary_StartLevelStreaming, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_StartLevelStreaming::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartLevelStreaming, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_StartLevelStreaming::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartLevelStreaming, MakeVisible) == 0x000010, "Member 'LevelStreamingStaticLibrary_StartLevelStreaming::MakeVisible' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_StartLevelStreaming, Priority) == 0x000014, "Member 'LevelStreamingStaticLibrary_StartLevelStreaming::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.SubmitRequest
// 0x0020 (0x0020 - 0x0000)
struct LevelStreamingStaticLibrary_SubmitRequest final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLevelStreamingRequestHandle           RequestHandle;                                     // 0x0008(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	class ULevelStreamingRequestState*            ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_SubmitRequest) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_SubmitRequest");
static_assert(sizeof(LevelStreamingStaticLibrary_SubmitRequest) == 0x000020, "Wrong size on LevelStreamingStaticLibrary_SubmitRequest");
static_assert(offsetof(LevelStreamingStaticLibrary_SubmitRequest, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_SubmitRequest::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SubmitRequest, RequestHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_SubmitRequest::RequestHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_SubmitRequest, ReturnValue) == 0x000018, "Member 'LevelStreamingStaticLibrary_SubmitRequest::ReturnValue' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.TravelToLevel
// 0x0010 (0x0010 - 0x0000)
struct LevelStreamingStaticLibrary_TravelToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LevelStreamingStaticLibrary_TravelToLevel) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_TravelToLevel");
static_assert(sizeof(LevelStreamingStaticLibrary_TravelToLevel) == 0x000010, "Wrong size on LevelStreamingStaticLibrary_TravelToLevel");
static_assert(offsetof(LevelStreamingStaticLibrary_TravelToLevel, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_TravelToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_TravelToLevel, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_TravelToLevel::LevelHandle' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.UnloadStreamedBatch
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_UnloadStreamedBatch final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelBatchHandle            BatchHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_UnloadStreamedBatch) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_UnloadStreamedBatch");
static_assert(sizeof(LevelStreamingStaticLibrary_UnloadStreamedBatch) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_UnloadStreamedBatch");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedBatch, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_UnloadStreamedBatch::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedBatch, BatchHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_UnloadStreamedBatch::BatchHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedBatch, Priority) == 0x000010, "Member 'LevelStreamingStaticLibrary_UnloadStreamedBatch::Priority' has a wrong offset!");

// Function LevelStreaming.LevelStreamingStaticLibrary.UnloadStreamedLevel
// 0x0018 (0x0018 - 0x0000)
struct LevelStreamingStaticLibrary_UnloadStreamedLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStreamableLevelHandle                 LevelHandle;                                       // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LevelStreamingStaticLibrary_UnloadStreamedLevel) == 0x000008, "Wrong alignment on LevelStreamingStaticLibrary_UnloadStreamedLevel");
static_assert(sizeof(LevelStreamingStaticLibrary_UnloadStreamedLevel) == 0x000018, "Wrong size on LevelStreamingStaticLibrary_UnloadStreamedLevel");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedLevel, WorldContextObject) == 0x000000, "Member 'LevelStreamingStaticLibrary_UnloadStreamedLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedLevel, LevelHandle) == 0x000008, "Member 'LevelStreamingStaticLibrary_UnloadStreamedLevel::LevelHandle' has a wrong offset!");
static_assert(offsetof(LevelStreamingStaticLibrary_UnloadStreamedLevel, Priority) == 0x000010, "Member 'LevelStreamingStaticLibrary_UnloadStreamedLevel::Priority' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetBatch
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetBatch final
{
public:
	class UStreamableLevelBatchState*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetBatch) == 0x000008, "Wrong alignment on StreamableLevelState_GetBatch");
static_assert(sizeof(StreamableLevelState_GetBatch) == 0x000008, "Wrong size on StreamableLevelState_GetBatch");
static_assert(offsetof(StreamableLevelState_GetBatch, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetBatch::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetConfig
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetConfig final
{
public:
	class UStreamableLevelConfig*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetConfig) == 0x000008, "Wrong alignment on StreamableLevelState_GetConfig");
static_assert(sizeof(StreamableLevelState_GetConfig) == 0x000008, "Wrong size on StreamableLevelState_GetConfig");
static_assert(offsetof(StreamableLevelState_GetConfig, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetConfig::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelStreaming
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetLevelStreaming final
{
public:
	class ULevelStreaming*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelStreaming) == 0x000008, "Wrong alignment on StreamableLevelState_GetLevelStreaming");
static_assert(sizeof(StreamableLevelState_GetLevelStreaming) == 0x000008, "Wrong size on StreamableLevelState_GetLevelStreaming");
static_assert(offsetof(StreamableLevelState_GetLevelStreaming, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelStreaming::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevel
// 0x0070 (0x0070 - 0x0000)
struct StreamableLevelState_GetLevel final
{
public:
	struct FStreamableLevel                       ReturnValue;                                       // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevel) == 0x000008, "Wrong alignment on StreamableLevelState_GetLevel");
static_assert(sizeof(StreamableLevelState_GetLevel) == 0x000070, "Wrong size on StreamableLevelState_GetLevel");
static_assert(offsetof(StreamableLevelState_GetLevel, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevel::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelHandle
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetLevelHandle final
{
public:
	struct FStreamableLevelHandle                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelHandle) == 0x000004, "Wrong alignment on StreamableLevelState_GetLevelHandle");
static_assert(sizeof(StreamableLevelState_GetLevelHandle) == 0x000008, "Wrong size on StreamableLevelState_GetLevelHandle");
static_assert(offsetof(StreamableLevelState_GetLevelHandle, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelHandle::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelName
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetLevelName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelName) == 0x000004, "Wrong alignment on StreamableLevelState_GetLevelName");
static_assert(sizeof(StreamableLevelState_GetLevelName) == 0x000008, "Wrong size on StreamableLevelState_GetLevelName");
static_assert(offsetof(StreamableLevelState_GetLevelName, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelName::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelNameAsString
// 0x0010 (0x0010 - 0x0000)
struct StreamableLevelState_GetLevelNameAsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelNameAsString) == 0x000008, "Wrong alignment on StreamableLevelState_GetLevelNameAsString");
static_assert(sizeof(StreamableLevelState_GetLevelNameAsString) == 0x000010, "Wrong size on StreamableLevelState_GetLevelNameAsString");
static_assert(offsetof(StreamableLevelState_GetLevelNameAsString, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelNameAsString::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelPath
// 0x0008 (0x0008 - 0x0000)
struct StreamableLevelState_GetLevelPath final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelPath) == 0x000004, "Wrong alignment on StreamableLevelState_GetLevelPath");
static_assert(sizeof(StreamableLevelState_GetLevelPath) == 0x000008, "Wrong size on StreamableLevelState_GetLevelPath");
static_assert(offsetof(StreamableLevelState_GetLevelPath, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelPath::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelPathAsString
// 0x0010 (0x0010 - 0x0000)
struct StreamableLevelState_GetLevelPathAsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelPathAsString) == 0x000008, "Wrong alignment on StreamableLevelState_GetLevelPathAsString");
static_assert(sizeof(StreamableLevelState_GetLevelPathAsString) == 0x000010, "Wrong size on StreamableLevelState_GetLevelPathAsString");
static_assert(offsetof(StreamableLevelState_GetLevelPathAsString, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelPathAsString::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetLevelType
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_GetLevelType final
{
public:
	EStreamableLevelType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetLevelType) == 0x000001, "Wrong alignment on StreamableLevelState_GetLevelType");
static_assert(sizeof(StreamableLevelState_GetLevelType) == 0x000001, "Wrong size on StreamableLevelState_GetLevelType");
static_assert(offsetof(StreamableLevelState_GetLevelType, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetLevelType::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_GetStatus final
{
public:
	EStreamableLevelStatus                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetStatus) == 0x000001, "Wrong alignment on StreamableLevelState_GetStatus");
static_assert(sizeof(StreamableLevelState_GetStatus) == 0x000001, "Wrong size on StreamableLevelState_GetStatus");
static_assert(offsetof(StreamableLevelState_GetStatus, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetStatus::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.GetSublevels
// 0x0010 (0x0010 - 0x0000)
struct StreamableLevelState_GetSublevels final
{
public:
	TArray<class UStreamableLevelState*>          ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_GetSublevels) == 0x000008, "Wrong alignment on StreamableLevelState_GetSublevels");
static_assert(sizeof(StreamableLevelState_GetSublevels) == 0x000010, "Wrong size on StreamableLevelState_GetSublevels");
static_assert(offsetof(StreamableLevelState_GetSublevels, ReturnValue) == 0x000000, "Member 'StreamableLevelState_GetSublevels::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.HasBatch
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_HasBatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_HasBatch) == 0x000001, "Wrong alignment on StreamableLevelState_HasBatch");
static_assert(sizeof(StreamableLevelState_HasBatch) == 0x000001, "Wrong size on StreamableLevelState_HasBatch");
static_assert(offsetof(StreamableLevelState_HasBatch, ReturnValue) == 0x000000, "Member 'StreamableLevelState_HasBatch::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.HasLevelConfig
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_HasLevelConfig final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_HasLevelConfig) == 0x000001, "Wrong alignment on StreamableLevelState_HasLevelConfig");
static_assert(sizeof(StreamableLevelState_HasLevelConfig) == 0x000001, "Wrong size on StreamableLevelState_HasLevelConfig");
static_assert(offsetof(StreamableLevelState_HasLevelConfig, ReturnValue) == 0x000000, "Member 'StreamableLevelState_HasLevelConfig::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.HasLevelStreaming
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_HasLevelStreaming final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_HasLevelStreaming) == 0x000001, "Wrong alignment on StreamableLevelState_HasLevelStreaming");
static_assert(sizeof(StreamableLevelState_HasLevelStreaming) == 0x000001, "Wrong size on StreamableLevelState_HasLevelStreaming");
static_assert(offsetof(StreamableLevelState_HasLevelStreaming, ReturnValue) == 0x000000, "Member 'StreamableLevelState_HasLevelStreaming::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.IsHidden
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_IsHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_IsHidden) == 0x000001, "Wrong alignment on StreamableLevelState_IsHidden");
static_assert(sizeof(StreamableLevelState_IsHidden) == 0x000001, "Wrong size on StreamableLevelState_IsHidden");
static_assert(offsetof(StreamableLevelState_IsHidden, ReturnValue) == 0x000000, "Member 'StreamableLevelState_IsHidden::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.IsLoaded
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_IsLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_IsLoaded) == 0x000001, "Wrong alignment on StreamableLevelState_IsLoaded");
static_assert(sizeof(StreamableLevelState_IsLoaded) == 0x000001, "Wrong size on StreamableLevelState_IsLoaded");
static_assert(offsetof(StreamableLevelState_IsLoaded, ReturnValue) == 0x000000, "Member 'StreamableLevelState_IsLoaded::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.IsUnloaded
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_IsUnloaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_IsUnloaded) == 0x000001, "Wrong alignment on StreamableLevelState_IsUnloaded");
static_assert(sizeof(StreamableLevelState_IsUnloaded) == 0x000001, "Wrong size on StreamableLevelState_IsUnloaded");
static_assert(offsetof(StreamableLevelState_IsUnloaded, ReturnValue) == 0x000000, "Member 'StreamableLevelState_IsUnloaded::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.IsVisible
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_IsVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_IsVisible) == 0x000001, "Wrong alignment on StreamableLevelState_IsVisible");
static_assert(sizeof(StreamableLevelState_IsVisible) == 0x000001, "Wrong size on StreamableLevelState_IsVisible");
static_assert(offsetof(StreamableLevelState_IsVisible, ReturnValue) == 0x000000, "Member 'StreamableLevelState_IsVisible::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamableLevelState.ShouldBeAlwaysLoaded
// 0x0001 (0x0001 - 0x0000)
struct StreamableLevelState_ShouldBeAlwaysLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamableLevelState_ShouldBeAlwaysLoaded) == 0x000001, "Wrong alignment on StreamableLevelState_ShouldBeAlwaysLoaded");
static_assert(sizeof(StreamableLevelState_ShouldBeAlwaysLoaded) == 0x000001, "Wrong size on StreamableLevelState_ShouldBeAlwaysLoaded");
static_assert(offsetof(StreamableLevelState_ShouldBeAlwaysLoaded, ReturnValue) == 0x000000, "Member 'StreamableLevelState_ShouldBeAlwaysLoaded::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamingVolume.GetStreamingVolumeManager
// 0x0008 (0x0008 - 0x0000)
struct StreamingVolume_GetStreamingVolumeManager final
{
public:
	class UStreamingVolumeManager*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingVolume_GetStreamingVolumeManager) == 0x000008, "Wrong alignment on StreamingVolume_GetStreamingVolumeManager");
static_assert(sizeof(StreamingVolume_GetStreamingVolumeManager) == 0x000008, "Wrong size on StreamingVolume_GetStreamingVolumeManager");
static_assert(offsetof(StreamingVolume_GetStreamingVolumeManager, ReturnValue) == 0x000000, "Member 'StreamingVolume_GetStreamingVolumeManager::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamingVolume.SetEnable
// 0x0010 (0x0010 - 0x0000)
struct StreamingVolume_SetEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          Object;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingVolume_SetEnable) == 0x000008, "Wrong alignment on StreamingVolume_SetEnable");
static_assert(sizeof(StreamingVolume_SetEnable) == 0x000010, "Wrong size on StreamingVolume_SetEnable");
static_assert(offsetof(StreamingVolume_SetEnable, Enable) == 0x000000, "Member 'StreamingVolume_SetEnable::Enable' has a wrong offset!");
static_assert(offsetof(StreamingVolume_SetEnable, Object) == 0x000008, "Member 'StreamingVolume_SetEnable::Object' has a wrong offset!");

// Function LevelStreaming.StreamingVolume.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct StreamingVolume_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingVolume_IsEnabled) == 0x000001, "Wrong alignment on StreamingVolume_IsEnabled");
static_assert(sizeof(StreamingVolume_IsEnabled) == 0x000001, "Wrong size on StreamingVolume_IsEnabled");
static_assert(offsetof(StreamingVolume_IsEnabled, ReturnValue) == 0x000000, "Member 'StreamingVolume_IsEnabled::ReturnValue' has a wrong offset!");

// Function LevelStreaming.StreamingVolumeManager.StreamingVolumeManager_DrawSingle_IndexVolume
// 0x0004 (0x0004 - 0x0000)
struct StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume final
{
public:
	int32                                         InVolumeIndexToDraw;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume) == 0x000004, "Wrong alignment on StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume");
static_assert(sizeof(StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume) == 0x000004, "Wrong size on StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume");
static_assert(offsetof(StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume, InVolumeIndexToDraw) == 0x000000, "Member 'StreamingVolumeManager_StreamingVolumeManager_DrawSingle_IndexVolume::InVolumeIndexToDraw' has a wrong offset!");

}

