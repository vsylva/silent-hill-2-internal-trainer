#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalProperties

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct GlobalProperties.GlobalPropertyHandleBase
// 0x0010 (0x0010 - 0x0000)
struct FGlobalPropertyHandleBase
{
public:
	class UGlobalPropertiesSheet*                 Sheet;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   UniqueName;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FGlobalPropertyHandleBase) == 0x000008, "Wrong alignment on FGlobalPropertyHandleBase");
static_assert(sizeof(FGlobalPropertyHandleBase) == 0x000010, "Wrong size on FGlobalPropertyHandleBase");
static_assert(offsetof(FGlobalPropertyHandleBase, Sheet) == 0x000000, "Member 'FGlobalPropertyHandleBase::Sheet' has a wrong offset!");
static_assert(offsetof(FGlobalPropertyHandleBase, UniqueName) == 0x000008, "Member 'FGlobalPropertyHandleBase::UniqueName' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyHandleBool
// 0x0000 (0x0010 - 0x0010)
struct FGlobalPropertyHandleBool final : public FGlobalPropertyHandleBase
{
};
static_assert(alignof(FGlobalPropertyHandleBool) == 0x000008, "Wrong alignment on FGlobalPropertyHandleBool");
static_assert(sizeof(FGlobalPropertyHandleBool) == 0x000010, "Wrong size on FGlobalPropertyHandleBool");

// ScriptStruct GlobalProperties.GlobalPropertyHandleFloat
// 0x0000 (0x0010 - 0x0010)
struct FGlobalPropertyHandleFloat final : public FGlobalPropertyHandleBase
{
};
static_assert(alignof(FGlobalPropertyHandleFloat) == 0x000008, "Wrong alignment on FGlobalPropertyHandleFloat");
static_assert(sizeof(FGlobalPropertyHandleFloat) == 0x000010, "Wrong size on FGlobalPropertyHandleFloat");

// ScriptStruct GlobalProperties.GlobalPropertyBase
// 0x000C (0x000C - 0x0000)
struct FGlobalPropertyBase
{
public:
	class FName                                   UniqueName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_8[0x4];                                        // 0x0008(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGlobalPropertyBase) == 0x000004, "Wrong alignment on FGlobalPropertyBase");
static_assert(sizeof(FGlobalPropertyBase) == 0x00000C, "Wrong size on FGlobalPropertyBase");
static_assert(offsetof(FGlobalPropertyBase, UniqueName) == 0x000000, "Member 'FGlobalPropertyBase::UniqueName' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyHandleInt
// 0x0000 (0x0010 - 0x0010)
struct FGlobalPropertyHandleInt final : public FGlobalPropertyHandleBase
{
};
static_assert(alignof(FGlobalPropertyHandleInt) == 0x000008, "Wrong alignment on FGlobalPropertyHandleInt");
static_assert(sizeof(FGlobalPropertyHandleInt) == 0x000010, "Wrong size on FGlobalPropertyHandleInt");

// ScriptStruct GlobalProperties.GlobalPropertyBool
// 0x0004 (0x0010 - 0x000C)
struct FGlobalPropertyBool final : public FGlobalPropertyBase
{
public:
	bool                                          Value;                                             // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGlobalPropertyBool) == 0x000004, "Wrong alignment on FGlobalPropertyBool");
static_assert(sizeof(FGlobalPropertyBool) == 0x000010, "Wrong size on FGlobalPropertyBool");
static_assert(offsetof(FGlobalPropertyBool, Value) == 0x00000C, "Member 'FGlobalPropertyBool::Value' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyInt
// 0x0004 (0x0010 - 0x000C)
struct FGlobalPropertyInt final : public FGlobalPropertyBase
{
public:
	int32                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FGlobalPropertyInt) == 0x000004, "Wrong alignment on FGlobalPropertyInt");
static_assert(sizeof(FGlobalPropertyInt) == 0x000010, "Wrong size on FGlobalPropertyInt");
static_assert(offsetof(FGlobalPropertyInt, Value) == 0x00000C, "Member 'FGlobalPropertyInt::Value' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyFloat
// 0x0004 (0x0010 - 0x000C)
struct FGlobalPropertyFloat final : public FGlobalPropertyBase
{
public:
	float                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FGlobalPropertyFloat) == 0x000004, "Wrong alignment on FGlobalPropertyFloat");
static_assert(sizeof(FGlobalPropertyFloat) == 0x000010, "Wrong size on FGlobalPropertyFloat");
static_assert(offsetof(FGlobalPropertyFloat, Value) == 0x00000C, "Member 'FGlobalPropertyFloat::Value' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertiesSaveData
// 0x0030 (0x0030 - 0x0000)
struct FGlobalPropertiesSaveData final
{
public:
	TArray<struct FGlobalPropertyBool>            Bools;                                             // 0x0000(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGlobalPropertyInt>             Ints;                                              // 0x0010(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGlobalPropertyFloat>           Floats;                                            // 0x0020(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
static_assert(alignof(FGlobalPropertiesSaveData) == 0x000008, "Wrong alignment on FGlobalPropertiesSaveData");
static_assert(sizeof(FGlobalPropertiesSaveData) == 0x000030, "Wrong size on FGlobalPropertiesSaveData");
static_assert(offsetof(FGlobalPropertiesSaveData, Bools) == 0x000000, "Member 'FGlobalPropertiesSaveData::Bools' has a wrong offset!");
static_assert(offsetof(FGlobalPropertiesSaveData, Ints) == 0x000010, "Member 'FGlobalPropertiesSaveData::Ints' has a wrong offset!");
static_assert(offsetof(FGlobalPropertiesSaveData, Floats) == 0x000020, "Member 'FGlobalPropertiesSaveData::Floats' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyConfigBase
// 0x0018 (0x0018 - 0x0000)
struct FGlobalPropertyConfigBase
{
public:
	class UGlobalPropertiesSheet*                 Sheet;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   UniqueName;                                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   Name;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FGlobalPropertyConfigBase) == 0x000008, "Wrong alignment on FGlobalPropertyConfigBase");
static_assert(sizeof(FGlobalPropertyConfigBase) == 0x000018, "Wrong size on FGlobalPropertyConfigBase");
static_assert(offsetof(FGlobalPropertyConfigBase, Sheet) == 0x000000, "Member 'FGlobalPropertyConfigBase::Sheet' has a wrong offset!");
static_assert(offsetof(FGlobalPropertyConfigBase, UniqueName) == 0x000008, "Member 'FGlobalPropertyConfigBase::UniqueName' has a wrong offset!");
static_assert(offsetof(FGlobalPropertyConfigBase, Name) == 0x000010, "Member 'FGlobalPropertyConfigBase::Name' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyConfigBool
// 0x0008 (0x0020 - 0x0018)
struct FGlobalPropertyConfigBool final : public FGlobalPropertyConfigBase
{
public:
	bool                                          DefaultValue;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGlobalPropertyConfigBool) == 0x000008, "Wrong alignment on FGlobalPropertyConfigBool");
static_assert(sizeof(FGlobalPropertyConfigBool) == 0x000020, "Wrong size on FGlobalPropertyConfigBool");
static_assert(offsetof(FGlobalPropertyConfigBool, DefaultValue) == 0x000018, "Member 'FGlobalPropertyConfigBool::DefaultValue' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyConfigFloat
// 0x0008 (0x0020 - 0x0018)
struct FGlobalPropertyConfigFloat final : public FGlobalPropertyConfigBase
{
public:
	float                                         DefaultValue;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGlobalPropertyConfigFloat) == 0x000008, "Wrong alignment on FGlobalPropertyConfigFloat");
static_assert(sizeof(FGlobalPropertyConfigFloat) == 0x000020, "Wrong size on FGlobalPropertyConfigFloat");
static_assert(offsetof(FGlobalPropertyConfigFloat, DefaultValue) == 0x000018, "Member 'FGlobalPropertyConfigFloat::DefaultValue' has a wrong offset!");

// ScriptStruct GlobalProperties.GlobalPropertyConfigInt
// 0x0008 (0x0020 - 0x0018)
struct FGlobalPropertyConfigInt final : public FGlobalPropertyConfigBase
{
public:
	int32                                         DefaultValue;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGlobalPropertyConfigInt) == 0x000008, "Wrong alignment on FGlobalPropertyConfigInt");
static_assert(sizeof(FGlobalPropertyConfigInt) == 0x000020, "Wrong size on FGlobalPropertyConfigInt");
static_assert(offsetof(FGlobalPropertyConfigInt, DefaultValue) == 0x000018, "Member 'FGlobalPropertyConfigInt::DefaultValue' has a wrong offset!");

}

