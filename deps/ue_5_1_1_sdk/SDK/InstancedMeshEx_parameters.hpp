#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InstancedMeshEx

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function InstancedMeshEx.AnimatedProceduralMeshComponent.GetDynamicMaterial
// 0x0008 (0x0008 - 0x0000)
struct AnimatedProceduralMeshComponent_GetDynamicMaterial final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimatedProceduralMeshComponent_GetDynamicMaterial) == 0x000008, "Wrong alignment on AnimatedProceduralMeshComponent_GetDynamicMaterial");
static_assert(sizeof(AnimatedProceduralMeshComponent_GetDynamicMaterial) == 0x000008, "Wrong size on AnimatedProceduralMeshComponent_GetDynamicMaterial");
static_assert(offsetof(AnimatedProceduralMeshComponent_GetDynamicMaterial, ReturnValue) == 0x000000, "Member 'AnimatedProceduralMeshComponent_GetDynamicMaterial::ReturnValue' has a wrong offset!");

// Function InstancedMeshEx.PaintableStaticMeshComponent.ClearPainting
// 0x0008 (0x0008 - 0x0000)
struct PaintableStaticMeshComponent_ClearPainting final
{
public:
	struct FColor                                 PaintColor;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaMultiplier;                                   // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PaintableStaticMeshComponent_ClearPainting) == 0x000004, "Wrong alignment on PaintableStaticMeshComponent_ClearPainting");
static_assert(sizeof(PaintableStaticMeshComponent_ClearPainting) == 0x000008, "Wrong size on PaintableStaticMeshComponent_ClearPainting");
static_assert(offsetof(PaintableStaticMeshComponent_ClearPainting, PaintColor) == 0x000000, "Member 'PaintableStaticMeshComponent_ClearPainting::PaintColor' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_ClearPainting, AlphaMultiplier) == 0x000004, "Member 'PaintableStaticMeshComponent_ClearPainting::AlphaMultiplier' has a wrong offset!");

// Function InstancedMeshEx.PaintableStaticMeshComponent.PaintSphere
// 0x0030 (0x0030 - 0x0000)
struct PaintableStaticMeshComponent_PaintSphere final
{
public:
	struct FVector                                SphereCenter;                                      // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SphereRadius;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 PaintColor;                                        // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaMultiplier;                                   // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FalloffExponent;                                   // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AdditivePainting;                                  // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PaintableStaticMeshComponent_PaintSphere) == 0x000008, "Wrong alignment on PaintableStaticMeshComponent_PaintSphere");
static_assert(sizeof(PaintableStaticMeshComponent_PaintSphere) == 0x000030, "Wrong size on PaintableStaticMeshComponent_PaintSphere");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, SphereCenter) == 0x000000, "Member 'PaintableStaticMeshComponent_PaintSphere::SphereCenter' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, SphereRadius) == 0x000018, "Member 'PaintableStaticMeshComponent_PaintSphere::SphereRadius' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, PaintColor) == 0x00001C, "Member 'PaintableStaticMeshComponent_PaintSphere::PaintColor' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, AlphaMultiplier) == 0x000020, "Member 'PaintableStaticMeshComponent_PaintSphere::AlphaMultiplier' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, FalloffExponent) == 0x000024, "Member 'PaintableStaticMeshComponent_PaintSphere::FalloffExponent' has a wrong offset!");
static_assert(offsetof(PaintableStaticMeshComponent_PaintSphere, AdditivePainting) == 0x000028, "Member 'PaintableStaticMeshComponent_PaintSphere::AdditivePainting' has a wrong offset!");

// Function InstancedMeshEx.InstancedMeshExComponent.GetDynamicMaterial
// 0x0008 (0x0008 - 0x0000)
struct InstancedMeshExComponent_GetDynamicMaterial final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InstancedMeshExComponent_GetDynamicMaterial) == 0x000008, "Wrong alignment on InstancedMeshExComponent_GetDynamicMaterial");
static_assert(sizeof(InstancedMeshExComponent_GetDynamicMaterial) == 0x000008, "Wrong size on InstancedMeshExComponent_GetDynamicMaterial");
static_assert(offsetof(InstancedMeshExComponent_GetDynamicMaterial, ReturnValue) == 0x000000, "Member 'InstancedMeshExComponent_GetDynamicMaterial::ReturnValue' has a wrong offset!");

}

