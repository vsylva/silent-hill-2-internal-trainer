#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MaterialsSplineCtrl

#include "Basic.hpp"

#include "MaterialsSplineCtrl_classes.hpp"
#include "MaterialsSplineCtrl_parameters.hpp"


namespace SDK
{

// Function MaterialsSplineCtrl.MaterialParamsSplineCtrl.ResetTime
// (Final, Native, Public, BlueprintCallable)

void UMaterialParamsSplineCtrl::ResetTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrl", "ResetTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrl.SetParamCurveByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveBase*                       PCurve                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrl::SetParamCurveByName(class FName Name_0, class UCurveBase* PCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrl", "SetParamCurveByName");

	Params::MaterialParamsSplineCtrl_SetParamCurveByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.PCurve = PCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrl.SetParamLoopAroundByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrl::SetParamLoopAroundByName(class FName Name_0, bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrl", "SetParamLoopAroundByName");

	Params::MaterialParamsSplineCtrl_SetParamLoopAroundByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrl.SetParamSpeedScaleByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrl::SetParamSpeedScaleByName(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrl", "SetParamSpeedScaleByName");

	Params::MaterialParamsSplineCtrl_SetParamSpeedScaleByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrl.SetParamValueScaleByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrl::SetParamValueScaleByName(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrl", "SetParamValueScaleByName");

	Params::MaterialParamsSplineCtrl_SetParamValueScaleByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.ForceBindingsUpdate
// (Final, Native, Public, BlueprintCallable)

void UMaterialParamsSplineCtrlEx::ForceBindingsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "ForceBindingsUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.ResetTime
// (Final, Native, Public, BlueprintCallable)

void UMaterialParamsSplineCtrlEx::ResetTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "ResetTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.SetParamCurveByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveBase*                       PCurve                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrlEx::SetParamCurveByName(class FName Name_0, class UCurveBase* PCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "SetParamCurveByName");

	Params::MaterialParamsSplineCtrlEx_SetParamCurveByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.PCurve = PCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.SetParamLoopAroundByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrlEx::SetParamLoopAroundByName(class FName Name_0, bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "SetParamLoopAroundByName");

	Params::MaterialParamsSplineCtrlEx_SetParamLoopAroundByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.SetParamSpeedScaleByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrlEx::SetParamSpeedScaleByName(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "SetParamSpeedScaleByName");

	Params::MaterialParamsSplineCtrlEx_SetParamSpeedScaleByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MaterialsSplineCtrl.MaterialParamsSplineCtrlEx.SetParamValueScaleByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialParamsSplineCtrlEx::SetParamValueScaleByName(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MaterialParamsSplineCtrlEx", "SetParamValueScaleByName");

	Params::MaterialParamsSplineCtrlEx_SetParamValueScaleByName Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

