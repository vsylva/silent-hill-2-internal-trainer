#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterAnimationExtras

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CharacterAnimationExtras.CharacterAnimationExtrasStatics.ApplyScaleToMorphTarget
// 0x0068 (0x0068 - 0x0000)
struct CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      CurveAndScale;                                     // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ALPHA;                                             // 0x0058(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstanceContext;                               // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget) == 0x000008, "Wrong alignment on CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget");
static_assert(sizeof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget) == 0x000068, "Wrong size on CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget");
static_assert(offsetof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget, AnimInstance) == 0x000000, "Member 'CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget::AnimInstance' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget, CurveAndScale) == 0x000008, "Member 'CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget::CurveAndScale' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget, ALPHA) == 0x000058, "Member 'CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget::ALPHA' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget, AnimInstanceContext) == 0x000060, "Member 'CharacterAnimationExtrasStatics_ApplyScaleToMorphTarget::AnimInstanceContext' has a wrong offset!");

// Function CharacterAnimationExtras.CharacterAnimationExtrasStatics.EnsureLogError
// 0x0028 (0x0028 - 0x0000)
struct CharacterAnimationExtrasStatics_EnsureLogError final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MessageText;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterAnimationExtrasStatics_EnsureLogError) == 0x000008, "Wrong alignment on CharacterAnimationExtrasStatics_EnsureLogError");
static_assert(sizeof(CharacterAnimationExtrasStatics_EnsureLogError) == 0x000028, "Wrong size on CharacterAnimationExtrasStatics_EnsureLogError");
static_assert(offsetof(CharacterAnimationExtrasStatics_EnsureLogError, AnimInstance) == 0x000000, "Member 'CharacterAnimationExtrasStatics_EnsureLogError::AnimInstance' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_EnsureLogError, Valid) == 0x000008, "Member 'CharacterAnimationExtrasStatics_EnsureLogError::Valid' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_EnsureLogError, MessageText) == 0x000010, "Member 'CharacterAnimationExtrasStatics_EnsureLogError::MessageText' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_EnsureLogError, ReturnValue) == 0x000020, "Member 'CharacterAnimationExtrasStatics_EnsureLogError::ReturnValue' has a wrong offset!");

// Function CharacterAnimationExtras.CharacterAnimationExtrasStatics.GetAlphaBoolBlend
// 0x0058 (0x0058 - 0x0000)
struct CharacterAnimationExtrasStatics_GetAlphaBoolBlend final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputAlphaBoolBlend                   AlphaBoolBlend;                                    // 0x0008(0x0048)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Enabled;                                           // 0x0050(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend) == 0x000008, "Wrong alignment on CharacterAnimationExtrasStatics_GetAlphaBoolBlend");
static_assert(sizeof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend) == 0x000058, "Wrong size on CharacterAnimationExtrasStatics_GetAlphaBoolBlend");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend, WorldContextObject) == 0x000000, "Member 'CharacterAnimationExtrasStatics_GetAlphaBoolBlend::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend, AlphaBoolBlend) == 0x000008, "Member 'CharacterAnimationExtrasStatics_GetAlphaBoolBlend::AlphaBoolBlend' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend, Enabled) == 0x000050, "Member 'CharacterAnimationExtrasStatics_GetAlphaBoolBlend::Enabled' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaBoolBlend, ReturnValue) == 0x000054, "Member 'CharacterAnimationExtrasStatics_GetAlphaBoolBlend::ReturnValue' has a wrong offset!");

// Function CharacterAnimationExtras.CharacterAnimationExtrasStatics.GetAlphaFloatBlend
// 0x0040 (0x0040 - 0x0000)
struct CharacterAnimationExtrasStatics_GetAlphaFloatBlend final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputScaleBiasClamp                   AlphaFloatBlend;                                   // 0x0008(0x0030)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend) == 0x000008, "Wrong alignment on CharacterAnimationExtrasStatics_GetAlphaFloatBlend");
static_assert(sizeof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend) == 0x000040, "Wrong size on CharacterAnimationExtrasStatics_GetAlphaFloatBlend");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend, WorldContextObject) == 0x000000, "Member 'CharacterAnimationExtrasStatics_GetAlphaFloatBlend::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend, AlphaFloatBlend) == 0x000008, "Member 'CharacterAnimationExtrasStatics_GetAlphaFloatBlend::AlphaFloatBlend' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend, FloatValue) == 0x000038, "Member 'CharacterAnimationExtrasStatics_GetAlphaFloatBlend::FloatValue' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetAlphaFloatBlend, ReturnValue) == 0x00003C, "Member 'CharacterAnimationExtrasStatics_GetAlphaFloatBlend::ReturnValue' has a wrong offset!");

// Function CharacterAnimationExtras.CharacterAnimationExtrasStatics.GetStateWeight
// 0x0028 (0x0028 - 0x0000)
struct CharacterAnimationExtrasStatics_GetStateWeight final
{
public:
	struct FAnimUpdateContext                     UpdateContext;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FAnimationStateResultReference         Node;                                              // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CharacterAnimationExtrasStatics_GetStateWeight) == 0x000008, "Wrong alignment on CharacterAnimationExtrasStatics_GetStateWeight");
static_assert(sizeof(CharacterAnimationExtrasStatics_GetStateWeight) == 0x000028, "Wrong size on CharacterAnimationExtrasStatics_GetStateWeight");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetStateWeight, UpdateContext) == 0x000000, "Member 'CharacterAnimationExtrasStatics_GetStateWeight::UpdateContext' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetStateWeight, Node) == 0x000010, "Member 'CharacterAnimationExtrasStatics_GetStateWeight::Node' has a wrong offset!");
static_assert(offsetof(CharacterAnimationExtrasStatics_GetStateWeight, ReturnValue) == 0x000020, "Member 'CharacterAnimationExtrasStatics_GetStateWeight::ReturnValue' has a wrong offset!");

}

