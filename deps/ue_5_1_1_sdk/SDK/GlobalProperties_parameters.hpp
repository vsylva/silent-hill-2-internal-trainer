#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalProperties

#include "Basic.hpp"

#include "GlobalProperties_structs.hpp"


namespace SDK::Params
{

// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedBools
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_AddObservedBools final
{
public:
	TArray<struct FGlobalPropertyHandleBool>      NewBools;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_AddObservedBools) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_AddObservedBools");
static_assert(sizeof(GlobalPropertiesEventsComponent_AddObservedBools) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_AddObservedBools");
static_assert(offsetof(GlobalPropertiesEventsComponent_AddObservedBools, NewBools) == 0x000000, "Member 'GlobalPropertiesEventsComponent_AddObservedBools::NewBools' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedFloats
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_AddObservedFloats final
{
public:
	TArray<struct FGlobalPropertyHandleFloat>     NewFloats;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_AddObservedFloats) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_AddObservedFloats");
static_assert(sizeof(GlobalPropertiesEventsComponent_AddObservedFloats) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_AddObservedFloats");
static_assert(offsetof(GlobalPropertiesEventsComponent_AddObservedFloats, NewFloats) == 0x000000, "Member 'GlobalPropertiesEventsComponent_AddObservedFloats::NewFloats' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesEventsComponent.AddObservedInts
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_AddObservedInts final
{
public:
	TArray<struct FGlobalPropertyHandleInt>       NewInts;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_AddObservedInts) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_AddObservedInts");
static_assert(sizeof(GlobalPropertiesEventsComponent_AddObservedInts) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_AddObservedInts");
static_assert(offsetof(GlobalPropertiesEventsComponent_AddObservedInts, NewInts) == 0x000000, "Member 'GlobalPropertiesEventsComponent_AddObservedInts::NewInts' has a wrong offset!");

// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.BoolValueChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature final
{
public:
	class UGlobalPropertiesEventsComponent*       Events;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleBool              Property;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature");
static_assert(sizeof(GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature) == 0x000020, "Wrong size on GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature");
static_assert(offsetof(GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature, Events) == 0x000000, "Member 'GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature::Events' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature, Property) == 0x000008, "Member 'GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature::Property' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature, Value) == 0x000018, "Member 'GlobalPropertiesEventsComponent_BoolValueChanged__DelegateSignature::Value' has a wrong offset!");

// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.FloatValueChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature final
{
public:
	class UGlobalPropertiesEventsComponent*       Events;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Property;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature");
static_assert(sizeof(GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature) == 0x000020, "Wrong size on GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature");
static_assert(offsetof(GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature, Events) == 0x000000, "Member 'GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature::Events' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature, Property) == 0x000008, "Member 'GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature::Property' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature, Value) == 0x000018, "Member 'GlobalPropertiesEventsComponent_FloatValueChanged__DelegateSignature::Value' has a wrong offset!");

// DelegateFunction GlobalProperties.GlobalPropertiesEventsComponent.IntValueChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature final
{
public:
	class UGlobalPropertiesEventsComponent*       Events;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Property;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature");
static_assert(sizeof(GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature) == 0x000020, "Wrong size on GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature");
static_assert(offsetof(GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature, Events) == 0x000000, "Member 'GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature::Events' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature, Property) == 0x000008, "Member 'GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature::Property' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature, Value) == 0x000018, "Member 'GlobalPropertiesEventsComponent_IntValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedBools
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_SetObservedBools final
{
public:
	TArray<struct FGlobalPropertyHandleBool>      NewBools;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_SetObservedBools) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_SetObservedBools");
static_assert(sizeof(GlobalPropertiesEventsComponent_SetObservedBools) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_SetObservedBools");
static_assert(offsetof(GlobalPropertiesEventsComponent_SetObservedBools, NewBools) == 0x000000, "Member 'GlobalPropertiesEventsComponent_SetObservedBools::NewBools' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedFloats
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_SetObservedFloats final
{
public:
	TArray<struct FGlobalPropertyHandleFloat>     NewFloats;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_SetObservedFloats) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_SetObservedFloats");
static_assert(sizeof(GlobalPropertiesEventsComponent_SetObservedFloats) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_SetObservedFloats");
static_assert(offsetof(GlobalPropertiesEventsComponent_SetObservedFloats, NewFloats) == 0x000000, "Member 'GlobalPropertiesEventsComponent_SetObservedFloats::NewFloats' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesEventsComponent.SetObservedInts
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesEventsComponent_SetObservedInts final
{
public:
	TArray<struct FGlobalPropertyHandleInt>       NewInts;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesEventsComponent_SetObservedInts) == 0x000008, "Wrong alignment on GlobalPropertiesEventsComponent_SetObservedInts");
static_assert(sizeof(GlobalPropertiesEventsComponent_SetObservedInts) == 0x000010, "Wrong size on GlobalPropertiesEventsComponent_SetObservedInts");
static_assert(offsetof(GlobalPropertiesEventsComponent_SetObservedInts, NewInts) == 0x000000, "Member 'GlobalPropertiesEventsComponent_SetObservedInts::NewInts' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.AddToGlobalFloat
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_AddToGlobalFloat final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_AddToGlobalFloat) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_AddToGlobalFloat");
static_assert(sizeof(GlobalPropertiesStaticLibrary_AddToGlobalFloat) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_AddToGlobalFloat");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalFloat, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalFloat::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalFloat, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalFloat::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalFloat, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalFloat::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalFloat, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalFloat::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.AddToGlobalInt
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_AddToGlobalInt final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_AddToGlobalInt) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_AddToGlobalInt");
static_assert(sizeof(GlobalPropertiesStaticLibrary_AddToGlobalInt) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_AddToGlobalInt");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalInt, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalInt::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalInt, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalInt::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalInt, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalInt::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_AddToGlobalInt, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_AddToGlobalInt::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.DivideGlobalFloatBy
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_DivideGlobalFloatBy final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_DivideGlobalFloatBy");
static_assert(sizeof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_DivideGlobalFloatBy");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalFloatBy::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalFloatBy::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalFloatBy::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalFloatBy, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalFloatBy::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.DivideGlobalIntBy
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_DivideGlobalIntBy final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_DivideGlobalIntBy");
static_assert(sizeof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_DivideGlobalIntBy");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalIntBy::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalIntBy::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalIntBy::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_DivideGlobalIntBy, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_DivideGlobalIntBy::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalBool
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_GetGlobalBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleBool              Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_GetGlobalBool) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_GetGlobalBool");
static_assert(sizeof(GlobalPropertiesStaticLibrary_GetGlobalBool) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_GetGlobalBool");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalBool, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_GetGlobalBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalBool, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_GetGlobalBool::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalBool, ReturnValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_GetGlobalBool::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalFloat
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_GetGlobalFloat final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_GetGlobalFloat) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_GetGlobalFloat");
static_assert(sizeof(GlobalPropertiesStaticLibrary_GetGlobalFloat) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_GetGlobalFloat");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalFloat, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_GetGlobalFloat::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalFloat, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_GetGlobalFloat::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalFloat, ReturnValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_GetGlobalFloat::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.GetGlobalInt
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_GetGlobalInt final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_GetGlobalInt) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_GetGlobalInt");
static_assert(sizeof(GlobalPropertiesStaticLibrary_GetGlobalInt) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_GetGlobalInt");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalInt, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_GetGlobalInt::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalInt, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_GetGlobalInt::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_GetGlobalInt, ReturnValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_GetGlobalInt::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.MultiplyGlobalFloatBy
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy");
static_assert(sizeof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalFloatBy::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.MultiplyGlobalIntBy
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy");
static_assert(sizeof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_MultiplyGlobalIntBy::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.ResetGlobalProperties
// 0x0010 (0x0010 - 0x0000)
struct GlobalPropertiesStaticLibrary_ResetGlobalProperties final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UGlobalPropertiesSheet*           Sheet;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_ResetGlobalProperties) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_ResetGlobalProperties");
static_assert(sizeof(GlobalPropertiesStaticLibrary_ResetGlobalProperties) == 0x000010, "Wrong size on GlobalPropertiesStaticLibrary_ResetGlobalProperties");
static_assert(offsetof(GlobalPropertiesStaticLibrary_ResetGlobalProperties, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_ResetGlobalProperties::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_ResetGlobalProperties, Sheet) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_ResetGlobalProperties::Sheet' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalBool
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_SetGlobalBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleBool              Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          NewValue;                                          // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_SetGlobalBool) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_SetGlobalBool");
static_assert(sizeof(GlobalPropertiesStaticLibrary_SetGlobalBool) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_SetGlobalBool");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalBool, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_SetGlobalBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalBool, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_SetGlobalBool::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalBool, NewValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_SetGlobalBool::NewValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalFloat
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_SetGlobalFloat final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         NewValue;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_SetGlobalFloat) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_SetGlobalFloat");
static_assert(sizeof(GlobalPropertiesStaticLibrary_SetGlobalFloat) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_SetGlobalFloat");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalFloat, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_SetGlobalFloat::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalFloat, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_SetGlobalFloat::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalFloat, NewValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_SetGlobalFloat::NewValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.SetGlobalInt
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_SetGlobalInt final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         NewValue;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_SetGlobalInt) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_SetGlobalInt");
static_assert(sizeof(GlobalPropertiesStaticLibrary_SetGlobalInt) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_SetGlobalInt");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalInt, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_SetGlobalInt::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalInt, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_SetGlobalInt::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SetGlobalInt, NewValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_SetGlobalInt::NewValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.SubtractFromGlobalFloat
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleFloat             Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat");
static_assert(sizeof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalFloat::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.SubtractFromGlobalInt
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_SubtractFromGlobalInt final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleInt               Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_SubtractFromGlobalInt");
static_assert(sizeof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_SubtractFromGlobalInt");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalInt::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalInt::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt, Value) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalInt::Value' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_SubtractFromGlobalInt, ReturnValue) == 0x00001C, "Member 'GlobalPropertiesStaticLibrary_SubtractFromGlobalInt::ReturnValue' has a wrong offset!");

// Function GlobalProperties.GlobalPropertiesStaticLibrary.ToggleGlobalBool
// 0x0020 (0x0020 - 0x0000)
struct GlobalPropertiesStaticLibrary_ToggleGlobalBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGlobalPropertyHandleBool              Handle;                                            // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GlobalPropertiesStaticLibrary_ToggleGlobalBool) == 0x000008, "Wrong alignment on GlobalPropertiesStaticLibrary_ToggleGlobalBool");
static_assert(sizeof(GlobalPropertiesStaticLibrary_ToggleGlobalBool) == 0x000020, "Wrong size on GlobalPropertiesStaticLibrary_ToggleGlobalBool");
static_assert(offsetof(GlobalPropertiesStaticLibrary_ToggleGlobalBool, WorldContextObject) == 0x000000, "Member 'GlobalPropertiesStaticLibrary_ToggleGlobalBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_ToggleGlobalBool, Handle) == 0x000008, "Member 'GlobalPropertiesStaticLibrary_ToggleGlobalBool::Handle' has a wrong offset!");
static_assert(offsetof(GlobalPropertiesStaticLibrary_ToggleGlobalBool, ReturnValue) == 0x000018, "Member 'GlobalPropertiesStaticLibrary_ToggleGlobalBool::ReturnValue' has a wrong offset!");

}

